<suite xmlns="http://www.comlab.ox.ac.uk/abc" xmlns:ns="http://www.comlab.ox.ac.uk/abc"> 
 <ajc-test title="static and non-static before methods -- one file" num="7" keywords="from-base" dir="base/test100" abccomment="I have put this comment in as a test, and this is a very          long one over multiple lines too. LJH">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="static and non-static before methods -- many files" num="8" keywords="from-base" dir="base/test101">
        <compile files="Driver.java,Foo.java,Bar.java,Pos.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="this redirection in non-static before methods" num="9" keywords="from-base" dir="base/test102">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="DEPRECATED: introductions" num="10" keywords="from-base" dir="base/test103">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="before constructors -- one file" num="11" keywords="from-base" dir="base/test104">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="advise weaves find methods typed to builtins or non-woven classes" num="12" keywords="from-base" dir="base/test105">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="make sure new weaves work inside of packages" num="13" keywords="from-base" dir="base/test106">
        <compile files="Driver.java,pkg/Obj.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="make sure new weaves work inside of packages (again)" num="14" keywords="from-base" dir="base/test107">
        <compile files="Driver.java,C1.java,C2.java,pack1/Foo.java,pack2/Foo.java,pack3/Foo.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="Inheritance of class and aspect vars in weaves" num="15" keywords="from-base" dir="base/test108">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="Accessibility of class and aspect members from inside weaves" num="16" keywords="from-base" dir="base/test109">
        <compile files="Driver.java,Aspect.java,Foo.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="Packaged aspects referring to packaged classes" num="17" keywords="from-base" dir="base/test110">
        <compile files="Driver.java,pAspect/Aspect.java,pClass/Class.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="Inheritance of methods advised by aspects" num="18" keywords="from-base" dir="base/test111">
        <compile files="Driver.java,SubClass.java,SuperClass.java,SuperAspect.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="Inherited weaves on constructor" num="19" keywords="from-base" dir="base/test112">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="Initializers in Aspect and Class Bodies" num="20" keywords="from-base" dir="base/test113">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="Weaver Resolution of method names in method calls passed as args" num="21" keywords="from-base" dir="base/test114">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="DEPRECATED: Introduce constructor with class inheritance" num="22" keywords="from-base" dir="base/test115">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="empty and singular patterns on modifiers and throws" num="23" keywords="from-base" dir="base/test116">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="DEPRECATED: introduce of variables" num="24" keywords="from-base,knownLimitation" dir="base/test117" abccomment="ajc 1.2 still does not implement static IT fields and neither does abc. ODM 4/7/04">
        <compile files="Driver.java">
          <ajcmessage kind="ignore"></ajcmessage>
          <message line="97" kind="error"></message>  
        </compile>
        
    </ajc-test>
<ajc-test title="DEPRECATED: Introduce of constructors" num="25" keywords="from-base" dir="base/test118" abccomment="this fails because we don't match I.new(..) correctly. ODM 4/7/04">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="Local declarations in advise bodies" num="26" keywords="from-base" dir="base/test119">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="unicodes and literals" num="27" keywords="from-base,purejava" dir="base/test120">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="advises on introduced methods and constructors" num="28" keywords="from-base" dir="base/test121" abccomment="test extra parameters introduced by ITDs. Fixed ODM Jul 5">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="DEPRECATED: Method introduction into interface implemented by abstract class" num="29" keywords="from-base" dir="base/test122">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="Crossing super calls in constructors" num="30" keywords="from-base" dir="base/test123">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="empty modifier pattern" num="31" keywords="from-base" dir="base/test124">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="Alpha conversion of argument names in designators" num="32" keywords="from-base" dir="base/test125">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="For Statement" num="33" keywords="from-base,purejava" dir="base/test126">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="advice uses its own formals to get actuals" num="34" keywords="from-base" dir="base/test127">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="DEPRECATED:  introduce weaves can use this" num="35" keywords="from-base" dir="base/test128">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="DEPRECATED: introduce of abstract methods works" num="36" keywords="from-base" dir="base/test129">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="multiple arounds successfully intercept and return own values" num="37" keywords="from-base" dir="base/test130">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="proper matching of overloaded constructors" num="38" keywords="from-base" dir="base/test132">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="correct super call lookup for method().name()" num="39" keywords="from-base,purejava" dir="base/test133">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="proper handling of formals in catch advice" num="40" keywords="from-base" dir="base/test134">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="proper values for thisJoinPoint attributes" num="41" keywords="from-base" dir="base/test135" abccomment="Used to be a problem with disambiguation of pointcuts. Fixed that July 6.                     Now seems to fail because of advice and aspect inheritance. ODM">
        <compile files="Driver.java,JoinPointFields.java,TopFoo.java,pack/PackFoo.java,pack/JoinPointFields.java,pack/PackJoinPointFields.java"></compile>
        <run class="test135.Driver"></run>
    </ajc-test>
<ajc-test title="supers, supers, supers" num="42" keywords="from-base" dir="base/test136">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="operations on private and protected aspect members (++, -- in partciular)" num="43" keywords="from-base" dir="base/test137">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="only register things once" num="44" keywords="from-base" dir="base/test138">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="inner aspects and around" num="45" keywords="from-base" dir="base/test139">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="aspect inheritance and advice, introduction" num="46" keywords="from-base" dir="base/test140">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="thisResultObject for primitives" num="47" keywords="from-base" dir="base/test141">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="introductions calling super." num="48" keywords="from-base" dir="base/test142">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="allow one argument calls even when there's a comma in the arglist" pr="384" num="49" keywords="from-base" dir="base">
        <compile files="OneArgCallsIsOkay.java"></compile>
        <run class="OneArgCallsIsOkay"></run>
    </ajc-test>
<ajc-test title="advice on calls to static methods even works when called on super" num="50" keywords="from-base" dir="new">
        <compile files="SuperStaticCallJoinPoint.java"></compile>
        <run class="SuperStaticCallJoinPoint"></run>
    </ajc-test>
<ajc-test title="combined logic expression (handling coericions vs. parens)" pr="99" num="51" keywords="from-java,purejava" dir="new">
        <compile files="CombinedLogic.java"></compile>
        <run class="CombinedLogic"></run>
    </ajc-test>
<ajc-test title="comment after class closes (with no new line at end)" pr="99" num="52" keywords="from-java,purejava" dir="new">
        <compile files="CommentAfterClass.java"></compile>
        <run class="CommentAfterClass"></run>
    </ajc-test>
<ajc-test title="handle multiple nested inner classes" num="53" keywords="from-java" dir="new" abccomment="can't find constructor for                     javax.swing.JComponent.AccessibleJComponent()                   - works with javac                   - works with soot from class file                   - does not work with j2j                   - does not work with jlc, reported to Nate June 30/04 LJH                   FIXED July 1/04 LJH">
      <abckeywords> <laurie></laurie> <nate></nate> </abckeywords>
        <compile files="InnerHell.java"></compile>
        <run class="InnerHell"></run>
    </ajc-test>
<ajc-test title="multi-dimensional array initializers" pr="108" num="54" keywords="from-java,purejava" dir="new">
        <compile files="MultiArrays.java"></compile>
        <run class="MultiArrays"></run>
    </ajc-test>
<ajc-test title="probelm with the generated names of exceptions" pr="125" num="55" keywords="from-java,purejava" dir="new">
        <compile files="ExceptionNames.java"></compile>
        <run class="ExceptionNames"></run>
    </ajc-test>
<ajc-test title="checks if the class field can be used on all of the primitive types" pr="109" num="56" keywords="from-java,purejava" dir="new" abccomment="works for ajc, jlc                      doesn't work for j2j or abc                     file ClassFieldOnPrimitiveTypeLJH.java sent to Jennifer                        June 30/04 LJH                     FIXED July 1/04 LJH">
        <compile files="ClassFieldOnPrimitiveType.java"></compile>
        <run class="ClassFieldOnPrimitiveType"></run>
    </ajc-test>
<ajc-test title="advice on a static method" pr="151" num="57" keywords="from-java" dir="new/volatileKeyword">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="inner constructor syntax causes compile error" pr="192" num="58" keywords="from-java" dir="new/innerConsSyntax" abccomment="fails for abc,                      classCastException in ConstructorCallShadowMatch                   works for soot,j2j,jlc,javac and ajc                   file DriverLJH.java sent to Ganesh June 30/04  LJH ">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="widening of method parameters to match javac" pr="195" num="59" keywords="from-java" dir="new/paramWidening">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="equals method on quoted strings" pr="214" num="60" keywords="from-java" dir="pureJava/equalsMethOnStr">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="parenthesized string literals matching primitive type names" pr="313" num="61" keywords="from-java" dir="new">
        <compile files="ParenPrimitive.java"></compile>
        <run class="ParenPrimitive"></run>
    </ajc-test>
<ajc-test title="anonymous inner class" pr="294" num="62" keywords="from-java" dir="pureJava/anonInnerClass">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="simple type coercions tests" num="63" keywords="from-java" dir="new">
        <compile files="TypeCoercions.java"></compile>
        <run class="TypeCoercions"></run>
    </ajc-test>
<ajc-test title="order of type declarations shouldn't matter" num="64" keywords="from-java" dir="new" abccomment="doesn't work for abc,  No field this$0 in class Second                     same behavior for soot -f src-prec java --app                      Reported to Jennifer on June 30/04.  LJH                      Fixed July 1/04 LJH">
        <compile files="OrderOfTypes.java"></compile>
        <run class="OrderOfTypes"></run>
    </ajc-test>
<ajc-test title="parsing of parenthesized 'this' (in returns)" num="65" keywords="from-java" dir="pureJava">
        <compile files="ReturnThis.java"></compile>
        <run class="ReturnThis"></run>
    </ajc-test>
<ajc-test title="Scanner non recognizing strictfp." num="66" keywords="from-java" dir="new">
        <compile files="StrictFp.java"></compile>
        <run class="StrictFp"></run>
    </ajc-test>
<ajc-test title="Strings are folded and interned correctly" num="67" keywords="from-java" dir="pureJava">
        <compile files="StringFold.java"></compile>
        <run class="StringFold"></run>
    </ajc-test>
<ajc-test title="Cast binds tighter than equality tests" num="68" keywords="from-java" dir="pureJava">
        <compile files="CastAndBinary.java"></compile>
        <run class="CastAndBinary"></run>
    </ajc-test>
<ajc-test title="Boundary base values can be parsed" num="69" keywords="from-java" dir="pureJava">
        <compile files="BoundaryNums.java"></compile>
        <run class="BoundaryNums"></run>
    </ajc-test>
<ajc-test title="State is passed correctly across nested annonymous inners" num="70" keywords="from-java" dir="pureJava">
        <compile files="NestedInners.java"></compile>
        <run class="NestedInners"></run>
    </ajc-test>
<ajc-test title="?: expressions should typecheck in interesting ways" num="71" keywords="from-java" dir="pureJava">
        <compile files="TriTestTypecheck.java"></compile>
        <run class="TriTestTypecheck"></run>
    </ajc-test>
<ajc-test title="cast expressions should allow casts to/from interfaces at compile-time." num="72" keywords="from-java" dir="pureJava">
        <compile files="InterfaceCast.java"></compile>
        <run class="InterfaceCast"></run>
    </ajc-test>
<ajc-test title="various anonymous inner classes plus super types tests" num="73" keywords="from-java" dir="pureJava">
        <compile files="InnerSuper.java"></compile>
        <run class="InnerSuper"></run>
    </ajc-test>
<ajc-test title="Doesn't parse an array-returning method that throws an exception" num="74" keywords="from-java,purejava" dir="new">
        <compile files="ArrayMethod.java"></compile>
        <run class="ArrayMethod"></run>
    </ajc-test>
<ajc-test title="Crashes when a lot of zeros are in front of a double variable [!!! purejava]" num="75" keywords="from-java" dir="new">
        <compile files="Zeros.java"></compile>
        <run class="Zeros"></run>
    </ajc-test>
<ajc-test title="Various comment syntaxes should be handled." num="76" keywords="from-java" dir="pureJava">
        <compile files="CommentSyntax.java"></compile>
        <run class="CommentSyntax"></run>
    </ajc-test>
<ajc-test title="Abstract inner classes across package boundaries" num="77" keywords="from-java" dir="pureJava/abstractInner">
        <compile files="C.java,pkg/A.java"></compile>
        <run class="C"></run>
    </ajc-test>
<ajc-test title="inner classes accessing outers and some more inner class names" num="78" keywords="from-java" dir="pureJava" abccomment="works outside of testHarness, but gets a             reflection error from inside testHarness, may be fixed with             new test harness. LJH               FIXED July 2/04 LJH">
        <compile files="InnerAccess.java"></compile>
        <run class="InnerAccess"></run>
    </ajc-test>
<ajc-test title="remember to cast folded values down to the proper types." num="79" keywords="from-java" dir="pureJava">
        <compile files="CastingFoldedValues.java"></compile>
        <run class="CastingFoldedValues"></run>
    </ajc-test>
<ajc-test title="inner classes can be built using protected constructors in super" num="80" keywords="from-java" dir="pureJava">
        <compile files="VariousConstructors.java"></compile>
        <run class="VariousConstructors"></run>
    </ajc-test>
<ajc-test title="check that nested constructions of local classes work" num="81" keywords="from-java,purejava" dir="pureJava">
        <compile files="NestedConstructionsOfLocalClasses.java"></compile>
        <run class="NestedConstructionsOfLocalClasses"></run>
    </ajc-test>
<ajc-test title="Make sure anonymous classes can have non-nullary constructors" num="82" keywords="from-java,purejava" dir="pureJava">
        <compile files="NonNullaryAnonymous.java"></compile>
        <run class="NonNullaryAnonymous"></run>
    </ajc-test>
<ajc-test title="Full names are dropped from inner interfaces" pr="417" num="83" keywords="from-java,purejava" dir="new">
        <compile files="PR417a.java"></compile>
        <run class="PR417a"></run>
    </ajc-test>
<ajc-test title="Making sure full names stay on static inner classes" pr="417" num="84" keywords="from-java,purejava" dir="new">
        <compile files="PR417b.java"></compile>
        <run class="PR417b"></run>
    </ajc-test>
<ajc-test title="The current AspectJ compiler cannot parse qualified superclass constructor invocations" pr="401" num="85" keywords="from-java" dir="pureJava">
        <compile files="QualifiedSuperClassConstructorInvocations_PR401.java"></compile>
        <run class="QualifiedSuperClassConstructorInvocations_PR401"></run>
    </ajc-test>
<ajc-test title="More thourough test of static members using full names" pr="421" num="86" keywords="from-java" dir="pureJava">
        <compile files="Statics.java,StaticMembers_PR421.java,p1/C1.java,p1/P1Statics.java,p1/subp1/SubC1.java,p1/p2/P1P2Statics.java"></compile>
        <run class="StaticMembers_PR421"></run>
    </ajc-test>
<ajc-test title="More thourough test of static members using imports" pr="421" num="87" keywords="from-java" dir="pureJava">
        <compile files="Statics.java,StaticMembersImports_PR421.java,p1/C1.java,p1/P1Statics.java,p1/subp1/SubC1.java,p1/p2/P1P2Statics.java"></compile>
        <run class="StaticMembersImports_PR421"></run>
    </ajc-test>
<ajc-test title="Looking in class Java for java.lang.String WITH separate compilation" pr="437" num="88" keywords="from-java" dir="pureJava/conflictingPackageNames">
        <compile files="Java.java"></compile>
        <compile files="Main.java"></compile>
        <run class="Main"></run>
    </ajc-test>
<ajc-test title="Looking in class Java for java.lang.String WITHOUT separate compilation" pr="437" num="89" keywords="from-java" dir="pureJava/conflictingPackageNames">
        <compile files="Main.java,Java.java"></compile>
        <run class="Main"></run>
    </ajc-test>
<ajc-test title="Looking in class Java for java.lang.String WITH separate compilation with packages" pr="437" num="90" keywords="from-java" dir="pureJava/conflictingPackageNamesWithPackages">
        <compile files="Java.java"></compile>
        <compile files="Main.java"></compile>
        <run class="conflictingPackageNamesWithPackages.Main"></run>
    </ajc-test>
<ajc-test title="Looking in class Java for java.lang.String WITHOUT separate compilation with packages" pr="437" num="91" keywords="from-java" dir="pureJava/conflictingPackageNamesWithPackages">
        <compile files="Main.java,Java.java"></compile>
        <run class="conflictingPackageNamesWithPackages.Main"></run>
    </ajc-test>
<ajc-test title="Testing ternary operations." num="92" keywords="from-java" dir="pureJava">
        <compile files="MultiTernaryOps.java"></compile>
        <run class="MultiTernaryOps"></run>
    </ajc-test>
<ajc-test title="Lifting locals in switch statements." num="93" keywords="from-java" dir="pureJava">
        <compile files="SwitchStmtLocals.java"></compile>
        <run class="SwitchStmtLocals"></run>
    </ajc-test>
<ajc-test title="Getting confused when looking up method signatures" num="94" keywords="from-java" dir="pureJava">
        <compile files="MethodSigs.java"></compile>
        <run class="MethodSigs"></run>
    </ajc-test>
<ajc-test title="Not recognizing the chars '\0', '\1', '\2', '\3', '\4', '\5', '\6', '\7'" num="95" keywords="from-java" dir="pureJava">
        <compile files="Chars.java"></compile>
        <run class="Chars"></run>
    </ajc-test>
<ajc-test title="Test chars '\0', '\1', '\2', '\3', '\4', '\5', '\6', '\7' with a case statement" num="96" keywords="from-java" dir="pureJava">
        <compile files="CaseClauses.java"></compile>
        <run class="CaseClauses"></run>
    </ajc-test>
<ajc-test title="Checking character values with all the unicode chars." num="97" keywords="from-java" dir="pureJava" abccomment="Required the fixed jasmin to handle constant                   pool offsets > 32K.  Fixed July 1/04 LJH ">
        <compile files="CharsUnicode.java"></compile>
        <run class="CharsUnicode"></run>
    </ajc-test>
<ajc-test title="Trouble finding methods with the same name and different parameter types" num="98" keywords="from-java" dir="pureJava">
        <compile files="MethodsWithTheSameName.java"></compile>
        <run class="MethodsWithTheSameName"></run>
    </ajc-test>
<ajc-test title="Binding non-public static inner classes of interfaces in other packages" num="99" keywords="from-java" dir="pureJava">
        <compile files="StaticClassesInInterfaces.java,anotherPackage/AnotherPackageInterface.java"></compile>
        <run class="StaticClassesInInterfaces"></run>
    </ajc-test>
<ajc-test title="Not recognizing the octal chars '\0', '\1', '\2', '\3', '\4', '\5', '\6', '\7'" num="100" keywords="from-java" dir="pureJava">
        <compile files="OctalChars.java"></compile>
        <run class="OctalChars"></run>
    </ajc-test>
<ajc-test title="Members with the same name as their package cause confusion with fully-qualified names." num="101" keywords="from-java" dir="pureJava">
        <compile files="samenames/Main.java,samenames/Other.java"></compile>
        <run class="samenames.Main"></run>
    </ajc-test>
<ajc-test title="Fully-qual'ed names with same start as variable names" num="102" keywords="from-java" dir="pureJava">
        <compile files="FullNames.java"></compile>
        <run class="FullNames"></run>
    </ajc-test>
<ajc-test title="Fully qualifying inner classes within annonymous classes causes problems." num="103" keywords="from-java" dir="pureJava">
        <compile files="InnerClassesInAnnonymousClasses.java"></compile>
        <run class="InnerClassesInAnnonymousClasses"></run>
    </ajc-test>
<ajc-test title="Calls to methods in outer annonymous classes are being qual's incorrectly with 'this'" num="104" keywords="from-java" dir="pureJava">
        <compile files="MisplacedThisInAnnonymousInnerClasses.java"></compile>
        <run class="MisplacedThisInAnnonymousInnerClasses"></run>
    </ajc-test>
<ajc-test title="Reading inner classes from source and bytecode (1) -- was failing" num="105" keywords="from-java" dir="pureJava/innersFromSourceAndBytecode">
        <compile files="C.java,D.java"></compile>
        <compile includeClassesDir="true" files="Main.java,C.java"></compile>
        <run class="Main"></run>
    </ajc-test>
<ajc-test title="Reading inner classes from source and bytecode (2)" num="106" keywords="from-java" dir="pureJava/innersFromSourceAndBytecode">
        <compile files="Main.java,C.java,D.java"></compile>
        <run class="Main"></run>
    </ajc-test>
<ajc-test title="Reading inner classes from source and bytecode (3)" num="107" keywords="from-java" dir="pureJava/innersFromSourceAndBytecode">
        <compile files="C.java,D.java"></compile>
        <compile includeClassesDir="true" files="Main.java,C.java,D.java"></compile>
        <run class="Main"></run>
    </ajc-test>
<ajc-test title="Not lifting types correctly with bytes and shorts with ternary ops" num="108" keywords="from-java" dir="pureJava">
        <compile files="TernaryPrimitiveOps.java"></compile>
        <run class="TernaryPrimitiveOps"></run>
    </ajc-test>
<ajc-test title="Not looking up methods inside of anonymous declarations correctly." num="109" keywords="from-java" dir="pureJava">
        <compile files="AnonymousMethodLookup.java"></compile>
        <run class="AnonymousMethodLookup"></run>
    </ajc-test>
<ajc-test title="Resolving extended classes with array parameters" num="110" keywords="from-java" dir="pureJava">
        <compile files="ResolvingArrayParameters.java"></compile>
        <run class="ResolvingArrayParameters"></run>
    </ajc-test>
<ajc-test title="Assignments as second arguments in ternary operators." num="111" keywords="from-java" dir="pureJava">
        <compile files="TernaryAssignments.java"></compile>
        <run class="TernaryAssignments"></run>
    </ajc-test>
<ajc-test title="Using 'aspect' as identifier is legal TODO" num="112" keywords="from-java,purejava" dir="pureJava" abccomment="abc doesn't allow keywords                        need to allow for syntax error. LJH ">
        <compile files="KeywordAspect.java">
          <message line="7" kind="error"></message> 
          <message line="7" kind="error"></message> 
          <message line="10" kind="error"></message> 
          <message line="13" kind="error"></message> 
          <message line="14" kind="error"></message> 
          <message line="18" kind="error"></message> 
          <message line="18" kind="error"></message> 
          <ajcmessage kind="ignore"></ajcmessage>
        </compile>
        <ajcrun class="KeywordAspect"></ajcrun>
    </ajc-test>
<ajc-test title="Using 'pointcut' as identifier is legal TODO" num="113" keywords="from-java,purejava" dir="pureJava" abccomment="abc doesn't allow keywords, added error. LJH ">
        <compile files="KeywordPointcut.java">
          <message line="7" kind="error"></message>
          <message line="7" kind="error"></message>
          <message line="7" kind="error"></message>
          <message line="8" kind="error"></message> 
          <message line="8" kind="error"></message> 
          <message line="9" kind="error"></message> 
          <message line="9" kind="error"></message> 
           <ajcmessage kind="ignore"></ajcmessage>
        </compile>
        <ajcrun class="KeywordPointcut"></ajcrun>
    </ajc-test>
<ajc-test title="Conflicting inner classes with interfaces." num="114" keywords="from-java" dir="pureJava">
        <compile files="PR413.java"></compile>
        <run class="PR413"></run>
    </ajc-test>
<ajc-test title="confusions of casts and parens" num="116" keywords="from-java" dir="pureJava">
        <compile files="CastVsParen.java"></compile>
        <run class="CastVsParen"></run>
    </ajc-test>
<ajc-test title="default constructors seen by inner classes subtyping outers" num="117" keywords="from-java" dir="pureJava">
        <compile files="DefaultConsAndInner.java"></compile>
        <run class="DefaultConsAndInner"></run>
    </ajc-test>
<ajc-test title="folding fields set to anonymous instances containing self-references" num="118" keywords="from-java" dir="pureJava">
        <compile files="AnonFolding.java"></compile>
        <run class="AnonFolding"></run>
    </ajc-test>
<ajc-test title="finally at the end of a method that needs to return" num="119" keywords="from-java" dir="pureJava" abccomment="incorrect code generation by j2j for m().  Problem                   reported to Jennifer July 1/04.  LJH                    FIXED July 2/04 LJH">
        <compile files="FinallyAndReturns.java"></compile>
        <run class="FinallyAndReturns"></run>
    </ajc-test>
<ajc-test title="return;;; is not really legal" num="120" keywords="from-java,purejava" dir="pureJava" abccomment="ajc doesn't report one error per spurious ;, abc does.                   Added additional messages. PA/AGS">
        <compile files="ReachableEmpty.java">
            <ajcmessage line="5" kind="error"></ajcmessage>
            <ajcmessage line="9" kind="error"></ajcmessage>
            <ajcmessage line="13" kind="error"></ajcmessage>
            <ajcmessage line="17" kind="error"></ajcmessage>
            <message line="5" kind="error"></message>
            <message line="9" kind="error"></message>
            <message line="13" kind="error"></message>
            <message line="17" kind="error"></message>
            <message line="17" kind="error"></message>
            <message line="17" kind="error"></message>
            <message line="17" kind="error"></message>
            <message line="17" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="ajc treating Throwable as checked, issuing error if not found" num="121" keywords="from-java,purejava" dir="new">
        <compile files="FalseThrowsCE.java"></compile>
        <run class="FalseThrowsCE"></run>
    </ajc-test>
<ajc-test title="overriding methods from object in interfaces and multiple-inheritance" num="122" keywords="from-java" dir="pureJava" abccomment="Polyglot bug in checking class conformance. Entered into bugzilla                   07/07/04. Don't forget to make corresponding changes in                    AspectJTypeSystem_c.java when it's been fixed. ODM">
        <compile files="InterfaceAndObject.java"></compile>
        <run class="InterfaceAndObject"></run>
    </ajc-test>
<ajc-test title="private fields in an outer class accessed by an inner which also extends the outer" num="123" keywords="from-java" dir="pureJava">
        <compile files="PrivateFields.java"></compile>
        <run class="PrivateFields"></run>
    </ajc-test>
<ajc-test title="breaking out of a labeled block inside of an if" num="124" keywords="from-java" dir="pureJava">
        <compile files="Breaks.java"></compile>
        <run class="Breaks"></run>
    </ajc-test>
<ajc-test title="abstractifying a method and getting it back through super" num="125" keywords="from-java" dir="pureJava">
        <compile files="Abstracts.java"></compile>
        <run class="Abstracts"></run>
    </ajc-test>
<ajc-test title="package protected classes becoming public" pr="328" num="126" keywords="from-java,purejava" dir="new">
        <compile files="PR328.java"></compile>
        <run class="PR328"></run>
    </ajc-test>
<ajc-test title="Packages and static classes with the same name produce compile errors." num="127" keywords="from-java" dir="pureJava">
        <compile files="PackagesAndStaticClassesWithTheSameName.java"></compile>
        <run class="PackagesAndStaticClassesWithTheSameName"></run>
    </ajc-test>
<ajc-test title="Inner types must generate classfiles with only Public/Default access flags." num="128" keywords="from-java" dir="pureJava/innerTypeModifiers">
        <compile files="pkg1/Main.java,pkg2/Foo.java"></compile>
        <run class="pkg1.Main"></run>
    </ajc-test>
<ajc-test title="Default constructors have same access as their enclosing type" num="129" keywords="from-java" dir="pureJava/innerDefaultConstructors" abccomment="jlc doesn't report expected error.                   Reported to Nate on July 1/04.  LJH                   Still a problem with Polyglot 1.3. Entered onto                   bugzilla. 17/08/04 ODM">
      <abckeywords> <laurie></laurie> <nate></nate> </abckeywords>
        <compile files="pkg1/Main.java,pkg2/Foo.java">
            <message line="6" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Returning primitive values matching method return type (minimal)" num="130" keywords="from-java" dir="pureJava">
        <compile files="ReturnTypes.java"></compile>
        <run class="ReturnTypes"></run>
    </ajc-test>
<ajc-test title="Flow analysis and if(true)" num="131" keywords="from-java" dir="pureJava">
        <compile files="Flow.java"></compile>
        <run class="Flow"></run>
    </ajc-test>
<ajc-test title="A.this exprs match by exact type matching" num="133" keywords="from-java" dir="pureJava" abccomment="Polyglot does not catch error on line 14. Sent to Nate                   July 1/04. LJH">
        <compile files="QualifiedThisMatchesExactly.java">
            <message line="14" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Implicit this for new inner instance must be avaliable" num="134" keywords="from-java" dir="pureJava">
        <compile files="ImplicitThisMissing.java">
            <message line="4" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Inners can reference protected fields of their outer's super." num="135" keywords="from-java" dir="pureJava" abccomment="runs ok without harness ... July 1/04 LJH">
        <compile files="protectedFieldRefInInner/Main.java,protectedFieldRefInInner/p1/C.java"></compile>
        <run class="protectedFieldRefInInner.Main"></run>
    </ajc-test>
<ajc-test title="IOException on windows if nul used as identifier" num="136" keywords="from-java,purejava" dir="new" abccomment="jlc misses error at line 14, reported to Nate July 1/04 LJH                   Fixed July 6/04">
      <abckeywords> <laurie></laurie> <nate></nate> </abckeywords>
        <compile files="NulIOException.java">
            <message line="12" kind="error"></message>
            <message line="14" kind="error"></message>
            <message line="17" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="NullPointerException (not compiler error) when extending non-static inner class" num="137" keywords="from-java,purejava" dir="new">
        <compile files="ExtendInnerCE.java">
            <message line="3" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="compiler flags final static variable as indefinite in member assignment." num="138" keywords="from-java,purejava" dir="new">
        <compile files="DefiniteStatic.java"></compile>
        <run class="DefiniteStatic"></run>
    </ajc-test>
<ajc-test title="confirm no IOException on windows if nul used as identifier" num="139" keywords="from-java,purejava" dir="new">
        <compile files="NulIOException2.java"></compile>
        <run class="NulIOException2"></run>
    </ajc-test>
<ajc-test title="Primitives that special case for a constant arm should work" num="140" keywords="from-java" dir="pureJava" abccomment="problem with j2j treatment of Nan, Jennifer has been                   informed July 1/04  LJH">
        <compile files="OneArmedPrimitiveTests.java"></compile>
        <run class="OneArmedPrimitiveTests"></run>
    </ajc-test>
<ajc-test title="Parenthesized true and false don't parse" num="141" keywords="from-java" dir="pureJava">
        <compile files="ParenKeywords.java"></compile>
        <run class="ParenKeywords"></run>
    </ajc-test>
<ajc-test title="Field sets to public fields of private fields of enclosing types" num="142" keywords="from-java" dir="pureJava">
        <compile files="InnerFieldRef.java"></compile>
        <run class="InnerFieldRef"></run>
    </ajc-test>
<ajc-test title="Constant values should be stored with the correct type of their fields" num="143" keywords="from-java" dir="pureJava">
        <compile files="ConstantValueConversion.java"></compile>
        <run class="ConstantValueConversion"></run>
    </ajc-test>
<ajc-test title="Local variables in initializers should not be treated as blank final fields" num="144" keywords="from-java" dir="pureJava">
        <compile files="LocalInitializerVariableNotBlank.java"></compile>
        <run class="LocalInitializerVariableNotBlank"></run>
    </ajc-test>
<ajc-test title="Binops aren't allowed as update stmts in for loops" num="145" keywords="from-java" dir="pureJava">
        <compile files="NonStmtInFor.java">
            <message line="3" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Can't avoid doing division in case of div by zero" num="146" keywords="from-java" dir="pureJava">
        <compile files="DivOpMustHappen.java"></compile>
        <run class="DivOpMustHappen"></run>
    </ajc-test>
<ajc-test title="Testing frames w/greater than FF locals and 7F incs (i.e., WIDE instruction)" num="147" keywords="from-java" dir="pureJava">
        <compile files="BigFrameTest.java"></compile>
        <run class="BigFrameTest"></run>
    </ajc-test>
<ajc-test title="correct numeric literals" num="148" keywords="from-java" dir="pureJava">
        <compile files="LiteralsCp.java"></compile>
        <run class="LiteralsCp"></run>
    </ajc-test>
<ajc-test title="invalid numeric literals" num="149" keywords="from-java" dir="pureJava" abccomment="abc doesn't do a good job on these,  needs a parser                   that doesn't give up after the first error, and                   then each case needs to be check.  jlc probably does                   not catch all of them either.  July 1/04 LJH">
        <compile files="LiteralsCf.java">
            <message line="8" kind="error"></message>
            <message line="9" kind="error"></message>
            <message line="10" kind="error"></message>
            <message line="11" kind="error"></message>
            <message line="12" kind="error"></message>
            <message line="17" kind="error"></message>
            <message line="18" kind="error"></message>
            <message line="19" kind="error"></message>
            <message line="20" kind="error"></message>
            <message line="21" kind="error"></message>
            <message line="22" kind="error"></message>
            <message line="23" kind="error"></message>
            <message line="25" kind="error"></message>
            <message line="27" kind="error"></message>
            <message line="28" kind="error"></message>
            <message line="29" kind="error"></message>
            <message line="30" kind="error"></message>
            <message line="32" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="inner types can't have the same simple name as an enclosing type" pr="538" num="150" keywords="from-java" dir="pureJava">
        <compile files="InnerNameConflictsCf.java">
            <message line="9" kind="error"></message>
            <message line="14" kind="error"></message>
            <message line="20" kind="error"></message>
            <message line="21" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="test + and += for strings and variously typed values" num="152" keywords="from-java" dir="pureJava" abccomment="Isolated problem cases and sent BigStringLJH.java to                     Jennifer.  July 2/04 LJH">
        <compile files="BigString.java"></compile>
        <run class="BigString"></run>
    </ajc-test>
<ajc-test title="test try/catch/finally statements" num="153" keywords="from-java" dir="pureJava" abccomment="j2j crashes with a stack overflow error.  Reported             to Jennifer, July 2/04 LJH  FIXED July 3/04 LJH">
        <compile files="TryCatchFinally.java"></compile>
        <run class="TryCatchFinally"></run>
    </ajc-test>
<ajc-test title="local types can be bound in the signatures of other local types" pr="547" num="154" keywords="from-resolved_10rc3,from-java" dir="pureJava">
        <compile files="LocalInners.java"></compile>
        <run class="LocalInners"></run>
    </ajc-test>
<ajc-test title="final constructor parameter causes incorrect compiler error" num="155" keywords="from-java,purejava" dir="new">
        <compile files="FinalConstructorParm.java"></compile>
        <run class="FinalConstructorParm"></run>
    </ajc-test>
<ajc-test title="Error expected for field of type void" num="156" keywords="from-java,purejava" dir="new" abccomment="causes jlc to crash when it finds the 3rd error.                    Reported to Nate July 2/04 LJH                    Fixed in jlc, but still a problem in abc, must                    investigate July 4/04 LJH">
        <compile files="VoidField.java">
            <message line="2" kind="error"></message>
            <message line="4" kind="error"></message>
            <message line="6" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Error expected for constructor in interfaces" num="157" keywords="from-java,purejava" dir="new" abccomment="ajc only finds errors on lines 2 and 8.                    another example of jlc crashing after error detection.                   July 2/04 LJH. abc now finds all three errors. ODM 26/07/04">

        <compile files="InterfaceConstructor.java">
            <ajcmessage line="2" kind="error"></ajcmessage>
            <ajcmessage line="6" kind="error"></ajcmessage>
            <ajcmessage line="8" kind="error"></ajcmessage>
            <message line="2" kind="error"></message>
            <message line="6" kind="error"></message>
            <message line="8" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="class name for identifier as String should provoke error" pr="558" num="158" keywords="from-java,purejava" dir="new">
        <compile files="PR558.java">
            <message line="4" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="cyclic interface inheritance not detected if no classes implement the interfaces" pr="567" num="159" keywords="from-java,purejava,messages-vary" dir="new" abccomment="Only one error message required, matches what javac does.                    July 2/04 LJH">
        <compile options="!eclipse" files="CyclicInterfaceInheritance.java">
            <ajcmessage line="14" kind="error"></ajcmessage>
            <ajcmessage line="15" kind="error"></ajcmessage>
            <message line="15" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="cyclic class inheritance" pr="567" num="160" keywords="from-java,purejava" dir="new" abccomment="There are two kinds of errors in this program, one         due to cyclic inheritance and one due to missing bodies of the         constructors.  Abc finds the missing bodies, ajc finds the         cyclic inheritance.   If the bodies are fixed to have a body then         abc finds the cyclic inheritance and gives a fine error         message.  LJH July 2/04  abc now finds both cyclic inheritance and missing bodies - hence  extra message. PA/AGS">
        <compile files="CyclicClassInheritance.java">
            <ajcmessage line="11" kind="error"></ajcmessage>
            <ajcmessage line="12" kind="error"></ajcmessage>
            <message line="11" kind="error"></message>
            <message line="12" kind="error"></message>
            <message line="12" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Type names are not expressions on their own" num="161" keywords="from-java,purejava" dir="pureJava" abccomment="jlc misses all errors after the first two.  Example sent to                   Nate on July 2/04.  LJH. Now find one more than ajc on line                   35. javac agrees it's an error, but ajc does not.                   ODM 26/07/04">
      <abckeywords> <laurie></laurie> <nate></nate> </abckeywords>
        <compile files="TypeExprErrors.java">
            <ajcmessage line="10" kind="error"></ajcmessage>
            <ajcmessage line="17" kind="error"></ajcmessage>
            <ajcmessage line="18" kind="error"></ajcmessage>
            <ajcmessage line="19" kind="error"></ajcmessage>
            <ajcmessage line="20" kind="error"></ajcmessage>
            <ajcmessage line="21" kind="error"></ajcmessage>
            <ajcmessage line="22" kind="error"></ajcmessage>
            <ajcmessage line="23" kind="error"></ajcmessage>
            <ajcmessage line="24" kind="error"></ajcmessage>
            <ajcmessage line="25" kind="error"></ajcmessage>
            <ajcmessage line="26" kind="error"></ajcmessage>
            <ajcmessage line="27" kind="error"></ajcmessage>
            <ajcmessage line="28" kind="error"></ajcmessage>
            <ajcmessage line="29" kind="error"></ajcmessage>
            <ajcmessage line="30" kind="error"></ajcmessage>
            <ajcmessage line="31" kind="error"></ajcmessage>
            <ajcmessage line="32" kind="error"></ajcmessage>
            <ajcmessage line="33" kind="error"></ajcmessage>
            <ajcmessage line="34" kind="error"></ajcmessage>
            <ajcmessage line="36" kind="error"></ajcmessage>
            <ajcmessage line="37" kind="error"></ajcmessage>
            <message line="10" kind="error"></message>
            <message line="17" kind="error"></message>
            <message line="18" kind="error"></message>
            <message line="19" kind="error"></message>
            <message line="20" kind="error"></message>
            <message line="21" kind="error"></message>
            <message line="22" kind="error"></message>
            <message line="23" kind="error"></message>
            <message line="24" kind="error"></message>
            <message line="25" kind="error"></message>
            <message line="26" kind="error"></message>
            <message line="27" kind="error"></message>
            <message line="28" kind="error"></message>
            <message line="29" kind="error"></message>
            <message line="30" kind="error"></message>
            <message line="31" kind="error"></message>
            <message line="32" kind="error"></message>
            <message line="33" kind="error"></message>
            <message line="34" kind="error"></message>
            <message line="35" kind="error"></message>
            <message line="36" kind="error"></message>
            <message line="37" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="type and package name conflicts are resolved happily (1a)" num="162" keywords="from-java,purejava" dir="pureJava/nameConflicts">
        <compile files="p1/Main1.java,p1/Foo.java,p1/p2.java"></compile>
        <run class="p1.Main1"></run>
    </ajc-test>
<ajc-test title="(fails in USEJAVAC) type and package name conflicts are resolved happily (1b)" num="163" keywords="from-java,purejava" dir="pureJava/nameConflicts">
        <compile files="p1.java,p1/p2/Foo.java"></compile>
        <compile files="p1/Main1.java,p1/Foo.java,p1/p2.java"></compile>
        <run class="p1.Main1"></run>
    </ajc-test>
<ajc-test title="type and package name conflicts are resolved happily (2)" num="164" keywords="from-java" dir="pureJava/nameConflicts">
        <compile files="p1/Main2.java,p1/p2/Foo.java"></compile>
        <run class="p1.Main2"></run>
    </ajc-test>
<ajc-test title="flow analysis where final variable set in another constructor" num="166" keywords="from-java,purejava" dir="pureJava">
        <compile files="ConstructorFlow.java"></compile>
        <run class="ConstructorFlow"></run>
    </ajc-test>
<ajc-test title="Can construct inner classes using qualified expressions" pr="584" num="167" keywords="from-java,purejava" dir="new">
        <compile files="PR584.java"></compile>
        <run class="PR584"></run>
    </ajc-test>
<ajc-test title="subclass unable to access protected static methods using type-qualified references" pr="585" num="168" keywords="from-java,purejava" dir="new/protectedStatic">
        <compile files="SubClass.java,pack/SuperClass.java"></compile>
        <run class="SubClass"></run>
    </ajc-test>
<ajc-test title="Undefined inner class constructor" pr="588" num="169" keywords="from-java,purejava" dir="new">
        <compile files="UndefinedInner.java">
            <message line="6" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="try statements work sorta like scoped items for exception flow control" num="170" keywords="from-java" dir="pureJava">
        <compile files="TryWorksLikeEnvironment.java"></compile>
        <run class="TryWorksLikeEnvironment"></run>
    </ajc-test>
<ajc-test title="qualified this must work exactly, not based on subtypes" num="171" keywords="from-java" dir="pureJava">
        <compile files="QualifiedThisExactness.java">
            <message line="6" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="classes that are package prefixes are illegal" pr="574" num="172" keywords="from-java,purejava,messages-vary" dir="new/packagePrefix" abccomment="abc finds this error, but without a line number, which I think is fine - AGS">
      <abckeywords> </abckeywords>
        <compile options="!eclipse" files="p/prefix.java,p/prefix/SomeClass.java">
            <ajcmessage line="2" kind="error"></ajcmessage>
            <message kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="valid type expressions for introduced type testing" num="173" keywords="from-java,purejava" dir="new/introTypeMissing" abccomment="problem in j2j, won't compile, reported to Jennifer                    on July 2/04, LJH">
        <compile files="TargetClass.java,Util.java"></compile>
        <run class="TargetClass"></run>
    </ajc-test>
<ajc-test title="CF expected when enclosing class superclass used as this qualifier in inner class" num="174" keywords="from-java" dir="new/introTypeMissing" abccomment="missing error on line 23, example set to Nate                   July 2/04. LJH                   Fixed July 5/04">
      <abckeywords> <laurie></laurie> <nate></nate> </abckeywords>
        <compile files="TargetClassCF.java,Util.java">
            <message line="22" kind="error"></message>
            <message line="23" kind="error"></message>
            <message line="27" kind="error"></message>
            <message line="28" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="enclosing class may be used as this qualifier in inner class" num="175" keywords="from-java" dir="new/introTypeMissing" abccomment="j2j can't handle this, example sent to Jennifer,                     July 2/04.  LJH                   FIXED July 4/04 LJH">
        <compile files="TargetClassCP.java,Util.java"></compile>
        <run class="TargetClassCP"></run>
    </ajc-test>
<ajc-test title="PR591 compiler error expected when directly calling unimplemented abstract method using super" num="176" keywords="from-java,purejava" dir="new" abccomment="jlc error, reported to Nate on July 2/04 LJH.">
        <compile files="AbstractMethodCall.java">
            <message line="10" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="suggested by Jacks 15.28-qualified-namestr tests" num="177" keywords="from-java,purejava,messages-vary" dir="pureJava" abccomment="ajc and javac already report different subset of possible                     errors,  abc correctly reports first one and then                     doesn't check rest of switch.  I think it's ok.                     July 5/04 LJH. abc and ajc 1.2 now agree.                     ODM 26/07/04.">
        <compile options="!eclipse" files="NonConstants.java">
            <ajcmessage line="13" kind="error"></ajcmessage>
            <ajcmessage line="14" kind="error"></ajcmessage>
            <ajcmessage line="15" kind="error"></ajcmessage>
            <ajcmessage line="16" kind="error"></ajcmessage>
            <ajcmessage line="17" kind="error"></ajcmessage>
            <message line="13" kind="error"></message>
            <message line="17" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="suggested by jacks 3.7-15 all comments must be closed" num="179" keywords="from-java,purejava" dir="pureJava" abccomment="we report missing end of comment at end of file                    whereas ajc reports it at the beginning of the                   comment.  I think our error is fine.  July 2/04 LJH">
        <compile files="OpenComment.java">
            <ajcmessage line="7" kind="error"></ajcmessage>
            <message line="10" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="nested synchronized blocks have interesting frame location problems" pr="601" num="180" keywords="from-java" dir="pureJava">
        <compile files="NestedSynchronized.java"></compile>
        <run class="NestedSynchronized"></run>
    </ajc-test>
<ajc-test title="package class access not enforced outside of package" num="181" keywords="from-java,purejava" dir="new/classaccess" abccomment="jlc doesn't catch the error, reported to Nate July 3/04                    LJH">
      <abckeywords> <laurie></laurie> <nate></nate> </abckeywords>
        <compile files="main/Main.java,pack1/Target.java">
            <message line="7" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="expecting CE for ambiguous reference" pr="631" num="182" keywords="from-java,purejava" dir="new">
        <compile files="AmbiguousClassReference.java">
            <message line="11" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="try without catch or finally" pr="643" num="183" keywords="from-java,purejava,message-vary" dir="new" abccomment="abc parser throws additional error when giving up - PA/AGS">
        <compile options="!eclipse" files="TryNoCatchCE.java">
            <ajcmessage line="6" kind="error"></ajcmessage>
            <message kind="error"></message>
            <message line="6" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="invalid floating-point constant" pr="642" num="184" keywords="from-java,purejava,messages-vary" dir="new" abccomment="really has errors on lines 5 and 6.  July 3/04 LJH">
        <compile options="!eclipse" files="ParsingFloatCE.java">
            <ajcmessage line="5" kind="error"></ajcmessage>
            <message line="5" kind="error"></message>
            <message line="6" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="anonymous inner classes with inner types" num="185" keywords="from-java" dir="pureJava">
        <compile files="AnonymousWithInner.java"></compile>
        <run class="AnonymousWithInner"></run>
    </ajc-test>
<ajc-test title="qualified super call expr" pr="651" num="186" keywords="from-java" dir="pureJava">
        <compile files="QualifiedSuperCall.java"></compile>
        <run class="QualifiedSuperCall"></run>
    </ajc-test>
<ajc-test title="concrete aspect unable to access abstract package-private method in parent for overriding" pr="647" num="187" keywords="from-java,purejava,messages-vary" dir="new/subaspects" comment="XXX fix source - package-private" abccomment="error not detected by jlc, reported to Nate July 3/04 LJH                     now detected, and ajc 1.2 no longer gives the warning.                     ODM 26/09/04">
      <abckeywords> <laurie></laurie> <nate></nate> </abckeywords>
        <compile options="!eclipse" files="parent/ParentMethodCE.java,child/ChildMethodCE.java">
            <ajcmessage line="28" kind="warning"></ajcmessage>
            <ajcmessage line="27" kind="error"></ajcmessage>
            <message line="27" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="super reference used to disambiguate names of different but compatible types" num="188" keywords="from-java,purejava" dir="new">
        <compile files="SuperDisambiguatingType.java"></compile>
        <run class="SuperDisambiguatingType"></run>
    </ajc-test>
<ajc-test title="anonymous explicit inner constructors" num="189" keywords="from-java,purejava" dir="pureJava">
        <compile files="QualifiedNewCP.java"></compile>
        <run class="QualifiedNewCP"></run>
    </ajc-test>
<ajc-test title="Overruning the lineStarts buffer, DO NOT EDIT THIS FILE!!!!" num="191" keywords="from-java,purejava" dir="pureJava">
        <compile files="AJError.java"></compile>
        <run class="AJError"></run>
    </ajc-test>
<ajc-test title="no CE for unambiguous type reference" pr="701" num="192" keywords="from-java,purejava" dir="new">
        <compile files="UnambiguousClassReference3CP.java"></compile>
        <run class="UnambiguousClassReference3CP"></run>
    </ajc-test>
<ajc-test title="CE for ambiguous type reference (imports)" pr="701" num="193" keywords="from-java,purejava" dir="new" abccomment="jlc and abc give a fine error message, no line number,                   seems ok.  LJH July 3/04">
        <compile files="AmbiguousClassReference2CE.java">
            <ajcmessage line="2" kind="error"></ajcmessage>
            <ajcmessage line="10" kind="error"></ajcmessage>
            <message line="0" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="CE for ambiguous type reference (two type declarations)" pr="701" num="194" keywords="from-java,purejava,messages-vary" dir="new">
        <compile options="!eclipse" files="AmbiguousClassReference3CE.java">
            <message line="10" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="CE for ambiguous type reference (two inner types)" pr="701" num="195" keywords="from-java,purejava,messages-vary" dir="new" abccomment="error not reported by jlc, reported to Nate July 3/04 LJH">
      <abckeywords> <laurie></laurie> <nate></nate> </abckeywords>
        <compile options="!eclipse" files="AmbiguousClassReference4CE.java">
            <message line="10" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="final assignment in loop" pr="709" num="196" keywords="from-java,purejava" dir="new">
        <compile files="FinalInLoop.java"></compile>
        <run class="FinalInLoop"></run>
    </ajc-test>
<ajc-test title="private super access in inners" num="197" keywords="from-java,purejava" dir="pureJava" abccomment="runs fine when not in harness, July 5/04 LJH">
        <compile files="PrivateSuperInnerAccess.java"></compile>
        <run class="PrivateSuperInnerAccess"></run>
    </ajc-test>
<ajc-test title="nested interface does not require new qualifier (8)" num="198" keywords="from-java,purejava" dir="pureJava">
        <compile files="InvalidNewQualifier8CE.java">
            <message line="8" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="nested interface does not require new qualifier (9)" num="199" keywords="from-java,purejava" dir="pureJava">
        <compile files="InvalidNewQualifier9CE.java">
            <message line="9" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="nested interface does not require new qualifier (10)" num="200" keywords="from-java,purejava" dir="pureJava">
        <compile files="InvalidNewQualifier10CE.java">
            <message line="10" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="nested interface does not require new qualifier (14)" num="201" keywords="from-java,purejava" dir="pureJava">
        <compile files="InvalidNewQualifier14CE.java">
            <message line="14" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="nested interface does not require new qualifier (15)" num="202" keywords="from-java,purejava" dir="pureJava">
        <compile files="InvalidNewQualifier15CE.java">
            <message line="15" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="nested interface does not require new qualifier (16)" num="203" keywords="from-java,purejava" dir="pureJava">
        <compile files="InvalidNewQualifier16CE.java">
            <message line="16" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Operands work correctly" num="204" keywords="from-bigjava" dir="pureJava" abccomment="More jlc constants problems ... reported to Nate and                    Jennifer, July 5/04 LJH">
      <abckeywords> <laurie></laurie> <nate></nate> </abckeywords>
        <compile files="Ops.java"></compile>
        <run class="Ops"></run>
    </ajc-test>
<ajc-test title="reasonable error for crosscut reference with no formals specified" num="205" keywords="from-errors" dir="errors" abccomment="abc gives one more message due to poor error recovery in parser. ODM July 5,2003">
        <compile files="NoFormalsCrosscut.java">
            <ajcmessage line="6" kind="error"></ajcmessage>
            <ajcmessage line="7" kind="error"></ajcmessage>
            <ajcmessage line="8" kind="error"></ajcmessage>
            <message line="6" kind="error"></message>
            <message line="7" kind="error"></message>
            <message line="8" kind="error"></message>
            <message line="9" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="reasonable error for introduction on type whose source isn't found" num="206" keywords="from-errors" dir="errors">
        <compile files="NoSource.java">
            <message line="4" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="check that constructor name's match the enclosing type" num="207" keywords="from-errors,purejava" dir="errors">
        <compile files="BadConstructorName.java">
            <message line="4" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="handle errors in crosscut designators, insist that they end with a semicolon" num="208" keywords="from-errors" dir="errors">
        <compile files="BadDesignator.java">
            <message line="4" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="errors for not applicable or accessible methods" num="209" keywords="from-errors,purejava" dir="errors">
        <compile files="MethodsNotFound.java">
            <message line="4" kind="error"></message>
            <message line="8" kind="error"></message>
            <message line="12" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="try to return from a before, after, after throwing and after returning" num="210" keywords="from-errors" dir="errors">
        <compile files="InvalidReturn.java">
            <message line="12" kind="error"></message>
            <message line="16" kind="error"></message>
            <message line="19" kind="error"></message>
            <message line="22" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="the designator has a wildcard for method name but no return type specified" pr="130" num="211" keywords="from-errors" dir="errors" abccomment="abc finds 2 valid errors on that line. PA/AGS">
        <compile files="NoReturnTypeInDesignator.java">
            <ajcmessage line="6" kind="error"></ajcmessage>
            <message line="6" kind="error"></message>
            <message line="6" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="the designator for the introduction has no type after the | charcter" num="212" keywords="from-errors" dir="errors">
        <compile files="BadIntroductionDesignator.java">
            <message line="6" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="crosscut signature does not match" pr="140" num="213" keywords="from-errors" dir="errors">
        <compile files="BadCCutSig.java">
            <message line="8" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="proper exit conditions when errors fall through to javac" num="214" keywords="from-errors" dir="errors">
        <compile files="FromJavac.java">
            <message line="11" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="mismatched parens on advice (wasn't binding Tester)" pr="213" num="215" keywords="from-errors" dir="errors" abccomment="difference in line number between abc and ajc message. ODM July 5, 2004                   abc parser throws additional errors when giving up. PA/AGS">
        <compile files="MismatchedParens.java">
            <ajcmessage line="16" kind="error"></ajcmessage>
            <message kind="error"></message>
            <message line="17" kind="error"></message>
	    <message line="17" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Non-static advice silently ignored" pr="209" num="216" keywords="from-errors" dir="errors">
        <compile files="BadPointcutName.java">
            <message line="15" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="import statement within class body crashes compiler" pr="218" num="217" keywords="from-errors,purejava" dir="errors">
        <compile files="ImportWithinClassBody.java">
            <message line="8" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="extra closing brace" pr="219" num="218" keywords="from-errors" dir="errors" abccomment="abc complains about both superfluous               braces -- quite correctly. PA/AGS. But when we reset the               lexer state correctly, it doesn't. ODM.">
        <compile files="ExtraClosingBrace.java">
	    <ajcmessage line="8" kind="error"></ajcmessage>
            <message line="8" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="decent errors for around return type not matching target point" pr="244" num="219" keywords="from-errors" dir="errors" abccomment="abc doesn't report this kind of error in both places                    and our positions are a bit different">
        <compile files="AroundReturnType.java">
            <ajcmessage line="3" kind="error"></ajcmessage>
            <ajcmessage line="7" kind="error"></ajcmessage>
            <ajcmessage line="16" kind="error"></ajcmessage>
            <ajcmessage line="21" kind="error"></ajcmessage>
	    <message line="2" kind="error"></message>
	    <message line="6" kind="error"></message>
	    <message line="7" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="eachobject: can't call new on an aspect of" num="220" keywords="from-errors" dir="errors">
        <compile files="CantCallConstructorOnAspects.java">
            <message line="4" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="eachobject: only zero-argument constructors allowed in an aspect" num="221" keywords="from-errors,fail-unimplemented" dir="errors" abccomment="Exception from weaver; Frontend should report error - AGS 1/7/04                   Fixed - Oege 5/7/04">
        <compile files="AspectsCantHaveYesArgumentConstructors.java">
            <message line="8" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="eachobject: can't extend a concrete aspect" num="222" keywords="from-errors,fail-unimplemented" dir="errors">
        <compile files="SubAspectsCantExtendNonAbstractAspects.java">
            <message line="14" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="instanceof used without a class" pr="271" num="223" keywords="from-errors" dir="errors">
        <compile files="InstanceofWithoutClass.java">
            <message line="14" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="wildcard used for returns clause" pr="280" num="224" keywords="from-errors" dir="errors">
        <compile files="WildcardForReturns.java">
            <message line="17" kind="error"></message>           
        </compile>
    </ajc-test>
<ajc-test title="no return statement in around advice" pr="280" num="225" keywords="from-errors,new-messages-vary" dir="errors">
        <compile files="NoReturnStatement.java">
            <message line="14" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="inner aspects must be static (no longer matches PR#286)" pr="286" num="226" keywords="from-errors,fail-unimplemented" dir="errors">
        <compile files="AbstractAspectOf.java">
            <message line="12" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Casting class declarations as interfaces" num="227" keywords="from-errors" dir="errors">
        <compile files="InterfaceCast.java">
            <message line="14" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="omits a variable name and crashes with a null pointer" num="228" keywords="from-errors" dir="errors">
        <compile files="BindingNullPointer.java">
            <message line="7" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Not generating an error for using new as a method name" num="229" keywords="from-errors" dir="errors" abccomment="abc also reports an error for typechecking. ODM 07/07/04">
        <compile files="New.java">
            <ajcmessage line="12" kind="error"></ajcmessage>
            <message line="12" kind="error"></message>
            <message line="13" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="ClassCastException on the int literal" num="230" keywords="from-errors" dir="errors">
        <compile files="IntLiteral.java">
            <message line="17" kind="error"></message>
            <message line="17" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Wrong strictfp keyword usage in interface function prototype [TODO: move to errors]" num="231" keywords="from-errors" dir="new" abccomment="Polyglot fails to check special modifier restrictions for interfaces.                   ODM 5/7/04. This has been fixed. ODM 11/08/04">
        <compile files="StrictFpCErr1.java">
            <message line="3" kind="error"></message>
       </compile>
    </ajc-test>
<ajc-test title="Wrong strictfp keyword usage in field declaration [TODO: move to errors]" num="232" keywords="from-errors" dir="new">
        <compile files="StrictFpCErr2.java">
            <message line="3" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Wrong strictfp keyword usage in constructor declaration [TODO: move to errors]" num="233" keywords="from-errors" dir="new">
        <compile files="StrictFpCErr3.java">
            <message line="3" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Incorrect static casts to primitively foldable arguments should not crash the compiler." num="234" keywords="from-errors" dir="errors">
        <compile files="BadStaticCast.java">
            <message line="5" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Dominates with commas should signal an error." num="235" keywords="from-errors" dir="errors">
        <compile files="DominatesWithCommas.java">
            <message line="9" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Accessing instance fields and instance methods statically." num="236" keywords="from-errors,purejava" dir="errors" abccomment="all errors,  but it is completely reasonable to report                   only the non-statement error on line 30.  This is what                   javac does on the Java part of the benchmark.  Note                   that this is NOT a purejava benchmark, but has an                   aspect in it, dispite what the keyword says.                   July 4/04 LJH Polyglot now continues further, so we catch                   more of the errors July 7/04 ODM">
        <compile files="AccessingInstanceFieldsStatically.java">
            <ajcmessage line="15" kind="error"></ajcmessage>
            <ajcmessage line="16" kind="error"></ajcmessage>
            <ajcmessage line="17" kind="error"></ajcmessage>
            <ajcmessage line="18" kind="error"></ajcmessage>
            <ajcmessage line="26" kind="error"></ajcmessage>
            <ajcmessage line="27" kind="error"></ajcmessage>
            <ajcmessage line="30" kind="error"></ajcmessage>
            <ajcmessage line="38" kind="error"></ajcmessage>
            <ajcmessage line="39" kind="error"></ajcmessage>
            <message line="15" kind="error"></message>
            <message line="16" kind="error"></message>
            <message line="17" kind="error"></message>
            <message line="18" kind="error"></message>
            <message line="26" kind="error"></message>
            <message line="30" kind="error"></message>
            <message line="39" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="stack overflow with recursive crosscut specifier" pr="95" num="237" keywords="from-errors" dir="errors" abccomment="abc continues with type error. ODM 07/07/04">
        <compile files="RecursiveCCutSpecifier.java">
            <ajcmessage line="10" kind="error"></ajcmessage>
            <message line="10" kind="error"></message>
            <message line="12" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Throwing a NullPointerException when formals can't be bound in named pointcut" num="238" keywords="from-errors" dir="errors">
        <compile files="BadFormalsToCalls.java">
            <message line="22" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="disallow defining more than one pointcut with the same name" pr="385" num="239" keywords="from-errors,fail-unimplemented" dir="errors" abccomment="ajc reports an error at both locations, abc                    gives two for the last location. ODM 07/07/04">
        <compile files="OverloadedPointcuts.java">
            <ajcmessage line="4" kind="error"></ajcmessage>
            <ajcmessage line="5" kind="error"></ajcmessage>
            <message line="4" kind="error"></message>
            <message line="5" kind="error"></message>
            <message line="5" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="pre 0.7 introduction form outside aspect body causes an EmptyStackException" num="240" keywords="from-errors" dir="errors" abccomment="abc gives further error after parse error. ODM 07/07/04">
        <compile files="BadIntroduction.java">
            <ajcmessage line="3" kind="error"></ajcmessage>
            <message line="3" kind="error"></message>
            <message line="8" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="a class can't extend an aspect" num="241" keywords="from-errors,fail-unimplemented" dir="errors">
        <compile files="ClassExtendingAspect.java">
            <message line="19" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="a before() clause at the class-level causes an EmptyStackException" num="242" keywords="from-errors" dir="errors" abccomment="abc gives type error after parser error. ODM 07/07/04">
        <compile files="TopLevelBefore.java">
            <ajcmessage line="3" kind="error"></ajcmessage>
            <message line="3" kind="error"></message>
            <message line="7" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="an after() clause at the class-level causes an EmptyStackException" num="243" keywords="from-errors" dir="errors" abccomment="abc gives type error after parse error. ODM 07/07/04">
        <compile files="TopLevelAfter.java">
            <ajcmessage line="3" kind="error"></ajcmessage>
            <message line="3" kind="error"></message>
            <message line="7" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="an around() clause at the class-level causes an EmptyStackException" num="244" keywords="from-errors" dir="errors" abccomment="abc gives type error after parse error. ODM 07/07/04">
        <compile files="TopLevelAround.java">
            <ajcmessage line="3" kind="error"></ajcmessage>
            <message line="3" kind="error"></message>
            <message line="7" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Crashes when a cast is within another cast" num="245" keywords="from-errors,purejava" dir="errors">
        <compile files="CastInCast.java">
            <message line="9" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Crashes when a cast of the form )int) appears" num="246" keywords="from-errors,purejava,messages-vary" dir="errors" abccomment="javac report on line 9, as done ajc and abc.  July 4/04 LJH">
        <compile options="!eclipse" files="BadCast.java">
            <ajcmessage line="9" kind="error"></ajcmessage>
            <ajcmessage line="10" kind="error"></ajcmessage>
            <message line="9" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Crashes when the closing brace is reversed" num="247" keywords="from-errors,purejava,messages-vary" dir="errors" abccomment="reports unexptected EOF on line 12, that's ok, July 4/04 LJH                 Extra error without line number is abc parser giving up                  - PA/AGS">
        <compile options="!eclipse" files="ClosingBrace.java">
            <ajcmessage line="11" kind="error"></ajcmessage>
            <message kind="error"></message>
            <message line="12" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Crashes when a method name is missing in a call -- e.g. 'System.out.();'" num="248" keywords="from-errors,purejava" dir="errors">
        <compile files="NoMethodName.java">
            <message line="9" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Crashes when a bad r-value appears." num="249" keywords="from-errors,purejava" dir="errors">
        <compile files="BadValue.java">
            <message line="9" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Two underscores as a variables causes a crash" num="250" keywords="from-errors,purejava" dir="errors">
        <compile files="BadVar.java">
            <message line="9" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Crashes when assigning to a final static in an intializer and declaration" num="251" keywords="from-errors,purejava" dir="errors">
        <compile files="FinalStatic.java">
            <message line="13" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Crashes when two dots appear instead of one" num="252" keywords="from-errors,purejava" dir="errors">
        <compile files="TwoDots.java">
            <message line="9" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Crashes when there're stray dots" num="253" keywords="from-errors,purejava" dir="errors" abccomment="javac,ajc and abc all give errors on all the lines.                   July 3/04 LJH. Polyglot now goes a bit further and also                   reports a type error. July 07/04 ODM">
        <compile files="StrayDot.java">
            <ajcmessage line="9" kind="error"></ajcmessage>
            <ajcmessage line="10" kind="error"></ajcmessage>
            <ajcmessage line="11" kind="error"></ajcmessage>
            <ajcmessage line="12" kind="error"></ajcmessage>
            <ajcmessage line="13" kind="error"></ajcmessage>
            <ajcmessage line="14" kind="error"></ajcmessage>
            <message line="9" kind="error"></message>
            <message line="10" kind="error"></message>
            <message line="11" kind="error"></message>
            <message line="12" kind="error"></message>
            <message line="13" kind="error"></message>
            <message line="14" kind="error"></message>
            <message line="15" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Stray characters cause a crash" num="254" keywords="from-errors,purejava" dir="errors" comment="XXX public class in wrong file" abccomment="syntax errors from abc perfectly reasonable                    July 4/04 LJH">
        <compile files="StraySlash.java">
            <ajcmessage line="9" kind="error"></ajcmessage>
            <message line="9" kind="error"></message>
            <message line="10" kind="error"></message>
            <message line="15" kind="error"></message>
            <message line="16" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Colon instead of a semi-colon causes a crash" num="255" keywords="from-errors,purejava" dir="errors" comment="XXX public class in wrong file">
        <compile files="Colon.java">
            <message line="9" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="type error in initializer caught by ajc, not javac" num="256" keywords="from-errors,purejava" dir="errors">
        <compile files="ArrayInitializerType.java">
            <message line="2" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Circular inheritance with classes causes a stack overflow." num="257" keywords="from-errors,purejava" dir="errors">
        <compile files="CircularExtends.java">
            <message line="7" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Doesn't detect cyclic inheritance of aspects." num="258" keywords="from-errors" dir="errors">
        <compile files="CircularExtendsAspect.java">
            <message line="18" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Binds the pointcut formals to member variables instead of pointcut formals." num="259" keywords="from-errors" dir="errors" abccomment="abc catches the errors, but it doesn't do warnings yet. ODM July 5, 2004">
        <compile options="-Xlint:warning" files="PointcutFormals.java">
            <ajcmessage line="14" kind="error"></ajcmessage>
            <ajcmessage line="15" kind="error"></ajcmessage>
            <ajcmessage line="16" kind="warning"></ajcmessage>
            <ajcmessage line="17" kind="warning"></ajcmessage>
            <message line="14" kind="error"></message>
            <message line="15" kind="error"></message>    
        </compile>
    </ajc-test>
<ajc-test title="ambiguous formal in formals pattern" num="260" keywords="from-errors" dir="errors">
        <compile files="AmbiguousFormal.java">
            <message line="6" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Missing ;" num="261" keywords="from-errors,purejava" dir="errors" abccomment="Extra error with no line number for parser complaint in abc. PA/AGS">
        <compile files="PR405.java">
            <message kind="error"></message>
            <message line="15" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="cast expressions should not allow casts between ifaces and array types" num="262" keywords="from-errors,purejava" dir="errors" abccomment="abc doesn't emit the second error, although it is found                   if first line commented out.   Need to establish how                   we will report errors.  July 5/04 LJH">
        <compile files="InterfaceArrayCast.java">
            <message line="9" kind="error"></message>
            <message line="10" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="parsing errors for various bad forms of NewArrayExprs." num="263" keywords="from-errors,purejava" dir="errors">
        <compile files="BadNewArrayExprs.java">
            <message line="4" kind="error"></message>
            <message line="5" kind="error"></message>
            <message line="6" kind="error"></message>
            <message line="7" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="good error for field name instead of type name" num="264" keywords="from-errors" dir="errors" abccomment="Polyglot bails out after the first four, but if we comment those out, the others are caught.                   ODM July 5, 2004.">
        <compile files="BadTypeName.java">
            <ajcmessage line="2" kind="error"></ajcmessage>
            <ajcmessage line="4" kind="error"></ajcmessage>
            <ajcmessage line="6" kind="error"></ajcmessage>
            <ajcmessage line="8" kind="error"></ajcmessage>
            <ajcmessage line="10" kind="error"></ajcmessage>
            <ajcmessage line="12" kind="error"></ajcmessage>
            <message line="2" kind="error"></message>
            <message line="4" kind="error"></message>
            <message line="6" kind="error"></message>
            <message line="8" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="good error for bad field and inner class references" num="265" keywords="from-errors,purejava" dir="errors" abccomment="not pure java July 5/04 LJH                   polyglot does not find this error, sent to Nate,                        July 5/04 LJH Fixed in Polyglot 1.3. Not reporting                       the error on line 3 is deliberate in abc: it overrides                       both I1 and I2, so there is no conflict. ODM 18/08/04">
        <compile files="BadReferences.java">
            <ajcmessage line="3" kind="error"></ajcmessage>
            <ajcmessage line="5" kind="error"></ajcmessage>
            <message line="5" kind="error"></message> 
       </compile>
    </ajc-test>
<ajc-test title="errors in aspect inheritance - 1" num="266" keywords="from-errors" dir="errors" abccomment="abc gives a further error message. ODM July 7,2004">
        <compile files="AspectInheritance1.java">
            <ajcmessage line="17" kind="error"></ajcmessage>
            <message line="15" kind="error"></message>
            <message line="17" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="errors in aspect inheritance - 2" num="267" keywords="from-errors" dir="errors" abccomment="More accurate messages from abc. ODM July 5, 2004">
        <compile files="AspectInheritance2.java">
            <ajcmessage line="8" kind="error"></ajcmessage>
            <ajcmessage line="16" kind="error"></ajcmessage>
            <ajcmessage line="20" kind="error"></ajcmessage>
            <ajcmessage line="26" kind="error"></ajcmessage>
            <ajcmessage line="30" kind="error"></ajcmessage>
            <message line="15" kind="error"></message>
            <message line="16" kind="error"></message>
            <message line="20" kind="error"></message>
            <message line="23" kind="error"></message>
            <message line="24" kind="error"></message>
            <message line="30" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="errors in aspect inheritance - 3" num="268" keywords="from-errors" dir="errors" abccomment="ajc fails to find an additional error involving unbound                   pointcut formals at line 15; abc bails out earlier, but ok.                   ODM July 5, 2004">
        <compile files="AspectInheritance3.java">
            <ajcmessage line="19" kind="error"></ajcmessage>
            <ajcmessage line="24" kind="error"></ajcmessage>
            <message line="15" kind="error"></message>
            <message line="19" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="errors in aspect inheritance - 4" num="269" keywords="from-errors" dir="errors">
        <compile files="AspectInheritance4.java">
            <message line="17" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Implementing a non-interface used to crash the compiler." num="270" keywords="from-errors,purejava" dir="errors">
        <compile files="PR333.java">
            <message line="6" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="circular dominates leading to irresolvable advice precedence" num="271" keywords="from-errors" dir="errors" abccomment="We only report one error, and at the place the advice applies not the advice location">
        <compile files="CircularDominates.java">
            <ajcmessage line="12" kind="error"></ajcmessage>
            <ajcmessage line="16" kind="error"></ajcmessage>
            <ajcmessage line="20" kind="error"></ajcmessage>
            <message line="4" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Should issue an error for using 'class' instead of 'aspect'" num="272" keywords="from-errors" dir="errors">
        <compile files="NoAspect.java">
            <message line="12" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Should signal an error when we need an exposed value but don't provide it" num="273" keywords="from-errors" dir="errors">
        <compile files="MissingExposure.java">
            <message line="13" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="StackOverFlowException with circular +implements's." num="274" keywords="from-errors" dir="errors" abccomment="Not an ideal error location, but ok for now. ODM July 7, 2004">
        <compile files="CircularPlusImplementsIntros.java">
            <message line="19" kind="error"></message>
            <ajcmessage line="7" kind="error"></ajcmessage>
            <ajcmessage line="8" kind="error"></ajcmessage>
        </compile>
    </ajc-test>
<ajc-test title="Introducing protected methods is causing a crash" num="275" keywords="from-errors" dir="errors">
        <compile files="ProtectedIntro.java">
            <message line="14" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Introducing protected fields is causing a crash" num="276" keywords="from-errors" dir="errors">
        <compile files="ProtectedFieldIntro.java">
            <message line="14" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="two classes with the same fully-qualified names [eachjvm]" pr="388" num="277" keywords="from-errors" dir="errors" comment="XXX error not flagging initial type" abccomment="Bogus test, as it contains a syntax error that causes abc to bail out. ODM July 7, 2004">
        <compile files="DuplicatedNames.java">
            <ajcmessage line="3" kind="error"></ajcmessage>
            <ajcmessage line="5" kind="error"></ajcmessage>
            <ajcmessage line="7" kind="error"></ajcmessage>
            <ajcmessage line="9" kind="error"></ajcmessage>
            <message line="9" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Undefined pointcuts were throwing exceptions in 07b11 [callsto]" pr="396" num="278" keywords="from-errors" dir="errors" abccomment="An extra error from abc after the first parse error. ODM 07/07/04">
        <compile files="UndefinedPointCut_PR396.java">
            <ajcmessage line="8" kind="error"></ajcmessage>
            <message line="8" kind="error"></message>
            <message line="9" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="advice on abstract pointcuts" pr="240" num="279" keywords="from-errors" dir="errors" abccomment="abc catches one more error than ajc. ODM 20/07/04">
        <compile files="StaticAdviceOnAbstract.java">
            <ajcmessage line="17" kind="error"></ajcmessage>
            <message line="12" kind="error"></message>
            <message line="17" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Whoops, I forgot to put a class in the field access PCD." num="280" keywords="from-errors" dir="errors">
        <compile files="BadGetPCD.java">
            <message line="5" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="the arounds return something but there is no returns statement" pr="138" num="281" keywords="from-errors" dir="errors">
        <compile files="MissingReturns.java">
            <message line="14" kind="error"></message>
            <message line="20" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="simple tests of throws and for stmt typing" num="282" keywords="from-errors" dir="pureJava">
        <compile files="SimpleSpec.java">
            <message line="4" kind="error"></message>
            <message line="7" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="checking the contra-variant errors for typing of proceed" num="283" keywords="from-errors,knownLimitation" dir="errors" abccomment="Still not implemented in ajc 1.2. abc is happy too. ODM July 7, 2004">
        <compile files="BadAround.java">
            <ajcmessage line="12" kind="error"></ajcmessage>
            <ajcmessage line="15" kind="error"></ajcmessage>
            <ajcmessage line="18" kind="error"></ajcmessage>
            <ajcmessage line="19" kind="error"></ajcmessage>
            <ajcmessage line="22" kind="error"></ajcmessage>
        </compile>
    </ajc-test>
<ajc-test title="error of no return statement detected not by ajc but by javac (line 4)" num="284" keywords="from-errors,purejava" dir="errors">
        <compile files="NoReturnStatementSimple.java">
            <message line="4" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="class and interface extension" num="285" keywords="from-errors,purejava,messages-vary" dir="errors" abccomment="abc agrees with javac, but reports last error only upon                  use of the interface - ok. ODM 18/08/04">
        <compile options="!eclipse" files="BadExtension.java">
            <ajcmessage line="7" kind="error"></ajcmessage>
            <ajcmessage line="9" kind="error"></ajcmessage>
            <ajcmessage line="16" kind="error"></ajcmessage>
            <ajcmessage line="17" kind="error"></ajcmessage>
            <ajcmessage line="18" kind="error"></ajcmessage>
            <ajcmessage line="19" kind="error"></ajcmessage>
            <ajcmessage line="21" kind="error"></ajcmessage>
            <ajcmessage line="35" kind="error"></ajcmessage>
            <ajcmessage line="38" kind="error"></ajcmessage>
            <message line="9" kind="error"></message>
            <message line="16" kind="error"></message>
            <message line="17" kind="error"></message>
            <message line="18" kind="error"></message>
            <message line="19" kind="error"></message>
            <message line="21" kind="error"></message>
            <message line="35" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="multiple conflicting introductions 1" num="286" keywords="from-errors" dir="abctests/errors" abccomment="abc bails out earlier, split into several cases. ODM July 7">
        <compile files="MultipleIntros1.java">
            <ajcmessage line="5" kind="error"></ajcmessage>
            <ajcmessage line="16" kind="error"></ajcmessage>
            <ajcmessage line="18" kind="error"></ajcmessage>
            <ajcmessage line="19" kind="error"></ajcmessage>
            <ajcmessage line="22" kind="error"></ajcmessage>
            <ajcmessage line="27" kind="error"></ajcmessage>
            <ajcmessage line="30" kind="error"></ajcmessage>
            <message line="16" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="multiple conflicting introductions 2" num="287" keywords="from-errors" dir="abctests/errors" abccomment="abc bails out earlier, split into several cases. ODM July 7">
        <compile files="MultipleIntros2.java">
            <ajcmessage line="5" kind="error"></ajcmessage>
            <ajcmessage line="16" kind="error"></ajcmessage>
            <ajcmessage line="18" kind="error"></ajcmessage>
            <ajcmessage line="19" kind="error"></ajcmessage>
            <ajcmessage line="22" kind="error"></ajcmessage>
            <ajcmessage line="27" kind="error"></ajcmessage>
            <ajcmessage line="30" kind="error"></ajcmessage>
            <message line="18" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="multiple conflicting introductions 3" num="288" keywords="from-errors" dir="abctests/errors" abccomment="abc bails out earlier, split into several cases. ODM July 7">
        <compile files="MultipleIntros3.java">
            <ajcmessage line="5" kind="error"></ajcmessage>
            <ajcmessage line="16" kind="error"></ajcmessage>
            <ajcmessage line="18" kind="error"></ajcmessage>
            <ajcmessage line="19" kind="error"></ajcmessage>
            <ajcmessage line="22" kind="error"></ajcmessage>
            <ajcmessage line="27" kind="error"></ajcmessage>
            <ajcmessage line="30" kind="error"></ajcmessage>
            <message line="27" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="multiple conflicting introductions 4" num="289" keywords="from-errors" dir="abctests/errors" abccomment="abc bails out earlier, cloned to expose each error. ODM July 7">
        <compile files="MultipleIntros4.java">
            <ajcmessage line="5" kind="error"></ajcmessage>
            <ajcmessage line="16" kind="error"></ajcmessage>
            <ajcmessage line="18" kind="error"></ajcmessage>
            <ajcmessage line="19" kind="error"></ajcmessage>
            <ajcmessage line="22" kind="error"></ajcmessage>
            <ajcmessage line="27" kind="error"></ajcmessage>
            <ajcmessage line="30" kind="error"></ajcmessage>
            <message line="22" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="multiple conflicting introductions 5" num="290" keywords="from-errors" dir="abctests/errors" abccomment="abc bails out earlier, cloned to expose each error. ODM July 7">
        <compile files="MultipleIntros5.java">
            <ajcmessage line="5" kind="error"></ajcmessage>
            <ajcmessage line="16" kind="error"></ajcmessage>
            <ajcmessage line="18" kind="error"></ajcmessage>
            <ajcmessage line="19" kind="error"></ajcmessage>
            <ajcmessage line="22" kind="error"></ajcmessage>
            <ajcmessage line="27" kind="error"></ajcmessage>
            <ajcmessage line="30" kind="error"></ajcmessage>
        </compile>
    </ajc-test>
<ajc-test title="types in throws clauses" num="291" keywords="from-errors,purejava" dir="errors">
        <compile files="ThrowsClause.java">
            <message line="2" kind="error"></message>
            <message line="4" kind="error"></message>
            <message line="13" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="referencing non-static pointcuts in outer aspects" num="292" keywords="from-errors" dir="errors">
        <compile files="StaticPointcutRefs.java">
            <message line="8" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="bad switch syntax" num="293" keywords="from-errors,purejava" dir="errors">
        <compile files="Switch.java">
            <message line="4" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="javac correct compiler error if there is no return in around returning result" num="294" keywords="from-errors" dir="new">
        <compile files="NoReturnInProceed.java">
            <message line="16" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="should give an error for introducing two members with the same name" num="295" keywords="from-errors" dir="errors" abccomment="abc pinpoints one cause of all four ajc messages. ODM 07/07/04">
        <compile files="TwoIntros.java">
            <ajcmessage line="10" kind="error"></ajcmessage>
            <ajcmessage line="14" kind="error"></ajcmessage>
            <ajcmessage line="16" kind="error"></ajcmessage>
            <message line="14" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="wimpy test for undeclared and uncaught exceptions" num="296" keywords="from-errors" dir="errors" abccomment="abc bails out after reachability fails. ODM 07/07/04">
        <compile files="UndeclaredThrows.java">
            <ajcmessage line="12" kind="error"></ajcmessage>
            <ajcmessage line="18" kind="error"></ajcmessage>
            <message line="18" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="test for not folding circular constants" num="297" keywords="from-errors" dir="pureJava">
        <compile files="CircularFolding.java">
            <message line="6" kind="error"></message>
            <message line="7" kind="error"></message>
            <message line="8" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="continue targets must be continuable" num="298" keywords="from-errors" dir="pureJava" abccomment="jlc/abc reports line of label, ajc reports line of contine                   seems fine,  LJH July 5/04">
        <compile files="BadContinueTarget.java">
            <ajcmessage line="6" kind="error"></ajcmessage>
            <message line="5" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="qualified this to non-inner should be caught" num="299" keywords="from-errors" dir="pureJava">
        <compile files="BadQualifiedNew.java">
            <message line="4" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Referencing various things from static contexts" num="300" keywords="from-errors,purejava" dir="pureJava" abccomment="abc catches most of these, missings ones don't seem                   important since fixing other problems would get rid                   of these July 5/04">
        <compile files="StaticContexts.java">
            <ajcmessage line="11" kind="error"></ajcmessage>
            <ajcmessage line="18" kind="error"></ajcmessage>
            <ajcmessage line="19" kind="error"></ajcmessage>
            <ajcmessage line="20" kind="error"></ajcmessage>
            <ajcmessage line="21" kind="error"></ajcmessage>
            <ajcmessage line="27" kind="error"></ajcmessage>
            <ajcmessage line="28" kind="error"></ajcmessage>
            <ajcmessage line="31" kind="error"></ajcmessage>
            <ajcmessage line="35" kind="error"></ajcmessage>
            <ajcmessage line="36" kind="error"></ajcmessage>
            <message line="11" kind="error"></message>
            <message line="18" kind="error"></message>
            <message line="20" kind="error"></message>
            <message line="27" kind="error"></message>
            <message line="28" kind="error"></message>
            <message line="31" kind="error"></message>
            <message line="35" kind="error"></message>
            <message line="36" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Given non-matching TypePattern, CE flags use of non-introduced method rather than failure to introduce" num="301" keywords="from-errors" dir="new" abccomment="abc gives precise root of the problem. ODM 07/07/04">
        <compile files="typepatternmatch/pack1/IntroErrorLocation.java,typepatternmatch/pack2/TargetClass.java">
            <ajcmessage text="TargetClass cannot be resolved" line="28" kind="error" file="pack1/IntroErrorLocation.java"></ajcmessage>
            <ajcmessage text="no match for this type name: TargetClass" line="33" kind="warning" file="pack1/IntroErrorLocation.java"></ajcmessage>
            <ajcmessage text="undefined for the type TargetClass" line="39" kind="error" file="pack1/IntroErrorLocation.java"></ajcmessage>
            <message line="28" kind="error" file="pack1/IntroErrorLocation.java"></message>
        </compile>
    </ajc-test>
<ajc-test title="Compiler should suggest using aspect when advice, pointcuts, or introduction is in a class" pr="457" num="302" keywords="from-errors,poorErrorMessages" dir="new" abccomment="Good message from abc. ODM 07/07/04">
        <compile files="RecognizeAspectCE.java">
            <ajcmessage text="Syntax error" line="3" kind="error" file="RecognizeAspectCE.java"></ajcmessage>
            <ajcmessage text="Syntax error" line="6" kind="error" file="RecognizeAspectCE.java"></ajcmessage>
            <message line="6" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Some expressions are illegal expression statements" num="303" keywords="from-errors,purejava" dir="errors">
        <compile files="BadExpressionStatement.java">
            <message line="3" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="illegal forward reference" num="304" keywords="from-errors,purejava" dir="pureJava" abccomment="jlc gets error (but on line 14), however abc                   doesn't find it.  Reported to Oege July 5/04 LJH.                   jlc gets the error, but only via javac. Has this                   been reported to the Polyglot folks? ODM 07/07/04">
        <compile files="IllegalForwardReference.java">
            <message line="9" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="declare error working with pointcut and-not (amp,amp,bang)" num="305" keywords="from-errors" dir="errors">
        <compile files="DeclareError.java">
            <message line="5" kind="error"></message>
            <message line="19" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="protected accessibility" num="306" keywords="from-errors,purejava" dir="errors">
        <compile files="protectedAccess/Main.java,protectedAccess/p1/C1.java">
            <ajcmessage line="26" kind="error"></ajcmessage>
            <ajcmessage line="28" kind="error"></ajcmessage>
            <ajcmessage line="29" kind="error"></ajcmessage>
            <ajcmessage line="31" kind="error"></ajcmessage>
            <ajcmessage line="37" kind="error"></ajcmessage>
            <ajcmessage line="45" kind="error"></ajcmessage>
            <ajcmessage line="46" kind="error"></ajcmessage>
            <ajcmessage line="54" kind="error"></ajcmessage>
            <ajcmessage line="55" kind="error"></ajcmessage>
	    <message line="37" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="parse-time illegal modifiers" num="307" keywords="from-errors,purejava" dir="errors" abccomment="abc bails out early, but ok. ODM 18/07/04">
        <compile files="Modifiers1.java">
            <ajcmessage line="2" kind="error"></ajcmessage>
            <ajcmessage line="3" kind="error"></ajcmessage>
            <ajcmessage line="6" kind="error"></ajcmessage>
            <message line="2" kind="error"></message> 
       </compile>
    </ajc-test>
<ajc-test title="check-time illegal modifiers" num="308" keywords="from-errors,purejava" dir="errors" abccomment="Errors on lines 8 and 11 not caught by jlc.  Reported to                   to Nate.  July 6/04 LJH">
      <abckeywords> <laurie></laurie> <nate></nate> </abckeywords>
        <compile files="Modifiers.java">
            <message line="2" kind="error"></message>
            <message line="3" kind="error"></message>
            <message line="4" kind="error"></message>
            <message line="6" kind="error"></message>
            <message line="7" kind="error"></message>
            <message line="8" kind="error"></message>
            <message line="9" kind="error"></message>
            <message line="11" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="illegal synchronized stmts" num="309" keywords="from-errors,purejava,messages-vary" dir="errors" abccomment="Parser throws extra error when giving up. PA/AGS">
        <compile options="!eclipse" files="BadSynchronized.java">
            <ajcmessage line="6" kind="error"></ajcmessage>
            <message kind="error"></message>
            <message line="6" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="modifiers on interface members" num="310" keywords="from-errors,purejava" dir="pureJava" abccomment="Errors on lines 2,3,7 and 8 missing for jlc. Reported to                   Nate. July 6/04">
      <abckeywords> <laurie></laurie> <nate></nate> </abckeywords>
        <compile files="InterfaceMembers.java">
            <message line="2" kind="error"></message>
            <message line="3" kind="error"></message>
            <message line="4" kind="error"></message>
            <message line="5" kind="error"></message>
            <message line="7" kind="error"></message>
            <message line="8" kind="error"></message>
            <message line="9" kind="error"></message>
            <message line="10" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="aspect as member of interface (private and protected)" pr="534" num="311" keywords="from-errors" dir="new">
        <compile files="AspectInInterfaceCF.java">
            <message line="11" kind="error"></message>
            <message line="14" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="good errors (and not too many) for missing members" num="312" keywords="from-errors,purejava" dir="errors" comment="XXX import of class in default package" abccomment="jlc doesn't find 2 and should.  jlc exits after finding                   1.  If 1 is commented out then 2,6,10 are not found, but                   this is probably due to other errors that stop jlc from                   looking for them.   Reported this case to Nate,                   July 6/04 LJH; we bomb out after failing to find the imported     package - accepting this (PA/AGS/ODM)">
        <compile files="NotFound.java">
            <message kind="error"></message>
            <ajcmessage line="1" kind="error"></ajcmessage>
            <ajcmessage line="2" kind="error"></ajcmessage>
            <ajcmessage line="6" kind="error"></ajcmessage>
            <ajcmessage line="9" kind="error"></ajcmessage>
            <ajcmessage line="10" kind="error"></ajcmessage>
            <ajcmessage line="14" kind="error"></ajcmessage>
            <ajcmessage line="16" kind="error"></ajcmessage>
        </compile>
    </ajc-test>
<ajc-test title="expecting compile failures with subclass narrowing scope of superclass methods or accessing private superclass variables" pr="536" num="313" keywords="from-errors,purejava" dir="new" abccomment="jlc missing the error on line 46, reported to Nate,                    July 6/04 LJH">
        <compile files="RestrictingVisibilityCF.java">
            <message line="27" kind="error"></message>
            <message line="29" kind="error"></message>
            <message line="31" kind="error"></message>
            <message line="39" kind="error"></message>
            <message line="41" kind="error"></message>
            <message line="46" kind="error"></message>
            <message line="48" kind="error"></message>
            <message line="53" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="introduced inner interfaces - compile should fail to bind interface name outside of Aspect or if implementing method is not public" pr="494" num="314" keywords="from-errors" dir="new" abccomment="abc bails out earlier, but ok. ODM 11/08/04">
        <compile options="-Xlint:ignore" files="IntroduceInnerInterfaceCF.java">
            <ajcmessage line="18" kind="error"></ajcmessage>
            <ajcmessage line="19" kind="error"></ajcmessage>
            <ajcmessage line="20" kind="error"></ajcmessage>
            <ajcmessage line="24" kind="error"></ajcmessage>
            <ajcmessage line="42" kind="error"></ajcmessage>
            <ajcmessage line="45" kind="error"></ajcmessage>
            <ajcmessage line="48" kind="error"></ajcmessage>
            <ajcmessage line="50" kind="error"></ajcmessage>
            <ajcmessage line="58" kind="error"></ajcmessage>
            <message line="58" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="aspects may not implement Serializable or Cloneable" num="315" keywords="from-errors" dir="errors">
        <compile files="AspectInterfaces.java">
            <message line="4" kind="error"></message>
            <message line="5" kind="error"></message>
            <message line="9" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="inner classes may not have static non-constant members" num="316" keywords="from-errors,purejava" dir="errors" abccomment="ajc actually reports three errors ...">
        <compile files="InnerMembers.java">
            <ajcmessage line="8" kind="error"></ajcmessage>
            <ajcmessage line="9" kind="error"></ajcmessage>
            <ajcmessage line="10" kind="error"></ajcmessage>
            <ajcmessage line="11" kind="error"></ajcmessage>
            <ajcmessage line="16" kind="error"></ajcmessage>
            <ajcmessage line="17" kind="error"></ajcmessage>
            <message line="8" kind="error"></message>
	    <message line="9" kind="error"></message>
	    <message line="10" kind="error"></message>
	    <message line="11" kind="error"></message>
	</compile>
    </ajc-test>
<ajc-test title="explicit constructor calls can throw exceptions" num="317" keywords="from-errors" dir="errors">
        <compile files="ExplicitConstructorThrows.java">
            <message line="3" kind="error"></message>
            <message line="12" kind="error"></message>
            <message line="18" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="flow analysis with local types" num="318" keywords="from-errors,purejava" dir="pureJava" abccomment="abc reports a range of line numbers which is fine                   July 6/04 LJH">
        <compile files="InnerFlow.java">
            <ajcmessage line="5" kind="error"></ajcmessage>
            <message line="3" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="bad proceed args good error messages" pr="664" num="319" keywords="from-errors" dir="errors">
        <compile files="ProceedArgsCE.java">
            <message line="13" kind="error"></message>
            <message line="16" kind="error"></message>
            <message line="19" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="initial tests for new introduction style" num="320" keywords="from-design" dir="design/intro">
        <compile files="Simple.java"></compile>
        <run class="Simple"></run>
    </ajc-test>
<ajc-test title="overriding of introduced methods and accessibility" num="321" keywords="from-design" dir="design/intro">
        <compile files="Overriding.java"></compile>
        <run class="Overriding"></run>
    </ajc-test>
<ajc-test title="within and introductions behaves correctly" num="322" keywords="from-design" dir="design/intro">
        <compile files="Within.java"></compile>
        <run class="Within"></run>
    </ajc-test>
<ajc-test title="introduction of static methods and fields on classes and interfaces" num="323" keywords="from-design,knownLimitation" dir="design/intro" abccomment="abc does not implement static intertype fields on interfaces, either. ODM 07/07/04">
        <compile files="Statics.java">
           <message line="46" kind="error"></message>
           <message line="47" kind="error"></message>
           <message line="49" kind="error"></message>
           <message line="51" kind="error"></message>
        </compile>
        <ajcrun class="Statics"></ajcrun>
    </ajc-test>
<ajc-test title="correct inheritance of multiple concrete methods" pr="570" num="324" keywords="from-design" dir="design/intro">
        <compile files="MultiInheritCP.java"></compile>
        <run class="MultiInheritCP"></run>
    </ajc-test>
<ajc-test title="errors in inheritance of multiple concrete methods 1" pr="570" num="325" keywords="from-design" dir="abctests/design/intro" abccomment="abc bails out early, split into several cases. ODM 08/07/04">
        <compile files="MultiInheritCF1.java">
            <ajcmessage line="21" kind="error"></ajcmessage>
            <ajcmessage line="41" kind="error"></ajcmessage>
            <ajcmessage line="42" kind="error"></ajcmessage>
            <ajcmessage line="43" kind="error"></ajcmessage>
            <ajcmessage line="45" kind="error"></ajcmessage>
            <ajcmessage line="46" kind="error"></ajcmessage>
            <message line="42" kind="error"></message>
            <message line="42" kind="error"></message>
            <message line="46" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="errors in inheritance of multiple concrete methods 2" pr="570" num="326" keywords="from-design" dir="abctests/design/intro" abccomment="abc bails out early, split into several cases. ODM 08/07/04">
        <compile files="MultiInheritCF2.java">
            <ajcmessage line="21" kind="error"></ajcmessage>
            <ajcmessage line="41" kind="error"></ajcmessage>
            <ajcmessage line="42" kind="error"></ajcmessage>
            <ajcmessage line="43" kind="error"></ajcmessage>
            <ajcmessage line="45" kind="error"></ajcmessage>
            <ajcmessage line="46" kind="error"></ajcmessage>
            <message line="43" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="errors in inheritance of multiple concrete methods 3" pr="570" num="327" keywords="from-design" dir="abctests/design/intro" abccomment="abc bails out early, split into several cases. ODM 08/07/04">
        <compile files="MultiInheritCF3.java">
            <ajcmessage line="21" kind="error"></ajcmessage>
            <ajcmessage line="41" kind="error"></ajcmessage>
            <ajcmessage line="42" kind="error"></ajcmessage>
            <ajcmessage line="43" kind="error"></ajcmessage>
            <ajcmessage line="45" kind="error"></ajcmessage>
            <ajcmessage line="46" kind="error"></ajcmessage>
            <message line="41" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="errors in inheritance of multiple concrete methods 4" pr="570" num="328" keywords="from-design" dir="abctests/design/intro" abccomment="abc bails out early, split into several cases. ODM 08/07/04">
        <compile files="MultiInheritCF4.java">
            <ajcmessage line="21" kind="error"></ajcmessage>
            <ajcmessage line="41" kind="error"></ajcmessage>
            <ajcmessage line="42" kind="error"></ajcmessage>
            <ajcmessage line="43" kind="error"></ajcmessage>
            <ajcmessage line="45" kind="error"></ajcmessage>
            <ajcmessage line="46" kind="error"></ajcmessage>
            <message line="21" kind="error"></message>        
        </compile>
    </ajc-test>
<ajc-test title="declared exceptions are checked correctly on intros (errors) 1" num="329" dir="abctests/design/intro" abccomment="abc bails out early, so copied. ODM 09/07/04">
        <compile files="ExceptionsCF1.java">
            <ajcmessage line="8" kind="error"></ajcmessage>
            <ajcmessage line="23" kind="error"></ajcmessage>
            <message line="23" kind="error"></message> 
       </compile>
    </ajc-test>
<ajc-test title="declared exceptions are checked correctly on intros (errors) 2" num="330" dir="abctests/design/intro" abccomment="abc bails out early, so copied. ODM 09/07/04">
        <compile files="ExceptionsCF2.java">
            <ajcmessage line="8" kind="error"></ajcmessage>
            <ajcmessage line="23" kind="error"></ajcmessage>
            <message line="8" kind="error"></message> 
       </compile>
    </ajc-test>
<ajc-test title="declared exceptions are checked correctly on intros" num="331" dir="design/intro">
        <compile files="ExceptionsCP.java"></compile>
        <run class="ExceptionsCP"></run>
    </ajc-test>
<ajc-test title="Joinpoint is not created for foo(String) when before() advice is present." num="332" keywords="from-design" dir="design/reflect">
        <compile files="SimpleAround1.java"></compile>
        <run class="SimpleAround1"></run>
    </ajc-test>
<ajc-test title="more tests of eachobject with some difficult typing issues" num="333" keywords="from-design" dir="design/eachobject">
        <compile files="Tricky3.java"></compile>
        <run class="Tricky3"></run>
    </ajc-test>
<ajc-test title="eachobject: eachobject(receptions(...)) [eachobject]" num="334" keywords="from-design" dir="design/eachobject" abccomment="fails on account of aspect inheritance. ODM 09/07/04">
        <compile files="Tricky1.java"></compile>
        <run class="Tricky1"></run>
    </ajc-test>
<ajc-test title="Checking new joinpoints" num="335" keywords="from-design" dir="design/reflect" abccomment="fails on account of problems with aspectOf and aspect inheritance. ODM 09/07/04">
        <compile files="Coverage.java"></compile>
        <run class="Coverage"></run>
    </ajc-test>
<ajc-test title="eachobject: simple test [eachobject] (still)" num="336" keywords="from-design" dir="design/eachobject" abccomment="fails on account of aspect inheritance. ODM 09/07/04">
        <compile files="Simple.java"></compile>
        <run class="Simple"></run>
    </ajc-test>
<ajc-test title="scope issues with introduction (needs more work)" num="337" keywords="from-design" dir="design/intro">
        <compile files="p1/ScopeIssues.java,p1/C1.java"></compile>
        <run class="p1.ScopeIssues"></run>
    </ajc-test>
<ajc-test title="properly make choice between cast and parenthesis in parser" num="338" keywords="from-resolved_10x" dir="new">
        <compile files="JoinPointFields.java"></compile>
        <run class="JoinPointFields"></run>
    </ajc-test>
<ajc-test title="field from implemented interface not found in advice" pr="96" num="339" keywords="from-resolved_10x" dir="new">
        <compile files="FieldFromImplementsNotFound.java"></compile>
        <run class="FieldFromImplementsNotFound"></run>
    </ajc-test>
<ajc-test title="make sure advice affects introduced methods and constructors" num="340" keywords="from-resolved_10x" dir="new">
        <compile files="AdviceOnIntroduced.java"></compile>
        <run class="AdviceOnIntroduced"></run>
    </ajc-test>
<ajc-test title="new around construct" num="341" keywords="from-resolved_10x" dir="new">
        <compile files="AroundAdvice.java"></compile>
        <run class="AroundAdvice"></run>
    </ajc-test>
<ajc-test title="aspect redefines a parameter" pr="65" num="342" keywords="from-resolved_10x" dir="new">
        <compile files="AspectRedefinesParam.java"></compile>
        <run class="AspectRedefinesParam"></run>
    </ajc-test>
<ajc-test title="introducing extends and implements" num="343" keywords="from-resolved_10x" dir="new" abccomment="Need to support I1 extends I2,I3,I4. ODM 09/07/04">
        <compile files="HierarchyIntroductions.java">
        <message line="29" kind="warning"></message>
        </compile>
        <run class="HierarchyIntroductions"></run>
    </ajc-test>
<ajc-test title="(related) aspect on interface" pr="104" num="344" keywords="from-resolved_10x" dir="new">
        <compile files="AspectOnInterface.java"></compile>
        <run class="AspectOnInterface"></run>
    </ajc-test>
<ajc-test title="advice and package visibility 1" pr="106" num="345" keywords="from-resolved_10x" dir="new">
        <compile options="-Xlint:ignore" files="packagevisibility/PackagesAndAdvice.java,packagevisibility/testPackage/Class1.java,packagevisibility/testPackage/Class2.java"></compile>
        <run class="packagevisibility.PackagesAndAdvice"></run>
    </ajc-test>
<ajc-test title="advice and package visibility 2" pr="106" num="346" keywords="from-resolved_10x" dir="new">
        <compile options="-Xlint:error" files="packagevisibility/PackagesAndAdviceCf.java,packagevisibility/testPackage/Class1.java,packagevisibility/testPackage/Class2.java">
        <message line="29" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="advice on implied empty constructor" num="347" keywords="from-resolved_10x" dir="new">
        <compile files="AdviceOnEmptyConstructor.java"></compile>
        <run class="AdviceOnEmptyConstructor"></run>
    </ajc-test>
<ajc-test title="advice on * *(..) not mapping to initializers" num="348" keywords="from-resolved_10x" dir="new">
        <compile files="InitializerAdvice.java"></compile>
        <run class="InitializerAdvice"></run>
    </ajc-test>
<ajc-test title="three type declarations in the scope of an advice" num="349" keywords="from-resolved_10x" dir="new">
        <compile files="TypeDeclInAdvice.java"></compile>
        <run class="TypeDeclInAdvice"></run>
    </ajc-test>
<ajc-test title="introduction fails on class with an inner class that extends or implements something" pr="129" num="350" keywords="from-resolved_10x" dir="new">
        <compile files="IntroductionFailsWithInnerClass.java"></compile>
        <run class="IntroductionFailsWithInnerClass"></run>
    </ajc-test>
<ajc-test title="checks that methods are introduced on the topmost class implemented" pr="126" num="351" keywords="from-resolved_10x" dir="new">
        <compile files="TopmostImplements.java"></compile>
        <run class="TopmostImplements"></run>
    </ajc-test>
<ajc-test title="a couple different returns from around advice" pr="140" num="352" keywords="from-resolved_10x" dir="new/arndAdvRet">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="member finally advice paired with signature advice" num="353" keywords="from-resolved_10x" dir="new">
        <compile files="TryErrors.java"></compile>
        <run class="TryErrors"></run>
    </ajc-test>
<ajc-test title="aspect of eachobject(instanceof(Interface))" num="354" keywords="from-resolved_10x" dir="new">
        <compile files="AspectOfInterface.java"></compile>
        <run class="AspectOfInterface"></run>
    </ajc-test>
<ajc-test title="final member initialization broken with JDK before 1.1.8" pr="162" num="355" keywords="from-resolved_10x" dir="new/finalMemInit">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="same package and var name clash in preprocessed code when aspectOf is used" pr="205" num="356" keywords="from-resolved_10x" dir="new/packageNameClash">
        <compile files="otherpkg/Driver.java,pkg/Aspect1.java,pkg/Class1.java"></compile>
        <run class="otherpkg.Driver"></run>
    </ajc-test>
<ajc-test title="and PR#201 advice on static methods fails javac compile with this" pr="221" num="357" keywords="from-resolved_10x" dir="new/adviceOnStaticMeth">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="non-static advice on inner class defined inside of method body" num="358" keywords="from-resolved_10x" dir="new" abccomment="fails on use of thisJoinPoint when advice applies inside inner class;                  generates verify error. error goes away when use of thisJoinPoint is                  commented out. Emailed Ganesh. ODM 09/07/04">
        <compile files="MethodInner.java"></compile>
        <run class="MethodInner"></run>
    </ajc-test>
<ajc-test title="simple single-threaded eachcflow test (includes aspectOf)" num="359" keywords="from-resolved_10x" dir="new">
        <compile files="Client.java"></compile>
        <run class="Client"></run>
    </ajc-test>
<ajc-test title="bad type resolution when var reassigned in same scope" pr="191" num="360" keywords="from-resolved_10x" dir="new/scopeTypingBug">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="generating the right throws clause for call-site advice (and around)" pr="242" num="361" keywords="from-resolved_10x" dir="new" abccomment="exception checker does not work in the presence of around.                   ODM 09/07/04">
        <compile files="ComputedThrows.java"></compile>
        <run class="ComputedThrows"></run>
    </ajc-test>
<ajc-test title="advice on calls to static methods using several syntax" pr="246" num="362" keywords="from-resolved_10x" dir="new" abccomment="reachability checker needs to be hacked so that proceed may throw                   any exception. On Ganesh's list. ODM 09/07/04">
        <compile files="StaticCalls.java"></compile>
        <run class="StaticCalls"></run>
    </ajc-test>
<ajc-test title=", PR#249, PR#250 advice on constructor sites" pr="248" num="363" keywords="from-resolved_10x" dir="new" abccomment="reachability checker needs to be hacked so that proceed may throw                   any exception. On Ganesh's list. ODM 09/07/04">
        <compile files="NewSiteAdvice.java"></compile>
        <run class="NewSiteAdvice"></run>
    </ajc-test>
<ajc-test title="test after throwing advice in several ways" num="364" keywords="from-resolved_10x" dir="new" abccomment="the usual problem with around and exception checker. ODM 09/07/04">
        <compile files="AfterThrowing.java"></compile>
        <run class="AfterThrowing"></run>
    </ajc-test>
<ajc-test title="fancy name patterns for method names" num="365" keywords="from-resolved_10x" dir="new">
        <compile files="WildNames.java"></compile>
        <run class="WildNames"></run>
    </ajc-test>
<ajc-test title="calls: calls(...)" num="366" keywords="from-resolved_10x" dir="design/calls">
        <compile options="-Xlint:ignore" files="Simple.java"></compile>
        <run class="Simple"></run>
    </ajc-test>
<ajc-test title="throws Exception clause is unnecessarily added to Driver.main method" pr="259" num="367" keywords="from-resolved_10x" dir="new/extraThrows">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="javac fails when this is referenced in the static main method" pr="262" num="368" keywords="from-resolved_10x" dir="new/thisUsedInMain">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="and 276 cast error generated by ajc when type not in signature" pr="275" num="369" keywords="from-resolved_10x" dir="new/badCast">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="calls to methods to which we don't have source" pr="285" num="370" keywords="from-resolved_10x" dir="new">
        <compile files="ExternalCalls.java"></compile>
        <run class="ExternalCalls"></run>
    </ajc-test>
<ajc-test title="more aspect inheritance" pr="265" num="371" keywords="from-resolved_10x" dir="new/beforeNotRun">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="around and calls with both calling and called this params" pr="310" num="372" keywords="from-resolved_10x" dir="new">
        <compile files="AroundAndCalls.java"></compile>
        <run class="AroundAndCalls"></run>
    </ajc-test>
<ajc-test title="compiler crashes with eachobject and named pointcuts with parameters" pr="290" num="373" keywords="from-resolved_10x" dir="new/pointcutParameter">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="lookup rules for unqualified pointcut names" pr="304" num="374" keywords="from-resolved_10x" dir="new/unqualifiedPointcutName">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="eachcflow only instantiated if the aspect has some advice in it" pr="321" num="375" keywords="from-resolved_10x" dir="new">
        <compile files="CFlowNoAdvice.java"></compile>
        <run class="CFlowNoAdvice"></run>
    </ajc-test>
<ajc-test title="(DESIGN QUESTION) aspect of eachJVM advising its own initializer" pr="309" num="376" keywords="from-resolved_10x" dir="new">
        <compile files="EachJVMOnSelf.java"></compile>
        <run class="EachJVMOnSelf"></run>
    </ajc-test>
<ajc-test title="after returning advice on calls to constructors" pr="302" num="377" keywords="from-resolved_10x" dir="new">
        <compile files="AfterConstructorCalls.java"></compile>
        <run class="AfterConstructorCalls"></run>
    </ajc-test>
<ajc-test title="Does annotating 'new' with a type work as desired?" num="378" keywords="from-resolved_10x" dir="new">
        <compile files="ConstructorSignatures.java"></compile>
        <run class="ConstructorSignatures"></run>
    </ajc-test>
<ajc-test title="Referring to inner classes as {super}.{inner} confused ajc." num="379" keywords="from-resolved_10x" dir="new">
        <compile files="InnerClassNaming.java"></compile>
        <run class="InnerClassNaming"></run>
    </ajc-test>
<ajc-test title="Advice on advice" num="380" keywords="from-resolved_10x" dir="new">
        <compile files="AdviceOnAdvice.java"></compile>
        <run class="AdviceOnAdvice"></run>
    </ajc-test>
<ajc-test title="Introductions on other introductions" num="381" keywords="from-resolved_10x" dir="new">
        <compile files="IntroOnIntro.java"></compile>
        <run class="IntroOnIntro"></run>
    </ajc-test>
<ajc-test title="Putting advice on array constructors." num="382" keywords="from-resolved_10x" dir="new">
        <compile files="Orleans.java"></compile>
        <run class="Orleans"></run>
    </ajc-test>
<ajc-test title="call points within block inner classes are doubled" num="383" keywords="from-resolved_10x" dir="new">
        <compile files="DoubledCalls.java"></compile>
        <run class="DoubledCalls"></run>
    </ajc-test>
<ajc-test title="Gets and sets with other advice" num="384" keywords="from-resolved_10x" dir="new">
        <compile files="Counting3.java"></compile>
        <run class="Counting3"></run>
    </ajc-test>
<ajc-test title="Compiler can compile correct strictfp modifiers" num="385" keywords="from-resolved_10x" dir="new" abccomment="abc fails with a compile error, which is a polyglot bug: it contradicts JLS 9.1.1.2.                   Easy fix (just delete the relevant test), entered onto bugzilla. ODM 11/08/04">
        <compile files="StrictFpCompile.java"></compile>
        <run class="StrictFpCompile"></run>
    </ajc-test>
<ajc-test title="basic test of callsto pointcuts" num="386" keywords="from-resolved_10x" dir="new">
        <compile files="CallsTo.java"></compile>
        <run class="CallsTo"></run>
    </ajc-test>
<ajc-test title="package wildcards in packages" num="387" keywords="from-resolved_10x" dir="new">
        <compile files="pack/PackageWildcards.java"></compile>
        <run class="pack.PackageWildcards"></run>
    </ajc-test>
<ajc-test title="around advice on calls and receptions with lots of context" num="389" keywords="from-resolved_10x" dir="new">
        <compile files="AroundCalls.java"></compile>
        <run class="AroundCalls"></run>
    </ajc-test>
<ajc-test title="! modifier and char in pointcut (no longer an error)" pr="208" num="390" keywords="from-resolved_10x" dir="new" abccomment="NPE in matcher. ODM 16/07/04">
        <compile files="NotCharInPointcut.java"></compile>
        <run class="NotCharInPointcut"></run>
    </ajc-test>
<ajc-test title="right number of aspect instances per cflow" pr="308" num="391" keywords="from-resolved_10x" dir="new">
        <compile files="CFlowObjects.java"></compile>
        <run class="CFlowObjects"></run>
    </ajc-test>
<ajc-test title="many this's into around advice on calls" pr="310" num="392" keywords="from-resolved_10x" dir="new">
        <compile files="AroundCallsArgs.java"></compile>
        <run class="AroundCallsArgs"></run>
    </ajc-test>
<ajc-test title="Ensures introduction methods can have advice placed on them" num="393" keywords="from-resolved_10x" dir="new">
        <compile files="Dominates.java"></compile>
        <run class="Dominates"></run>
    </ajc-test>
<ajc-test title="No boolean appearing in the 'if' clause for around advice with eachJVM()" pr="355" num="394" keywords="from-resolved_10x" dir="new">
        <compile files="PR355.java"></compile>
        <run class="PR355"></run>
    </ajc-test>
<ajc-test title="Order of super introductions." num="395" keywords="from-resolved_10x" dir="new">
        <compile files="OrderOfExtendsPlusAndImplementsPlus.java"></compile>
        <run class="OrderOfExtendsPlusAndImplementsPlus"></run>
    </ajc-test>
<ajc-test title="Ensuring backdoor methods are produced." num="396" keywords="from-resolved_10x" dir="new">
        <compile files="BackdoorMethods.java"></compile>
        <run class="BackdoorMethods"></run>
    </ajc-test>
<ajc-test title="no duplicate advice methods in abstract aspects" num="397" keywords="from-resolved_10x" dir="new">
        <compile files="GeneratingDuplicateNamedAdviceMethodsInAbstractAspects.java"></compile>
        <run class="GeneratingDuplicateNamedAdviceMethodsInAbstractAspects"></run>
    </ajc-test>
<ajc-test title="no duplicate advice methods in abstract aspects extended" num="398" keywords="from-resolved_10x" dir="new">
        <compile files="GeneratingDuplicateNamedAdviceMethodsInAbstractAspectsWithExtendedAspect.java"></compile>
        <run class="GeneratingDuplicateNamedAdviceMethodsInAbstractAspectsWithExtendedAspect"></run>
    </ajc-test>
<ajc-test title="Putting after-constructor advice on the wrong types implementing the same interface." num="399" keywords="from-resolved_10x" dir="new">
        <compile files="AfterAdviceOnConstructorsOnTheWrongType.java"></compile>
        <run class="AfterAdviceOnConstructorsOnTheWrongType"></run>
    </ajc-test>
<ajc-test title="Instantiating non-static inner classes in advice." num="400" keywords="from-resolved_10x" dir="new">
        <compile files="NonstaticInnerClassesInAspects.java"></compile>
        <run class="NonstaticInnerClassesInAspects"></run>
    </ajc-test>
<ajc-test title="Referring to pointcut in of clauses" pr="316" num="401" keywords="from-resolved_10x" dir="new">
        <compile files="ReferringToPointcutsInAspect_PR316.java"></compile>
        <run class="ReferringToPointcutsInAspect_PR316"></run>
    </ajc-test>
<ajc-test title="Confused referring to instance variables and locals" pr="191" num="402" keywords="from-resolved_10x" dir="new">
        <compile files="ScopesAndFields_PR191.java"></compile>
        <run class="ScopesAndFields_PR191"></run>
    </ajc-test>
<ajc-test title="Parsing C+ expressions without parens in super introductions." num="403" keywords="from-resolved_10x" dir="new">
        <compile files="ParsingSubtypesIntroductions.java"></compile>
        <run class="ParsingSubtypesIntroductions"></run>
    </ajc-test>
<ajc-test title="Introducing methods on classes that implements inner-interfaces with +implements." num="404" keywords="from-resolved_10x" dir="new">
        <compile options="-Xlint:ignore" files="IntroducingMethodsOnPlusImplementedInterfaces.java"></compile>
        <run class="IntroducingMethodsOnPlusImplementedInterfaces"></run>
    </ajc-test>
<ajc-test title="Methods with the same name are generated when abstract aspects extend another abstract aspect." pr="464" num="405" keywords="from-resolved_10x" dir="new">
        <compile files="AbstractAspectsExtendingAbstractAspectsGeneratesMethodsWithTheSameName_PR464.java"></compile>
        <run class="AbstractAspectsExtendingAbstractAspectsGeneratesMethodsWithTheSameName_PR464"></run>
    </ajc-test>
<ajc-test title="Making sure final variables stay final." num="406" keywords="from-resolved_10x" dir="new">
        <compile files="RemovingFinals.java"></compile>
        <run class="RemovingFinals"></run>
    </ajc-test>
<ajc-test title="Problem resolving meta-joinpoint names with around advice on methods called from around advice." num="407" keywords="from-resolved_10x" dir="new">
        <compile files="AroundAdviceOnMethodsCalledInAroundAdvice.java"></compile>
        <run class="AroundAdviceOnMethodsCalledInAroundAdvice"></run>
    </ajc-test>
<ajc-test title="Make sure that names of lifted local classes are right when referenced in call-site advice" num="408" keywords="from-resolved_10x" dir="new">
        <compile files="CallsAndLocalClasses.java"></compile>
        <run class="CallsAndLocalClasses"></run>
    </ajc-test>
<ajc-test title="matching for throws clause" num="409" keywords="from-resolved_10x" dir="new">
        <compile files="ThrowsMatching.java"></compile>
        <run class="ThrowsMatching"></run>
    </ajc-test>
<ajc-test title="holding onto proceed calls in a closure-like way" num="41001" keywords="from-resolved_10x,knownLimitation" dir="abctests/new" abccomment="duplicated from 410 to fix bug in test case">
        <compile files="HoldProceed.java"></compile>
        <run class="HoldProceed"></run>
    </ajc-test>
<ajc-test title="basic test of declare soft" num="411" keywords="from-resolved_10x" dir="new">
        <compile files="DeclareSoft.java"></compile>
        <run class="DeclareSoft"></run>
    </ajc-test>
<ajc-test title="advice on calls to constructors of anonymous inners and access to context" num="412" keywords="from-resolved_10x" dir="new">
        <compile files="NewAnonymous.java"></compile>
        <run class="NewAnonymous"></run>
    </ajc-test>
<ajc-test title="Cannot bind a name." num="413" keywords="from-resolved_10x,purejava" dir="new" abccomment="ajc now finds a compile-time error in this benchmark,                     as does javac.  jlc does not find the error, have                     reported the error to Nate.  July 7/04">
        <abckeywords> <laurie></laurie> <nate></nate> </abckeywords>
        <compile files="CannotReferenceSuper.java">
           <ajcmessage kind="ignore"></ajcmessage>
           <message line="26" kind="error"></message>
        </compile>
        <ajcrun class="CannotReferenceSuper"></ajcrun>
    </ajc-test>
<ajc-test title="inner aspects can't access outer pointcuts" pr="211" num="414" keywords="from-resolved_10x" dir="new/innerAspectAccess">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="implements and extends are introduced before methods and fields" num="415" keywords="from-resolved_10x" dir="new">
        <compile files="IntroOrder.java"></compile>
        <run class="IntroOrder"></run>
    </ajc-test>
<ajc-test title="a static/inner aspect of a inner class of an aspect is pulled to the top level as static" num="416" keywords="from-resolved_10x" dir="new">
        <compile files="StaticInnerAspect.java"></compile>
        <run class="StaticInnerAspect"></run>
    </ajc-test>
<ajc-test title="Crashes with privileged aspect." num="417" keywords="from-resolved_10x" dir="new">
        <compile files="Privileged.java"></compile>
        <run class="Privileged"></run>
    </ajc-test>
<ajc-test title="join points exist in the execution of field initializers" num="41801" keywords="from-resolved_10x" dir="abctests/new" abccomment="cloned from 418">
        <compile files="FieldInitializerJoinPoints.java"></compile>
        <run class="FieldInitializerJoinPoints"></run>
    </ajc-test>
<ajc-test title="privileged aspects" num="419" keywords="from-resolved_10x" dir="new/privilegedAspects">
        <compile files="main/Main.java,fish/PrivateClass.java,fish/B.java,fowl/C.java,fowl/D.java"></compile>
        <run class="main.Main"></run>
    </ajc-test>
<ajc-test title="advice on field gets in privileged aspects" num="420" keywords="from-resolved_10x" dir="new">
        <compile files="AdviceOnPrivileged.java"></compile>
        <run class="AdviceOnPrivileged"></run>
    </ajc-test>
<ajc-test title="Two anonymous classes in the same scope" num="421" keywords="from-resolved_10x" dir="new">
        <compile files="TwoAnonymous.java"></compile>
        <run class="TwoAnonymous"></run>
    </ajc-test>
<ajc-test title="basic tests for initializer and staticinitializer PCDs" num="422" keywords="from-resolved_10x" dir="new">
        <compile files="InitializerTest.java"></compile>
        <run class="InitializerTest"></run>
    </ajc-test>
<ajc-test title="introduction of an initializer into a class" pr="98" num="423" keywords="from-resolved_10x" dir="new">
        <compile files="IntroductionOfInitializer.java"></compile>
        <run class="IntroductionOfInitializer"></run>
    </ajc-test>
<ajc-test title="some method accessibility tests, particularly package-protected and inheritance" num="424" keywords="from-resolved_10x" dir="new/access">
        <compile files="Test1.java,pc/C.java,psub/SubC.java,psub/A.java"></compile>
        <run class="Test1"></run>
    </ajc-test>
<ajc-test title="fairly monotonous (and non-covering) tests for expanded dot patterns" num="425" keywords="from-resolved_10x" dir="new">
        <compile files="ExpandedDotDotPattern.java"></compile>
        <run class="ExpandedDotDotPattern"></run>
    </ajc-test>
<ajc-test title="field patterns and subtyping" num="426" keywords="from-resolved_10x" dir="new">
        <compile files="FieldPatterns.java"></compile>
        <run class="FieldPatterns"></run>
    </ajc-test>
<ajc-test title="Checking formal matching as in Roeder's bug in 0.7b10" num="427" keywords="from-resolved_10x" dir="new">
        <compile files="FormalMatching.java"></compile>
        <run class="FormalMatching"></run>
    </ajc-test>
<ajc-test title="Introducing synchronized methods on interfaces." num="428" keywords="from-resolved_10x" dir="new">
        <compile files="SynchronizedMethodsOnInterfaces.java"></compile>
        <run class="SynchronizedMethodsOnInterfaces"></run>
    </ajc-test>
<ajc-test title="The pointcut params (..,int..) is not recognizing (Object,int,Object)." num="429" keywords="from-resolved_10x" dir="new">
        <compile files="Params.java"></compile>
        <run class="Params"></run>
    </ajc-test>
<ajc-test title="calls advice on array objects causes error in code generation" num="430" keywords="from-resolved_10x" dir="new">
        <compile files="CallsToArray.java"></compile>
        <run class="CallsToArray"></run>
    </ajc-test>
<ajc-test title="join points in field initializers aren't showing up." num="431" keywords="from-resolved_10x" dir="new">
        <compile files="NonexistentFieldInitializers.java"></compile>
        <run class="NonexistentFieldInitializers"></run>
    </ajc-test>
<ajc-test title="Handlers problem" pr="318" num="432" keywords="from-resolved_10x" dir="new">
        <compile files="PR318.java"></compile>
        <run class="PR318"></run>
    </ajc-test>
<ajc-test title="work nicely with inner class method look-up rules and call-site advice" num="433" keywords="from-resolved_10x" dir="new">
        <compile files="InnerMethods.java"></compile>
        <run class="InnerMethods"></run>
    </ajc-test>
<ajc-test title="strictfp modifier allowed on advice" num="434" keywords="from-resolved_10x" dir="new">
        <compile files="StrictFPAdvice.java"></compile>
        <run class="StrictFPAdvice"></run>
    </ajc-test>
<ajc-test title="No argthis was being created for calls advice." pr="415" num="435" keywords="from-resolved_10x" dir="new">
        <compile files="PR415.java"></compile>
        <run class="PR415"></run>
    </ajc-test>
<ajc-test title="Ensuring no advice with instanceof(..) is run on static methods." num="436" keywords="from-resolved_10x" dir="new">
        <compile files="StaticMethodsShouldNotReceiveInstanceofAdvice.java"></compile>
        <run class="StaticMethodsShouldNotReceiveInstanceofAdvice"></run>
    </ajc-test>
<ajc-test title="Null pointer on gets advice showing the case causing the error" num="437" keywords="from-resolved_10x" dir="new">
        <compile files="NullPointerOnGetsSimple.java"></compile>
        <run class="NullPointerOnGetsSimple"></run>
    </ajc-test>
<ajc-test title="try to make sure that dynamic JoinPoint objects aren't generated when used inside of if (false) { ... }" num="438" keywords="from-resolved_10x" dir="new">
        <compile files="IfdefsAndAdvice.java"></compile>
        <run class="IfdefsAndAdvice"></run>
    </ajc-test>
<ajc-test title="within and withincode (doesn't all work due to local class name issues)" num="439" keywords="from-resolved_10x" dir="new">
        <compile files="WithinInners.java"></compile>
        <run class="WithinInners"></run>
    </ajc-test>
<ajc-test title="around advice on calls within inner classes (including protected method calls) 1" num="440" keywords="from-resolved_10x" dir="new">
        <compile options="-1.3" files="AroundInnerCalls13.java"></compile>
        <run class="AroundInnerCalls13"></run>
    </ajc-test>
<ajc-test title="around advice on calls within inner classes (including protected method calls) 2" num="441" keywords="from-resolved_10x" dir="new">
        <compile options="-1.4" files="AroundInnerCalls.java"></compile>
        <run class="AroundInnerCalls"></run>
    </ajc-test>
<ajc-test title="Arguments to runNext should be final when needed" num="442" keywords="from-resolved_10x" dir="new">
        <compile files="Finals.java"></compile>
        <run class="Finals"></run>
    </ajc-test>
<ajc-test title="Method introductions" num="443" keywords="from-resolved_10x" dir="new">
        <compile files="MethodIntroductions.java"></compile>
        <run class="MethodIntroductions"></run>
    </ajc-test>
<ajc-test title="Putting an introduced method on each interface" num="444" keywords="from-resolved_10x" dir="new">
        <compile files="IntroducedMethodsOnEachInterface.java"></compile>
        <run class="IntroducedMethodsOnEachInterface"></run>
    </ajc-test>
<ajc-test title="Extending interfaces" num="445" keywords="from-resolved_10x" dir="new">
        <compile files="BindingInterfaces.java"></compile>
        <run class="BindingInterfaces"></run>
    </ajc-test>
<ajc-test title="Introducing private methods on interfaces" num="446" keywords="from-resolved_10x" dir="new">
        <compile files="IntroducingPrivateMethodsOnInterfaces.java"></compile>
        <run class="IntroducingPrivateMethodsOnInterfaces"></run>
    </ajc-test>
<ajc-test title="Issuing errors for assigning variables thisJoinPoint -- not assigning thisJoinPoint." num="447" keywords="from-resolved_10x" dir="new">
        <compile files="ThisJoinPointAssignments.java"></compile>
        <run class="ThisJoinPointAssignments"></run>
    </ajc-test>
<ajc-test title="Static references inside of introduced bodies get bound correctly." num="448" keywords="from-resolved_10x" dir="new">
        <compile files="StaticIntroducedReferences.java"></compile>
        <run class="StaticIntroducedReferences"></run>
    </ajc-test>
<ajc-test title="cflow and object creations [of eachcflow]" pr="307" num="449" keywords="from-resolved_10x" dir="new/cflowObjectCreations">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="Doesn't import MightHaveAspect when compiling with more than 1 file. [eachobject]" num="450" keywords="from-resolved_10x" dir="new/twofiles">
        <compile files="TheObject.java,TheAspect.java"></compile>
        <run class="TheObject"></run>
    </ajc-test>
<ajc-test title="test binding to formals in calls to constructors (binding to null) (eachobject !!! now misnamed)" pr="436" num="451" keywords="from-resolved_10x" dir="new">
        <compile files="BindingThisInsteadOfFormal.java"></compile>
        <run class="BindingThisInsteadOfFormal"></run>
    </ajc-test>
<ajc-test title="After advice isn't being woven into after throwing advice" num="452" keywords="from-resolved_10x" dir="new">
        <compile files="AfterThrowingNotWoven.java"></compile>
        <run class="AfterThrowingNotWoven"></run>
    </ajc-test>
<ajc-test title="Throwing an EmptyStackException." num="453" keywords="from-resolved_10x" dir="new">
        <compile files="EmptyStack.java"></compile>
        <run class="EmptyStack"></run>
    </ajc-test>
<ajc-test title="check that MightHaveAspect interface is created correctly for an aspect in deep package" num="454" keywords="from-resolved_10x" dir="new/perThis">
	      <compile files="p/EachObjectTarget.java,the/deep/pkg/EachObjectInDeepPackage.java"></compile>
	      <run class="p.EachObjectTarget"></run>
	</ajc-test>
<ajc-test title="Defines clfow$ajc0 more once. [eachcflow]" num="455" keywords="from-resolved_10x" dir="new">
        <compile files="Binkley.java"></compile>
        <run class="Binkley"></run>
    </ajc-test>
<ajc-test title="Various calls, receptions, and callsto tests [callsto]" num="456" keywords="from-resolved_10x" dir="new">
        <compile files="CallsReceptionsCallsto.java"></compile>
        <run class="CallsReceptionsCallsto"></run>
    </ajc-test>
<ajc-test title="Was throwing exception, now just an error. [eachobject]" pr="320" num="457" keywords="from-resolved_10x" dir="new">
        <compile files="PR320.java"></compile>
        <run class="PR320"></run>
    </ajc-test>
<ajc-test title="different version of aspect inheritance, particularly empty pointcuts and abstract cflows [eachcflow]" num="458" keywords="from-resolved_10x,fail-unimplemented" dir="new" abccomment="There is an unbound formal in a pointcut which we correctly report as an error">
        <compile files="AspectInheritance.java">
	<message line="24" kind="error"></message>
	</compile>
        
	
    </ajc-test>
<ajc-test title="set advice on member initing throwing exception [eachobject]" pr="339" num="459" keywords="from-resolved_10x" dir="new">
        <compile files="PR339.java"></compile>
        <run class="PR339"></run>
    </ajc-test>
<ajc-test title="Testing class names with same name's with difference case as package. [eachobject]" pr="417" num="460" keywords="from-resolved_10x" dir="new">
        <compile files="test/TraceAspect.java,test/Test.java"></compile>
        <run class="test.Test"></run>
    </ajc-test>
<ajc-test title="Null pointer on gets advice with coverage [painful]" num="461" keywords="from-resolved_10x" dir="new">
        <compile files="NullPointerOnGets.java"></compile>
        <run class="NullPointerOnGets"></run>
    </ajc-test>
<ajc-test title="Basic test for cflow pointcuts [eachcflow]" num="462" keywords="from-resolved_10x" dir="new">
        <compile files="CFlowPoints.java"></compile>
        <run class="CFlowPoints"></run>
    </ajc-test>
<ajc-test title="Crashing when looking up the type of array members." num="463" keywords="from-resolved_10x" dir="new">
        <compile files="ArrayCasts.java"></compile>
        <run class="ArrayCasts"></run>
    </ajc-test>
<ajc-test title="PostfixExprs to various synthetic things are fixed correctly [eachobject]" num="464" keywords="from-resolved_10x" dir="new">
        <compile files="Fixes.java"></compile>
        <run class="Fixes"></run>
    </ajc-test>
<ajc-test title="Dave Binkley's problem with eachcflowroot. [eachcflow]" num="465" keywords="from-resolved_10x" dir="new">
        <compile files="Binkley2.java"></compile>
        <run class="Binkley2"></run>
    </ajc-test>
<ajc-test title="advice on an inherited method" pr="105" num="466" keywords="from-resolved_10x" dir="new">
        <compile files="AdviceOnInheritedMethod.java"></compile>
        <run class="AdviceOnInheritedMethod"></run>
    </ajc-test>
<ajc-test title=", PR#115 checks the ordering of catch clauses" pr="114" num="467" keywords="from-resolved_10x" dir="new">
        <compile files="OrderOfCatches.java"></compile>
        <run class="OrderOfCatches"></run>
    </ajc-test>
<ajc-test title="various declared exception permutations" num="468" keywords="from-resolved_10x" dir="new">
        <compile files="DeclaredExcs.java"></compile>
        <run class="DeclaredExcs"></run>
    </ajc-test>
<ajc-test title="ordering of advice kinds as well as cflow and dominates" num="469" keywords="from-resolved_10x" dir="new">
        <compile files="AdviceOrdering.java"></compile>
        <run class="AdviceOrdering"></run>
    </ajc-test>
<ajc-test title="advice on default constructor for a class only referenced via reflection" pr="241" num="470" keywords="from-resolved_10x" dir="new">
        <compile files="OddConstructors.java"></compile>
        <run class="OddConstructors"></run>
    </ajc-test>
<ajc-test title="calling and called this params in calls points" pr="289" num="471" keywords="from-resolved_10x" dir="new">
        <compile files="CallsParams.java"></compile>
        <run class="CallsParams"></run>
    </ajc-test>
<ajc-test title="primitive parameters coercable to Object just like return values are" pr="322" num="472" keywords="from-resolved_10x" dir="new">
        <compile files="ObjectForInt.java"></compile>
        <run class="ObjectForInt"></run>
    </ajc-test>
<ajc-test title="Does the matrix coverage thing for the new method signatures" num="473" keywords="from-resolved_10x" dir="new">
        <compile options="-1.4,-Xlint:ignore" files="MethodSignatures.java"></compile>
        <run vm="1.4" class="MethodSignatures"></run>
    </ajc-test>
<ajc-test title="join points in static/dynamic initializers aren't showing up." num="474" keywords="from-resolved_10x" dir="new">
        <compile files="NonexistentInitializers.java"></compile>
        <run class="NonexistentInitializers"></run>
    </ajc-test>
<ajc-test title="Gets and sets on a number of variables (field access ???)" num="475" keywords="from-resolved_10x" dir="new">
        <compile files="Gets.java"></compile>
        <run class="Gets"></run>
    </ajc-test>
<ajc-test title="correct types of parameters at call-sites" num="476" keywords="from-resolved_10x" dir="new">
        <compile options="-1.4,-Xlint:ignore" files="CallTypes.java"></compile>
        <run vm="1.4" class="CallTypes"></run>
    </ajc-test>
<ajc-test title="Joinpoints are showing up on intermediate call sites" num="477" keywords="from-resolved_10x" dir="new">
        <compile files="Counting1.java"></compile>
        <run class="Counting1"></run>
    </ajc-test>
<ajc-test title="Reception based on strictfp modifier" num="478" keywords="from-resolved_10x" dir="new">
        <compile files="StrictFpReceptions.java"></compile>
        <run class="StrictFpReceptions"></run>
    </ajc-test>
<ajc-test title="Subclasses that do not redefine a method are not being handled correctly" pr="353" num="479" keywords="from-resolved_10x" dir="new">
        <compile files="PR353b.java"></compile>
        <run class="PR353b"></run>
    </ajc-test>
<ajc-test title="making sure that super calls are bound to the right methods" num="480" keywords="from-resolved_10x" dir="new">
        <compile files="SupersAndInterfaces.java"></compile>
        <run class="SupersAndInterfaces"></run>
    </ajc-test>
<ajc-test title="inheritance, around advice and abstract pointcuts [eachobject] (still)" pr="317" num="481" keywords="from-resolved_10x" dir="new">
        <compile files="OverridingPointcuts.java"></compile>
        <run class="OverridingPointcuts"></run>
    </ajc-test>
<ajc-test title="Priviledged aspect methods are missing for privates. [eachobject]" num="482" keywords="from-resolved_10x" dir="new/foemmel">
        <compile files="TheAspect.java,TheObject.java">
        </compile>
        <run class="TheObject"></run>
    </ajc-test>
<ajc-test title="exceptions thrown and caught in advice, particularly try+proceed" num="483" keywords="from-resolved_10x" dir="new">
        <compile files="TryAndProceed.java"></compile>
        <run class="TryAndProceed"></run>
    </ajc-test>
<ajc-test title="Not and And operators in pointcuts not working" num="484" keywords="from-resolved_10x" dir="new">
        <compile files="NotAndPointcut.java"></compile>
        <run class="NotAndPointcut"></run>
    </ajc-test>
<ajc-test title="Member initializers should run before the current class constructor" num="485" keywords="from-resolved_10x" dir="new">
        <compile files="MemberInitializationsAfterExplicitConstructorCalls.java"></compile>
        <run class="MemberInitializationsAfterExplicitConstructorCalls"></run>
    </ajc-test>
<ajc-test title="Coverage tests for Member initializers should run before the current class constructor and after super" num="486" keywords="from-resolved_10x" dir="new">
        <compile files="MemberInitializationsAfterExplicitConstructorCallsCoverage.java"></compile>
        <run class="MemberInitializationsAfterExplicitConstructorCallsCoverage"></run>
    </ajc-test>
<ajc-test title="thisJoinPoint{Static} not visible in if() pcd of named pointcut" num="487" keywords="from-resolved_10x" dir="new">
        <compile files="IfPCDExprJoinPointVisibleCE.java"></compile>
        <run class="IfPCDExprJoinPointVisibleCE"></run>
    </ajc-test>
<ajc-test title="pcd if() NPE in compiler when unwinding assignment in pcd if(expr)" num="489" keywords="from-resolved_10x" dir="new">
        <compile files="IfPCDExprAssignUnparseFailure.java"></compile>
        <run class="IfPCDExprAssignUnparseFailure"></run>
    </ajc-test>
<ajc-test title="pcd if() dup methods produced when pointcut after advice etc (javac)" num="490" keywords="from-resolved_10x" dir="new">
        <compile files="IfPCDDupMethod.java"></compile>
        <run class="IfPCDDupMethod"></run>
    </ajc-test>
<ajc-test title="pcd if() variants: [anonymous, named] x [execution, call, callTyped, get, set, initializations] x [before, after, around]" num="491" keywords="from-resolved_10x" dir="new">
        <compile files="IfPCDAdviceMethods.java"></compile>
        <run class="IfPCDAdviceMethods"></run>
    </ajc-test>
<ajc-test title="initialization order with this" pr="476" num="493" keywords="from-resolved_10x" dir="new">
        <compile files="InitializationOrder.java"></compile>
        <run class="InitializationOrder"></run>
    </ajc-test>
<ajc-test title="!within and !this handling for callee-side call points" pr="496" num="494" keywords="from-resolved_10x" dir="new">
        <compile files="NotThis.java"></compile>
        <run class="NotThis"></run>
    </ajc-test>
<ajc-test title="private inner interfaces and bytecode visibility" pr="494" num="495" keywords="from-resolved_10x" dir="new/innerInterfaces">
        <compile files="p/Driver.java,p/InnerTest.java,other/Test.java"></compile>
        <run class="p.Driver"></run>
    </ajc-test>
<ajc-test title="type name hygiene when code comes from aspects in different packages" num="497" keywords="from-resolved_10x" dir="new">
        <compile files="typeNameConflicts/Driver.java,typeNameConflicts/p1/C.java,typeNameConflicts/aspects/A.java"></compile>
        <run class="typeNameConflicts.Driver"></run>
    </ajc-test>
<ajc-test title="cflowbelow dependencies (from Chris Dutchyn)" num="498" keywords="from-resolved_10x" dir="new">
        <compile files="CflowBelowTest.java"></compile>
        <run class="CflowBelowTest"></run>
    </ajc-test>
<ajc-test title="target type matching with messy interface hierarchies" num="499" keywords="from-resolved_10x" dir="new">
        <compile options="-1.4,-Xlint:ignore" files="CallTypesI.java"></compile>
        <run vm="1.4" class="CallTypesI"></run>
    </ajc-test>
<ajc-test title="PR#458 Compiler was incorrectly flagging error in advice on initialization and static initialization" pr="490" num="500" keywords="from-resolved_10x,knownLimitation" dir="new">
        <compile files="StaticInitCE.java"></compile>
        <run class="StaticInitCE"></run>
    </ajc-test>
<ajc-test title="Compiler incorrectly flagging *1 (non-alphabetic start to signature pattern)" pr="493" num="501" keywords="from-resolved_10x" dir="new">
        <compile files="NonAlphaSignaturePatternCE.java"></compile>
        <run class="NonAlphaSignaturePatternCE"></run>
    </ajc-test>
<ajc-test title="Unable to bind privately-introduced field name from introduced method in the same aspect" num="502" keywords="from-resolved_10x" dir="new">
        <compile files="IntroducedFieldsNotBinding.java"></compile>
        <run class="IntroducedFieldsNotBinding"></run>
    </ajc-test>
<ajc-test title="anonymous inner class with aspect" pr="297" num="503" keywords="from-resolved_10x" dir="new/anonInnerClass">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="Arguments are not being passed in to calls advice" pr="335" num="504" keywords="from-resolved_10x" dir="new">
        <compile files="PR335.java"></compile>
        <run class="PR335"></run>
    </ajc-test>
<ajc-test title="interfaces as mixins with introduction" num="505" keywords="from-resolved_10x" dir="design/intro" abccomment="fails because we don't match I.new(..) correctly. ODM 04/07/04">
        <compile files="Interfaces.java"></compile>
        <run class="Interfaces"></run>
    </ajc-test>
<ajc-test title="ExceptionInInitializerError accessing cflow in aspect initialization - before variants" num="507" keywords="from-resolved_10x" dir="new">
        <compile files="CflowInitInAspectVariantsBefore.java"></compile>
        <run class="CflowInitInAspectVariantsBefore"></run>
    </ajc-test>
<ajc-test title="NoClassDefFoundError accessing cflow in aspect initialization - after variants" num="508" keywords="from-resolved_10x" dir="new">
        <compile files="CflowInitInAspectVariantsAfter.java"></compile>
        <run class="CflowInitInAspectVariantsAfter"></run>
    </ajc-test>
<ajc-test title="InternalCompilerError in JpPlan when args alone" num="509" keywords="from-resolved_10x" dir="new">
        <compile files="ArgsAlone.java"></compile>
        <run class="ArgsAlone"></run>
    </ajc-test>
<ajc-test title="compile error using pcd if() with advice on introduced methods." pr="527" num="510" keywords="from-resolved_10x" dir="new">
        <compile files="PR527.java"></compile>
        <run class="PR527"></run>
    </ajc-test>
<ajc-test title="compile errors boolean using cflow and unimplemented method using around advice on methods introduced by interface" pr="528" num="511" keywords="from-resolved_10x" dir="new">
        <compile files="PR528.java"></compile>
        <run class="PR528"></run>
    </ajc-test>
<ajc-test title="aspect as member of interface" pr="534" num="512" keywords="from-resolved_10x" dir="new">
        <compile files="AspectInInterfaceCP.java"></compile>
        <run class="AspectInInterfaceCP"></run>
    </ajc-test>
<ajc-test title="missing method name to synthetic invocation" pr="535" num="513" keywords="from-resolved_10x,new-messages-vary" dir="new">
        <compile files="PR535.java"></compile>
        <run class="PR535"></run>
    </ajc-test>
<ajc-test title="protected subclass impl of superclass method with default access and variants" pr="536" num="514" keywords="from-resolved_10x" dir="new">
        <compile files="RestrictingVisibilityCP.java"></compile>
        <run class="RestrictingVisibilityCP"></run>
    </ajc-test>
<ajc-test title="Exception planning advice" pr="519" num="515" keywords="from-resolved_10x" dir="new">
        <compile options="-Xlint:ignore" files="PR519.java"></compile>
        <run class="PR519"></run>
    </ajc-test>
<ajc-test title="unreproduced bug with advice - probably UTR" pr="521" num="516" keywords="from-resolved_10x" dir="new">
        <compile files="PR520.java"></compile>
        <run class="PR520"></run>
    </ajc-test>
<ajc-test title="introduced inner interfaces accessible inside aspect" pr="494" num="517" keywords="from-resolved_10x" dir="new">
        <compile files="IntroduceInnerInterfaceCP.java"></compile>
        <run class="IntroduceInnerInterfaceCP"></run>
    </ajc-test>
<ajc-test title="validate (enclosing) join point and source locations" pr="525" num="518" keywords="from-resolved_10x" dir="new">
        <compile options="-Xlint:ignore" files="NegativeSourceLocation.java"></compile>
        <run class="NegativeSourceLocation"></run>
    </ajc-test>
<ajc-test title="advice formals are just like method formals" pr="544" num="519" keywords="from-resolved_10x" dir="new">
        <compile files="AdviceFormalsCp.java"></compile>
        <run class="AdviceFormalsCp"></run>
    </ajc-test>
<ajc-test title="advice formals produce errors just like method formals" pr="544" num="520" keywords="from-resolved_10x" dir="new" abccomment="we give up in each method after finding the first error">
        <compile files="AdviceFormalsCf.java">
            <ajcmessage line="28" kind="error"></ajcmessage>
            <ajcmessage line="29" kind="error"></ajcmessage>
            <ajcmessage line="36" kind="error"></ajcmessage>
            <ajcmessage line="37" kind="error"></ajcmessage>
            <message line="28" kind="error"></message>
            <message line="36" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="advice throws clauses must be compatible with joinpoints they apply to" num="521" keywords="from-resolved_10x" dir="new">
        <compile files="AdviceThrowsCp.java"></compile>
        <run class="AdviceThrowsCp"></run>
    </ajc-test>
<ajc-test title="potential method conflicts with introductions and interfaces and PR#561" pr="570" num="522" keywords="from-resolved_10x" dir="new">
        <compile files="MethodConflictsCP.java"></compile>
        <run class="MethodConflictsCP"></run>
    </ajc-test>
<ajc-test title="illegal method conflicts with introductions and interfaces and PR#561" pr="570" num="523" keywords="from-resolved_10x" dir="new" abccomment="abc gives one error for one mistake, and ajc gives several. ODM 11/08/04">
        <compile files="MethodConflictsCF.java">
            <ajcmessage line="8" kind="error"></ajcmessage>
            <ajcmessage line="20" kind="error"></ajcmessage>
            <ajcmessage line="28" kind="error"></ajcmessage>
            <message line="28" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="access to all members of class and inner class from privileged aspect" pr="35593" num="525" keywords="from-resolved_10x" dir="new/privilegedAspects">
        <compile files="driver/PrivilegedAspect.java,util/Util.java,pack/DefaultTarget.java,pack/PublicTarget.java"></compile>
        <run class="driver.PrivilegedAspect"></run>
    </ajc-test>
<ajc-test title="cflow alone with around produces compiler bcg StackOverflowError" num="526" keywords="from-resolved_10x" dir="new">
        <compile files="CflowAlone.java"></compile>
        <run class="CflowAlone"></run>
    </ajc-test>
<ajc-test title="get/set join points run for complex assignment operators (+=, etc.) (working)" num="527" keywords="from-resolved_10x" dir="new">
        <compile files="AssignOps.java"></compile>
        <run class="AssignOps"></run>
    </ajc-test>
<ajc-test title="this available in introduced field initializers" num="528" keywords="from-resolved_10x" dir="new/introTypeMissing">
        <compile files="ThisInIntroFieldInit.java"></compile>
        <run class="ThisInIntroFieldInit"></run>
    </ajc-test>
<ajc-test title="Introduced type unavailable to cast expressions in introduced methods" num="529" keywords="from-resolved_10x" dir="new/introTypeMissing">
        <compile files="Cast.java,TargetClass.java,Util.java"></compile>
        <run class="Cast"></run>
    </ajc-test>
<ajc-test title="Introduced type unavailable to qualified new expressions in introduced methods" num="530" keywords="from-resolved_10x" dir="new/introTypeMissing">
        <compile files="Inner.java,TargetClass.java,Util.java"></compile>
        <run class="Inner"></run>
    </ajc-test>
<ajc-test title="Introduced type unavailable to cast expressions in introduced field initializers" num="531" keywords="from-resolved_10x" dir="new/introTypeMissing">
        <compile files="CastInFieldInit.java,TargetClass.java,Util.java"></compile>
        <run class="CastInFieldInit"></run>
    </ajc-test>
<ajc-test title="Aspect type unavailable to qualified new expressions in body of introduced methods" num="532" keywords="from-resolved_10x" dir="new/introTypeMissing">
        <compile files="AspectInIntroducedMethod.java"></compile>
        <run class="AspectInIntroducedMethod"></run>
    </ajc-test>
<ajc-test title="Introduced type unavailable to instanceof expressions in introduced methods" num="533" keywords="from-resolved_10x,knownLimitation" dir="new/introTypeMissing" abccomment="ajc seems to think foo instanceof int is OK!">
        <compile files="InstanceOf.java,TargetClass.java,Util.java">
            <ajcmessage line="19" kind="error"></ajcmessage>
            <ajcmessage line="20" kind="error"></ajcmessage>
            <ajcmessage line="21" kind="error"></ajcmessage>
            <ajcmessage line="22" kind="error"></ajcmessage>
            <ajcmessage line="23" kind="error"></ajcmessage>
            <ajcmessage line="24" kind="error"></ajcmessage>
            <ajcmessage line="25" kind="error"></ajcmessage>
            <ajcmessage line="26" kind="error"></ajcmessage>
            <message line="19" kind="error"></message>
            <message line="20" kind="error"></message>
            <message line="21" kind="error"></message>
            <message line="22" kind="error"></message>
            <message line="23" kind="error"></message>
            <message line="24" kind="error"></message>
            <message line="25" kind="error"></message>
            <message line="26" kind="error"></message>
            <message line="29" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Introduced type unavailable to qualified new expressions in introduced field initializers" num="534" keywords="from-resolved_10x" dir="new/introTypeMissing">
        <compile files="InnerInFieldInit.java,TargetClass.java,Util.java"></compile>
        <run class="InnerInFieldInit"></run>
    </ajc-test>
<ajc-test title="variable slots and finally/catch causing verify errors" pr="595" num="535" keywords="from-resolved_10final,from-resolved_10x" dir="new">
        <compile files="AfterFinally.java"></compile>
        <run class="AfterFinally"></run>
    </ajc-test>
<ajc-test title="after advice on static method with pcd if() using result" pr="590" num="537" keywords="from-resolved_10x" dir="new">
        <compile files="PR590.java">
            <message line="20" kind="error"></message>
            <message line="23" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="after advice on static method with pcd if() using result through pointcut" pr="590" num="538" keywords="from-resolved_10x" dir="new">
        <compile options="-Xlint:ignore" files="PR590a.java">
            <message line="29" kind="error"></message>
            <message line="31" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="AbstractMethodError for introduced methods (order 1)" pr="600" num="539" keywords="from-resolved_10x" dir="new/PR600">
        <compile files="Main.java,My_error.java,A.java,B.java,C.java"></compile>
        <run class="Main"></run>
    </ajc-test>
<ajc-test title="AbstractMethodError for introduced methods (order 2)" pr="600" num="540" keywords="from-resolved_10x" dir="new/PR600">
        <compile files="Main.java,My_error.java,C.java,A.java,B.java"></compile>
        <run class="Main"></run>
    </ajc-test>
<ajc-test title="AbstractMethodError for introduced methods (order 3)" pr="600" num="541" keywords="from-resolved_10x" dir="new/PR600">
        <compile files="My_error.java,A.java,B.java,C.java,Main.java"></compile>
        <run class="Main"></run>
    </ajc-test>
<ajc-test title="AbstractMethodError for introduced methods (order 4)" pr="600" num="542" keywords="from-resolved_10x" dir="new/PR600">
        <compile files="A.java,B.java,C.java,Main.java,My_error.java"></compile>
        <run class="Main"></run>
    </ajc-test>
<ajc-test title="AbstractMethodError for introduced methods (order 5)" pr="600" num="543" keywords="from-resolved_10x" dir="new/PR600">
        <compile files="A.java,B.java,Main.java,C.java,My_error.java"></compile>
        <run class="Main"></run>
    </ajc-test>
<ajc-test title="declare error and abstract pointcuts" num="544" keywords="from-resolved_10x" dir="new">
        <compile files="AbstractDeclare.java">
            <message line="3" kind="error"></message>
            <message line="4" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Exercise runtime classes (optionally in 1.1 VM)" num="545" keywords="from-resolved_10x" dir="new/runtime">
        <compile files="AllRuntime.java,TesterDriver.java"></compile>
        <run class="TesterDriver"></run>
    </ajc-test>
<ajc-test title="VerifyError after around advice falls off end of tryCatch" num="546" keywords="from-resolved_10x" dir="new" abccomment="we only generate the warning at the join point, not the advice location.                   This should be fixed when we have multi-position errors.">
        <compile files="TryOffEnd.java">
            <ajcmessage line="13" kind="warning"></ajcmessage>
            <ajcmessage line="21" kind="warning"></ajcmessage>
            <message line="13" kind="warning"></message>
        </compile>
        <run class="TryOffEnd"></run>
    </ajc-test>
<ajc-test title="Named within pointcuts failing" pr="635" num="547" keywords="from-resolved_10x" dir="new">
        <compile files="NamedWithinPointcuts.java"></compile>
        <run class="NamedWithinPointcuts"></run>
    </ajc-test>
<ajc-test title="aspect with private abstract pointcut" pr="647" num="548" keywords="from-resolved_10x,fail-unimplemented" dir="new/subaspects">
        <compile files="PrivatePointcutCE.java">
            <message line="5" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="concrete aspect unable to access abstract package-private pointcut in parent for overriding" pr="647" num="549" keywords="from-resolved_10x" dir="new/subaspects" comment="XXX getting error - confirm line numbers" abccomment="abc bails out early, but ok. ODM 11/08/04">
        <compile files="parent/ParentCE.java,child/ChildCE.java">
            <ajcmessage line="21" kind="error" file="child/ChildCE.java"></ajcmessage>
            <ajcmessage line="31" kind="error" file="child/ChildCE.java"></ajcmessage>
            <ajcmessage line="8" kind="error" file="parent/ParentCE.java"></ajcmessage>
            <ajcmessage line="10" kind="error" file="parent/ParentCE.java"></ajcmessage>
            <ajcmessage line="12" kind="error" file="parent/ParentCE.java"></ajcmessage>
            <ajcmessage line="22" kind="error" file="parent/ParentCE.java"></ajcmessage>
            <message line="22" kind="error" file="parent/ParentCE.java"></message>
            <message line="31" kind="error" file="child/ChildCE.java"></message>
        </compile>
    </ajc-test>
<ajc-test title="inner, outer, and outside-package subaspects of an aspect with abstract protected-, public-, and default-access pointcuts" pr="647" num="550" keywords="from-resolved_10x" dir="new/subaspects">
        <compile files="parent/SubAspectVisibility.java,parent/ForeignChildHelper.java,child/ForeignChildAspect.java"></compile>
        <run class="parent.SubAspectVisibility"></run>
    </ajc-test>
<ajc-test title="inner subaspects of an aspect with private pointcut" pr="647" num="551" keywords="from-resolved_10x" dir="new/subaspects">
        <compile files="parent/PrivatePointcut.java"></compile>
        <run class="parent.PrivatePointcut"></run>
    </ajc-test>
<ajc-test title="outer subaspects of an aspect with private pointcut" pr="647" num="552" keywords="from-resolved_10x" dir="new/subaspects">
        <compile files="parent/PrivatePointcutOuterClass.java"></compile>
        <run class="parent.PrivatePointcutOuterClass"></run>
    </ajc-test>
<ajc-test title="abstract aspect used statically should not cause instantiation of advice or pointcut" pr="647" num="553" keywords="from-resolved_10x" dir="new/subaspects">
        <compile files="AbstractAspectUsedStatically.java"></compile>
        <run class="AbstractAspectUsedStatically"></run>
    </ajc-test>
<ajc-test title="private inner interface accessible in scope when declared on outer class" num="554" keywords="from-resolved_10x" dir="new" abccomment="declare parents on a private interface goes wrong">
        <compile files="DeclareAccess.java"></compile>
        <run class="DeclareAccess"></run>
    </ajc-test>
<ajc-test title="accessing private superclass members from body of method introduction" num="556" keywords="from-resolved_10x" dir="new">
        <compile files="SuperInIntroductionCE.java">
            <message line="25" kind="error"></message>
            <message line="26" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="simple test for around and casting" num="557" keywords="from-resolved_10x" dir="new">
        <compile files="AroundCasting.java"></compile>
        <run class="AroundCasting"></run>
    </ajc-test>
<ajc-test title="aroundInner 1 - around advice inner Thread subclass running proceed but not writing field" pr="620" num="558" keywords="from-resolved_10x" dir="new/aroundinner">
        <compile files="ThreadNoField.java,Common.java"></compile>
        <run class="ThreadNoField"></run>
    </ajc-test>
<ajc-test title="aroundInner 2 - around advice inner Runnable running proceed and writing method-final proxy" pr="620" num="559" keywords="from-resolved_10x" dir="new/aroundinner">
        <compile files="Proxy.java,Common.java"></compile>
        <run class="Proxy"></run>
    </ajc-test>
<ajc-test title="aroundInner 3 - around advice inner class running proceed and writing field" pr="620" num="560" keywords="from-resolved_10x" dir="new/aroundinner">
        <compile files="Minimal.java,Common.java"></compile>
        <run class="Minimal"></run>
    </ajc-test>
<ajc-test title="aroundInner 4 - around advice inner Thread subclass running proceed and writing field" pr="620" num="561" keywords="from-resolved_10x" dir="new/aroundinner">
        <compile files="ThreadSub.java,Common.java"></compile>
        <run class="ThreadSub"></run>
    </ajc-test>
<ajc-test title="aroundInner 5 - around advice inner Runnable (subinterface) running proceed and writing field introduced on subinterface" pr="620" num="562" keywords="from-resolved_10x" dir="new/aroundinner">
        <compile files="RunnableSub.java,Common.java"></compile>
        <run class="RunnableSub"></run>
    </ajc-test>
<ajc-test title="Named local class closing over proceed invocation" pr="636" num="563" keywords="from-resolved_10x" dir="new">
        <compile files="LocalClassClosingOverProceed.java"></compile>
        <run class="LocalClassClosingOverProceed"></run>
    </ajc-test>
<ajc-test title="beautiful recursive computation of factorial with around is now supported" num="564" keywords="from-resolved_10x" dir="new">
        <compile files="CircularAdvice.java"></compile>
        <run class="CircularAdvice"></run>
    </ajc-test>
<ajc-test title="multi-dispatch not used for named pcd references" pr="632" num="565" keywords="from-resolved_10x" dir="new">
        <compile files="MultiDispatchCf.java">
            <message line="54" kind="error"></message>
            <message line="57" kind="error"></message>
            <message line="60" kind="error"></message>
            <message line="71" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="multi-dispatch implemented through around + args" pr="632" num="566" keywords="from-resolved_10x" dir="new">
        <compile files="MultiDispatchCp.java"></compile>
        <run class="MultiDispatchCp"></run>
    </ajc-test>
<ajc-test title="unrecognized aspect should not net Cloneable and Serializable warnings" num="567" keywords="from-resolved_10x" dir="new">
        <compile files="UnrecognizedAspectCE.java">
            <message line="3" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="unreachable code generated by around advice on the execution of void methods" num="568" keywords="from-resolved_10x" dir="new" abccomment="around weaver internal error - Sascha emailed - AGS 1/7/04">
        <compile files="AroundVoid.java"></compile>
        <run class="AroundVoid"></run>
    </ajc-test>
<ajc-test title="Overriding method implementations using introduction on interfaces" pr="654" num="569" keywords="from-resolved_10x,fail-unimplemented" dir="new">
        <compile options="-Xlint:ignore" files="IntroductionsOverriding.java"></compile>
        <run class="IntroductionsOverriding"></run>
    </ajc-test>
<ajc-test title="more coverage for around and concrete methods on interfaces" pr="654" num="570" keywords="from-resolved_10x" dir="new">
        <compile options="-Xlint:ignore" files="MultiAndAround.java"></compile>
        <run class="MultiAndAround"></run>
    </ajc-test>
<ajc-test title="invalid number and type of proceed arguments" num="571" keywords="from-resolved_10x" dir="new">
        <compile files="InvalidProceedArgsCE.java">
            <message line="10" kind="error"></message>
            <message line="15" kind="error"></message>
            <message line="17" kind="error"></message>
            <message line="20" kind="error"></message>
            <message line="22" kind="error"></message>
            <message line="27" kind="error"></message>
            <message line="29" kind="error"></message>
            <message line="31" kind="error"></message>
            <message line="37" kind="error"></message>
            <message line="39" kind="error"></message>
            <message line="43" kind="error"></message>
            <message line="46" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="after returning advice order" pr="694" num="572" keywords="from-resolved_10x" dir="new">
        <compile files="Cricket.java"></compile>
        <run class="Cricket"></run>
    </ajc-test>
<ajc-test title="after returning advice param" pr="694" num="573" keywords="from-resolved_10x" dir="new">
        <compile files="AfterReturningParam.java"></compile>
        <run class="AfterReturningParam"></run>
    </ajc-test>
<ajc-test title="! and declaring types with callee-side call join points" pr="695" num="574" keywords="from-resolved_10x" dir="new">
        <compile options="-Xlint:ignore" files="NotAndDeclaringTypes.java"></compile>
        <run class="NotAndDeclaringTypes"></run>
    </ajc-test>
<ajc-test title=". Binding the wrong arguments in withincode(..)." pr="479" num="575" keywords="from-resolved_10x" dir="new">
        <compile files="BindingArgumentsInWithincode.java"></compile>
        <run class="BindingArgumentsInWithincode"></run>
    </ajc-test>
<ajc-test title=". Matching arguments in cflow correctly." pr="479" num="576" keywords="from-resolved_10x" dir="new">
        <compile files="MatchingArgumentsInCflow.java"></compile>
        <run class="MatchingArgumentsInCflow"></run>
    </ajc-test>
<ajc-test title=". Binding variables with numbers in their name with pertarget(..)'s." pr="480" num="577" keywords="from-resolved_10x" dir="new">
        <compile files="PerTargetAndVariablesWithNumbersInTheirNames.java"></compile>
        <run class="PerTargetAndVariablesWithNumbersInTheirNames"></run>
    </ajc-test>
<ajc-test title="second arg in formal on shared joinpoint with pcd if() causes verify error ??" pr="554" num="578" keywords="from-resolved_10rc3" dir="new">
        <compile files="PR554.java"></compile>
        <run class="PR554"></run>
    </ajc-test>
<ajc-test title="access to private members from privileged aspect" pr="555" num="579" keywords="from-resolved_10rc3" dir="new/privilegedAspects">
        <compile files="driver/PR555.java,util/Util.java,pack/DefaultTarget.java"></compile>
        <run class="driver.PR555"></run>
    </ajc-test>
<ajc-test title="inner classes of privileged aspects cannot see target class private members" pr="555" num="580" keywords="from-resolved_10rc3" dir="new">
        <compile files="InnerClassInPrivilegedAspect.java"></compile>
        <run class="InnerClassInPrivilegedAspect"></run>
    </ajc-test>
<ajc-test title="aspects should get package access outside the file" pr="556" num="581" keywords="from-resolved_10rc3" dir="new/packageAccessPR556">
        <compile files="base1/p/C1.java,base2/p/C2.java"></compile>
        <run class="p.C1"></run>
    </ajc-test>
<ajc-test title="subclass advice not run for join points selected by superclass cflow-based pointcuts" pr="559" num="582" keywords="from-resolved_10rc3" dir="new">
        <compile files="PR559.java"></compile>
        <run class="PR559"></run>
    </ajc-test>
<ajc-test title="more issues with abstract aspects and cflow pointcuts" pr="559" num="583" keywords="from-resolved_10rc3,fail-unimplemented" dir="new">
        <compile files="AbstractCflows.java"></compile>
        <run class="AbstractCflows"></run>
    </ajc-test>
<ajc-test title="compile fails for aspect derived from percflow base aspect unless pointcut excludes base aspect and subaspects" pr="560" num="584" keywords="from-resolved_10rc3" dir="new">
        <compile files="PR560.java"></compile>
        <run class="PR560"></run>
    </ajc-test>
<ajc-test title="cyclic pointcut definitions" pr="568" num="585" keywords="from-resolved_10rc3,knownLimitation" dir="new" abccomment="abc checks for cycles whether pointcuts are used or not. ODM 21/07/04">
        <compile files="CyclicPointcuts.java">
            <ajcmessage line="11" kind="error"></ajcmessage>
            <ajcmessage line="14" kind="error"></ajcmessage>
            <ajcmessage line="18" kind="error"></ajcmessage>
            <ajcmessage line="32" kind="error"></ajcmessage>
            <ajcmessage line="43" kind="error"></ajcmessage>
            <message line="11" kind="error"></message>
            <message line="14" kind="error"></message>
            <message line="15" kind="error"></message>
            <message line="19" kind="error"></message>
            <message line="20" kind="error"></message>
            <message line="29" kind="error"></message>
            <message line="32" kind="error"></message>
            <message line="40" kind="error"></message>
            <message line="43" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="pertarget stack overflow getting name of anonymous (Interface) class" pr="573" num="586" keywords="from-resolved_10rc3" dir="new">
        <compile files="PR573.java"></compile>
        <run class="PR573"></run>
    </ajc-test>
<ajc-test title="pertarget stack overflow getting name of anonymous (Object) class" pr="573" num="587" keywords="from-resolved_10rc3" dir="new">
        <compile files="PR573_1.java"></compile>
        <run class="PR573_1"></run>
    </ajc-test>
<ajc-test title="pertarget runtime stack overflow (getting name of anonymous (Object) class?)" pr="573" num="588" keywords="from-resolved_10rc3" dir="new">
        <compile files="PR573_2.java"></compile>
        <run class="PR573_2"></run>
    </ajc-test>
<ajc-test title="PR584 Can construct inner classes using qualified expressions" num="589" keywords="from-resolved_10rc3,purejava" dir="new">
        <compile files="PR584.java"></compile>
        <run class="PR584"></run>
    </ajc-test>
<ajc-test title="subaspect method declaration on superaspect inner interface (names)" pr="685" num="590" keywords="from-resolved_104" dir="new">
        <compile files="InnerInterfaceNames.java"></compile>
        <run class="InnerInterfaceNames"></run>
    </ajc-test>
<ajc-test title="subaspect method declaration on superaspect inner interface (access)" pr="685" num="591" keywords="from-resolved_104" dir="new">
        <compile files="InnerInterfaceAccess.java"></compile>
        <run class="InnerInterfaceAccess"></run>
    </ajc-test>
<ajc-test title="subaspect method declaration on superaspect inner interface (types)" pr="685" num="592" keywords="from-resolved_104" dir="new">
        <compile files="InnerInterfaceTypes.java,InnerInterfaceTypesHelper.java"></compile>
        <run class="InnerInterfaceTypes"></run>
    </ajc-test>
<ajc-test title="around AST type XXX" pr="691" num="593" keywords="from-resolved_104" dir="new" abccomment="around weaver internal error - Sascha emailed - AGS 1/7/04">
        <compile files="PR691.java"></compile>
        <run class="PR691"></run>
    </ajc-test>
<ajc-test title="around all execution with double assignment in initializer (simple)" pr="687" num="594" keywords="from-resolved_104" dir="new" abccomment="around weaver internal error - Sascha emailed - AGS 1/7/04">
        <compile files="AroundDoubleAssignment.java"></compile>
        <run class="AroundDoubleAssignment"></run>
    </ajc-test>
<ajc-test title="around all execution with double assignment in initializer (coverage)" pr="687" num="595" keywords="from-resolved_104" dir="new" abccomment="around weaver internal error - Sascha emailed - AGS 1/7/04">
        <compile files="AroundDoubleAssignmentC.java"></compile>
        <run class="AroundDoubleAssignmentC"></run>
    </ajc-test>
<ajc-test title="changing this in around's proceed reported by Rich Price" num="596" keywords="from-resolved_104" dir="new">
        <compile options="-1.4" files="AroundChangeThis.java"></compile>
        <run class="AroundChangeThis"></run>
    </ajc-test>
<ajc-test title="default package for aspect introductions is not the current package" pr="548" num="597" keywords="from-resolved_10rc3,from-resolved_104" dir="new">
        <compile files="introductionPackage/two/C.java,introductionPackage/one/C.java,introductionPackage/one/Aspect.java,introductionPackage/one/TestAspect.java"></compile>
        <run class="one.TestAspect"></run>
    </ajc-test>
<ajc-test title="anon class written to wrong directory" pr="569" num="598" keywords="from-resolved_104,from-resolved_104" dir="new/PR569">
        <compile files="a/IntroAnon.java,a/MyInterface.java,b/Dest.java"></compile>
        <run class="a.IntroAnon"></run>
    </ajc-test>
<ajc-test title="unqualified transitive pointcut references not resolved" pr="603" num="599" keywords="from-resolved_104" dir="new">
        <compile files="PointcutQualification.java"></compile>
        <run class="PointcutQualification"></run>
    </ajc-test>
<ajc-test title="unqualified transitive pointcut references not resolved - 2" pr="603" num="600" keywords="from-resolved_104" dir="new">
        <compile files="PointcutQualification2.java"></compile>
        <run class="PointcutQualification2"></run>
    </ajc-test>
<ajc-test title="direct use outside aspect of defined abstract pointcut" pr="619" num="601" keywords="from-resolved_104" dir="new">
        <compile files="AbstractPointcutAccess.java"></compile>
        <run class="AbstractPointcutAccess"></run>
    </ajc-test>
<ajc-test title="direct use outside aspect of undefined abstract pointcut" pr="619" num="602" keywords="from-resolved_104" dir="new">
        <compile files="AbstractPointcutAccessCE.java">
            <message line="9" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="indirect use outside aspect of undefined abstract pointcut" pr="619" num="603" keywords="from-resolved_104" dir="new" abccomment="one error from abc, ok. ODM 20/07/04">
        <compile files="AbstractPointcutIndirectCE.java">
            <ajcmessage line="9" kind="error"></ajcmessage>
            <ajcmessage line="5" kind="error"></ajcmessage>
            <message line="10" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="simple call join point tests for JoinPoint SourceLocation context" pr="658" num="604" keywords="from-resolved_104" dir="new">
        <compile files="SourceLocationCall.java"></compile>
        <run class="SourceLocationCall"></run>
    </ajc-test>
<ajc-test title="!target with second advice on casted call" pr="661" num="605" keywords="from-resolved_104" dir="new">
        <compile files="CallNotTarget.java"></compile>
        <run class="CallNotTarget"></run>
    </ajc-test>
<ajc-test title="name binding in around cflow" pr="666" num="606" keywords="from-resolved_104" dir="new" abccomment="around weaver internal error - Sascha emailed - AGS 1/7/04">
        <compile files="AroundCall.java"></compile>
        <run class="AroundCall"></run>
    </ajc-test>
<ajc-test title="name binding in around cflow - 2" pr="660" num="607" keywords="from-resolved_104" dir="new" abccomment="around weaver internal error - Sascha emailed - AGS 1/7/04">
        <compile files="ArgsInCflow2.java"></compile>
        <run class="ArgsInCflow2"></run>
    </ajc-test>
<ajc-test title="around name-binding in cflows using factorial" pr="677" num="608" keywords="from-resolved_104" dir="new">
        <compile files="FactorialCflow.java"></compile>
        <run class="FactorialCflow"></run>
    </ajc-test>
<ajc-test title="incrementing objects, arrays - 2" pr="715" num="609" keywords="from-resolved_104,purejava" dir="new">
        <compile files="ArrayInc2CE.java">
            <message line="12" kind="error"></message>
            <message line="13" kind="error"></message>
            <message line="14" kind="error"></message>
            <message line="15" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="incrementing objects, arrays CE" pr="715" num="610" keywords="from-resolved_104,purejava,messages-vary" dir="new" abccomment="slightly different errors reported">
        <compile options="!eclipse" files="ArrayIncCE.java">
            <ajcmessage line="15" kind="error"></ajcmessage>
            <ajcmessage line="16" kind="error"></ajcmessage>
            <ajcmessage line="17" kind="error"></ajcmessage>
            <ajcmessage line="18" kind="error"></ajcmessage>
            <ajcmessage line="19" kind="error"></ajcmessage>
            <message line="15" kind="error"></message>
            <message line="16" kind="error"></message>
            <message line="17" kind="error"></message>
            <message line="18" kind="error"></message>
            <message line="19" kind="error"></message>
            <message line="20" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="incrementing objects, arrays - 3" pr="715" num="611" keywords="from-resolved_104,purejava" dir="new">
        <compile files="ArrayInc3CE.java">
            <message line="15" kind="error"></message>
            <message line="16" kind="error"></message>
            <message line="17" kind="error"></message>
            <message line="18" kind="error"></message>
            <message line="19" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="incrementing objects, arrays" pr="715" num="612" keywords="from-resolved_104,purejava" dir="new">
        <compile files="ArrayInc.java"></compile>
        <run class="ArrayInc"></run>
    </ajc-test>
<ajc-test title="replacing this or target in around advice" num="613" keywords="from-resolved_104" dir="new">
        <compile files="TargetObjectReplacement.java"></compile>
        <run class="TargetObjectReplacement"></run>
    </ajc-test>
<ajc-test title="after returning from initialization and after executing constructor" num="61401" keywords="from-resolved_104" dir="abctests/new">
        <compile files="ConstructorExecInit.java"></compile>
        <run class="ConstructorExecInit"></run>
    </ajc-test>
<ajc-test title="after returning from initialization causes ExceptionInInitializer in aspect" num="61501" dir="abctests/new">
        <compile files="ConstructorExecInitFails.java"></compile>
        <run class="ConstructorExecInitFails"></run>
    </ajc-test>
<ajc-test title="name binding in before cflow containing cflowbelow" pr="659" num="616" keywords="from-resolved_104" dir="new">
        <compile options="!eclipse" files="ArgsInCflow.java">
            <ajcmessage line="29" kind="error"></ajcmessage>
            <ajcmessage line="32" kind="error"></ajcmessage>
            <message line="32" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="no circularity errors simply because of inners (1)" pr="737" num="617" keywords="from-resolved_105,purejava" dir="pureJava">
        <compile files="circle/Test1CP.java"></compile>
        <run class="circle.Test1CP"></run>
    </ajc-test>
<ajc-test title="no circularity errors simply because of inners (2)" pr="737" num="618" keywords="from-resolved_105,purejava" dir="pureJava">
        <compile files="circle/Test2CP.java"></compile>
        <run class="circle.Test2CP"></run>
    </ajc-test>
<ajc-test title="should have circular inheritance errors (1)" pr="737" num="619" keywords="from-resolved_105,purejava,messages-vary" dir="pureJava">
      <abckeywords> <nate></nate><laurie></laurie></abckeywords>
        <compile options="!eclipse" files="circle/Test1CF.java">
            <message line="7" kind="error"></message>
            <message line="15" kind="error"></message>
            <message line="17" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="should have circular inheritance errors (2)" pr="737" num="620" keywords="from-resolved_105,purejava,messages-vary" dir="pureJava" abccomment="we only report one error for each inheritance loop">
      <abckeywords> <nate></nate><laurie></laurie></abckeywords>
        <compile options="!eclipse" files="circle/Test2CF.java">
            <ajcmessage line="6" kind="error"></ajcmessage>
            <ajcmessage line="10" kind="error"></ajcmessage>
            <ajcmessage line="15" kind="error"></ajcmessage>
            <message line="15" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="file order in type searching" pr="728" num="621" keywords="from-resolved_105" dir="new/pr728">
        <compile files="AnotherClass.java,Interface.java"></compile>
        <run class="AnotherClass"></run>
    </ajc-test>
<ajc-test title="interface using preceding subinterface in its definition" pr="728" num="622" keywords="from-resolved_105,purejava" dir="pureJava" abccomment="in abc get IncompatibleClassChangeError. Example sent                   to Jennifer.  July 6/04 LJH">
        <abckeywords> <jennifer></jennifer> <laurie></laurie> </abckeywords>
        <compile files="ParentUsingChild.java"></compile>
        <run class="ParentUsingChild"></run>
    </ajc-test>
<ajc-test title="Parent interface using public inner interface of child in same file" pr="645" num="623" keywords="from-resolved_105,purejava" dir="new" abccomment="in abc get IncompatibleClassChangeError. Example sent                   to Jennifer.  July 6/04 LJH">
        <abckeywords> <jennifer></jennifer> <laurie></laurie> </abckeywords>
        <compile files="ParentInterfaceUsingChildInnerInterface.java"></compile>
        <run class="ParentInterfaceUsingChildInnerInterface"></run>
    </ajc-test>
<ajc-test title="a type is not allowed to extend or implement its own innner type" num="624" keywords="from-resolved_105,purejava" dir="errors" abccomment="jlc does not catch error, reported to Nate July 6/04 LJH">
        <abckeywords> <nate></nate> <laurie></laurie> </abckeywords>
        <compile files="NestedInterfaceTest.java">
            <message line="1" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="try requires block JLS 14.19" num="625" keywords="from-resolved_105,purejava,messages-vary" dir="pureJava" abccomment="abc parser throws extra error. PA/AGS">
        <compile options="!eclipse" files="TryBlockRequiredCE.java">
            <ajcmessage line="6" kind="error"></ajcmessage>
	    <message kind="error"></message>
            <message line="6" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="loop expressions not declarations" pr="722" num="626" keywords="from-resolved_105,purejava,messages-vary" dir="pureJava" abccomment="really has three errors.  July 3.04 LJH">
        <compile options="!eclipse" files="DeclarationsInLoopsCE.java">
            <ajcmessage line="7" kind="error"></ajcmessage>
            <message line="7" kind="error"></message>
            <message line="8" kind="error"></message>
            <message line="9" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="local variables must be final to be accessed from inner class" pr="739" num="628" keywords="from-resolved_105,purejava" dir="pureJava" abccomment="ajc finds spurious errors about not being able to                      resolve anonymous classes.   Found another bug                    about not finding a uninit var and reported both                    to Nate July 6/04 LJH">
      <abckeywords> <laurie></laurie> <nate></nate> </abckeywords>
        <compile files="LocalsFromInnerCE.java">
            <message line="6" kind="error"></message>
            <message line="13" kind="error"></message>
            <message line="19" kind="error"></message>
            <message line="25" kind="error"></message>
            <message line="32" kind="error"></message>
            <message line="40" kind="error"></message>
            <message line="51" kind="error"></message>
            <message line="61" kind="error"></message>
            <message line="67" kind="error"></message>
            <message line="75" kind="error"></message>
            <message line="81" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="final local variables may be accessed from inner class" pr="739" num="629" keywords="from-resolved_105,purejava" dir="pureJava">
        <compile files="LocalsFromInnerCP.java"></compile>
        <run class="LocalsFromInnerCP"></run>
    </ajc-test>
<ajc-test title="missing package identifier" pr="723" num="630" keywords="from-resolved_105,purejava" dir="pureJava">
        <compile files="MissingPackageCE.java">
            <message line="2" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="interface declaration not permitted in local method scope" pr="721" num="631" keywords="from-resolved_105" dir="pureJava" abccomment="jlc doesn't find illegal nested interfaces">
      <abckeywords> <laurie></laurie> <nate></nate> </abckeywords>
        <compile files="LocalInterfaceCE.java">
            <message line="5" kind="error"></message>
            <message line="8" kind="error"></message>
            <message line="11" kind="error"></message>
            <message line="15" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="simple declare warning (NPE)" num="632" keywords="from-resolved_105" dir="new" abccomment="we move the warning to a different line">
        <compile files="DeclareWarningMain.java">
            <ajcmessage line="5" kind="warning"></ajcmessage>
            <message line="4" kind="warning"></message>
        </compile>
        <run class="DeclareWarningMain"></run>
    </ajc-test>
<ajc-test title="CE for ambiguous type reference (two files in package)" pr="701" num="634" keywords="from-resolved_105,purejava" dir="new" abccomment="jlc doesn't find error when two classes in same package                   have same name.  Reported to Nate July 6/04. LJH                   Still not fixed as of August 26/04,  Nate says it will                   take a while for it.">
     <abckeywords> <nate></nate> <laurie></laurie> </abckeywords>
        <compile files="ambiguousClass/AmbiguousReferent.java,ambiguousClass/AmbiguousClassReference.java">
            <message line="5" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="initializer can throw so long as all constructors declare so" num="635" keywords="from-resolved_105,purejava" dir="new">
        <compile files="InitializerWithThrow.java"></compile>
        <run class="InitializerWithThrow"></run>
    </ajc-test>
<ajc-test title="interfaces may not contain initializers (bug found by jacks)" num="636" keywords="from-resolved_105,purejava" dir="pureJava" abccomment="syntax errors, abc gives up after the first one, but                   when the first is commented out, it finds the second                   one.  I think this test case is fine.  July 6/04 LJH">
        <compile files="InterfaceMembersCf.java">
            <ajcmessage line="2" kind="error"></ajcmessage>
            <ajcmessage line="3" kind="error"></ajcmessage>
            <message line="2" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="ajc dies on cflow into field init anon class see knownbugs.txt" pr="755" num="637" keywords="from-resolved_105" dir="new">
        <compile options="!eclipse" files="CflowOfFieldInitAnonMethods.java">
        </compile>
        <run options="!eclipse" class="CflowOfFieldInitAnonMethods"></run>
    </ajc-test>
<ajc-test title="initializers must be able to complete normally (found by jacks)" num="638" keywords="from-resolved_105,purejava,messages-vary" dir="pureJava" abccomment="errors of abnormal exit from init and clinit not                   found by jlc.  Example sent to Nate July 6/04 LJH">
      <abckeywords> <nate></nate> <laurie></laurie> </abckeywords>
        <compile options="!eclipse" files="InitializerFlowCf.java">
            <message line="2" kind="error"></message>
            <message line="4" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Incrementing interface-introduced field" pr="757" num="639" keywords="from-resolved_105" dir="new">
        <compile files="IntroducedFieldInc.java"></compile>
        <run class="IntroducedFieldInc"></run>
    </ajc-test>
<ajc-test title="more tests of super alone" num="640" keywords="from-resolved_105,purejava" dir="pureJava">
        <compile files="SuperIsWeird.java">
            <message line="9" kind="error"></message>
            <message line="13" kind="error"></message>
            <message line="20" kind="error"></message>
            <message line="21" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="The dynamic type, not the static one, should be used in if pcds" num="641" keywords="from-resolved_105" dir="new">
        <compile files="StaticTypeInIf.java"></compile>
        <run class="StaticTypeInIf"></run>
    </ajc-test>
<ajc-test title="bad interaction with after returning, around and void methods (from Rich Price)" num="642" keywords="from-resolved_105" dir="new" abccomment="around weaver internal error - Sascha emailed - AGS 1/7/04">
        <compile files="AfterReturningResult.java"></compile>
        <run class="AfterReturningResult"></run>
    </ajc-test>
<ajc-test title="static initializer member name" pr="771" num="644" keywords="from-resolved_105" dir="new">
        <compile files="StaticInitName.java"></compile>
        <run class="StaticInitName"></run>
    </ajc-test>
<ajc-test title="cflow pcd syntax error" pr="770" num="645" keywords="from-resolved_105" dir="new">
        <compile files="IllegalCflowCE.java">
            <message line="4" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="binding args with indeterminate prefix and suffix" pr="764" num="646" keywords="from-resolved_105" dir="new">
        <compile files="IndeterminateArgs.java"></compile>
        <run class="IndeterminateArgs"></run>
    </ajc-test>
<ajc-test title="flag errors when binding args with indeterminate prefix and suffix" pr="764" num="647" keywords="from-resolved_105,knownLimitation" dir="new" abccomment="ajc reports errors in named pointcuts at use; we report                   the error at the point of declaration. ODM 13/08/04">
        <compile files="IndeterminateArgsCE.java">
            <ajcmessage line="67" kind="error"></ajcmessage>
            <ajcmessage line="68" kind="error"></ajcmessage>
            <ajcmessage line="70" kind="error"></ajcmessage>
            <ajcmessage line="72" kind="error"></ajcmessage>
            <message line="65" kind="error"></message>
            <message line="66" kind="error"></message>
            <message line="67" kind="error"></message>
            <message line="68" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="check arg types with indeterminate prefix and suffix" pr="764" num="648" keywords="from-resolved_105" dir="new">
        <compile files="IndeterminateArgType.java"></compile>
        <run class="IndeterminateArgType"></run>
    </ajc-test>
<ajc-test title="testing and binding args with single indeterminate prefix and suffix" pr="764" num="649" keywords="from-resolved_105" dir="new">
        <compile files="IndeterminateArg.java"></compile>
        <run class="IndeterminateArg"></run>
    </ajc-test>
<ajc-test title="binding handler args with indeterminate prefix and suffix" pr="764" num="650" keywords="from-resolved_105" dir="new">
        <compile files="IndeterminateHandlerArg.java"></compile>
        <run class="IndeterminateHandlerArg"></run>
    </ajc-test>
<ajc-test title="Locals inside other locals, ordering of processing [eh]" num="651" keywords="from-resolved_105" dir="pureJava" abccomment="Verify error in abc and j2j (when --app used).                   Reported to Jennifer, July 1/04 LJH, Fixed July 2/04">
        <compile files="LocalInners2.java"></compile>
        <run class="LocalInners2"></run>
    </ajc-test>
<ajc-test title="subclass access to enclosing super class private members" pr="752" num="652" keywords="from-resolved_105,purejava,fail-unimplemented" dir="pureJava">
        <compile files="SubclassAccessToEnclosingSuperClassPrivate.java"></compile>
        <run class="SubclassAccessToEnclosingSuperClassPrivate"></run>
    </ajc-test>
<ajc-test title="Compiling java.lang.Object with ajc yields non-verifying bytecode" pr="762" num="653" keywords="from-resolved_105" dir="new/nolang" comment="XXX weak/bad test">
	    <compile files="java/lang/Object.java,java/lang/String.java">
	    </compile>
	</ajc-test>
<ajc-test title="method-local class defined in around return statement" num="654" keywords="from-resolved_105" dir="new">
        <compile files="MethodLocalAroundReturns.java"></compile>
        <run class="MethodLocalAroundReturns"></run>
    </ajc-test>
<ajc-test title="CE expected for assignment to arg in if pcd" num="655" keywords="from-resolved_105" dir="new">
        <compile files="IfPCDAssignmentCE.java">
            <message line="16" kind="error"></message>
            <message line="20" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="advising field get/sets when accessing via super" num="656" keywords="from-resolved_105" dir="new">
        <compile files="SuperField.java"></compile>
        <run class="SuperField"></run>
    </ajc-test>
<ajc-test title="accessing private members in outer types" num="657" keywords="from-resolved_105" dir="new">
        <compile files="FieldInnerAccess.java"></compile>
        <run class="FieldInnerAccess"></run>
    </ajc-test>
<ajc-test title="various tests of switch bounds" num="658" keywords="from-resolved_106,purejava" dir="pureJava">
        <compile files="SwitchBounds.java"></compile>
        <run class="SwitchBounds"></run>
    </ajc-test>
<ajc-test title="declare interface extends class" pr="853" num="660" dir="new">
        <compile files="DeclareInterfaceExtendsClass.java">
           <message line="10" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="declare interface implements class" pr="853" num="661" dir="new">
        <compile files="DeclareInterfaceImplementsClass.java">
           <message line="10" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="assert flow" num="662" keywords="from-14tests,purejava" dir="pureJava" abccomment="assert b=false  should not definitely assign to b,         so jlc does not give a later var not assigned error.  Reported         to Polyglot bugzilla July 7/04 LJH">
        <compile options="-source,1.4" files="AssertsCF.java">
            <ajcmessage line="8" kind="error"></ajcmessage>
            <ajcmessage line="11" kind="error"></ajcmessage>
            <message line="8" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="assert flow - 2" num="663" keywords="from-14tests,purejava" dir="pureJava">
        <compile options="-source,1.4" files="AssertsCF2.java">
            <message line="6" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="assert typing" num="664" keywords="from-14tests,purejava,fail-publicType" dir="pureJava">
        <compile options="-source,1.4" files="AssertsCF1.java">
            <message line="5" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="asserts" num="665" keywords="from-14tests" dir="pureJava">
        <compile options="-source,1.4" files="Asserts.java"></compile>
        <run vm="1.4" class="Asserts"></run>
    </ajc-test>
<ajc-test title="assert coverage tests [requires 1.4]" num="666" keywords="from-14tests,purejava" dir="pureJava" abccomment="seems to be broken in j2j, sent to Jennifer July 7/04 LJH">
        <abckeywords> <jennifer></jennifer> <laurie></laurie> </abckeywords>
        <compile options="-source,1.4" files="AssertsCv.java"></compile>
        <run vm="1.4" class="AssertsCv"></run>
    </ajc-test>
<ajc-test title="assert coverage tests in one package [requires 1.4]" num="667" keywords="from-14tests,purejava,fail-unimplemented" dir="pureJava" abccomment="seems to be broken in j2j, sent to Jennifer July 7/04 LJH">
        <abckeywords> <jennifer></jennifer> <laurie></laurie> </abckeywords>
        <compile options="-source,1.4" files="AssertInOnePackage.java"></compile>
        <run vm="1.4" class="AssertInOnePackage"></run>
    </ajc-test>
<ajc-test title="assert tests in introduction [requires 1.4]" num="668" keywords="from-14tests,fail-unimplemented" dir="new">
        <compile options="-source,1.4" files="AssertInIntro.java"></compile>
        <run vm="1.4" class="AssertInIntro"></run>
    </ajc-test>
<ajc-test title="various forms of package name pattern matching work" num="672" keywords="from-broken14usejavac" dir="base/test131">
        <compile files="Driver.java,p1/C1.java,p1/p2/C2.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="import of a class in the default package" pr="134" num="673" keywords="from-broken14usejavac,purejava" dir="new" abccomment="we get an extra (spurious, but not terrible) error">
        <compile files="ImportFromUnnamed.java,DeclaredExcs.java">
          <ajcmessage line="2" kind="error"></ajcmessage>
          <message line="3" kind="error"></message>
          <message line="12" kind="error"></message>
        </compile>
        <ajcrun class="ImportFromUnnamed"></ajcrun>
    </ajc-test>
<ajc-test title="assert statement in advice coverage [requires 1.4]" pr="657" num="682" keywords="from-14tests,fail-in-eclipse" dir="new">
        <compile options="-source,1.4" files="AssertInAdvice.java"></compile>
        <run vm="1.4" class="AssertInAdvice"></run>
    </ajc-test>
<ajc-test title="assert statement in advice  [requires 1.4]" pr="657" num="683" keywords="from-14tests,fail-in-eclipse" dir="new">
        <compile options="-source,1.4" files="AssertInAdviceBug.java"></compile>
        <run vm="1.4" class="AssertInAdviceBug"></run>
    </ajc-test>
<ajc-test title="declaring a private method on an inner interface" pr="823" num="684" keywords="tofix" dir="new">
        <compile files="PrivateMethodOnInnerInterface.java"></compile>
        <run class="PrivateMethodOnInnerInterface"></run>
    </ajc-test>
<ajc-test title="CE expected when declaring fields on arrays" pr="829" num="685" keywords="tofix" dir="new">
        <compile files="ArrayFieldDeclarationCE.java">
            <message line="14" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="non-constant static final fields marked as final in .class" pr="866" num="686" dir="pureJava">
        <compile files="FinalStaticField.java"></compile>
        <run class="FinalStaticField"></run>
    </ajc-test>
<ajc-test title="signature of handler join point" pr="883" num="687" dir="new">
        <compile files="HandlerSignature.java"></compile>
        <run class="HandlerSignature"></run>
    </ajc-test>
<ajc-test title="source locations within expressions" pr="885" num="688" dir="new">
        <compile files="SourceLocationWithinExpr.java"></compile>
        <run class="SourceLocationWithinExpr"></run>
    </ajc-test>
<ajc-test title="source locations within expressions (hard case of constructor start)" pr="885" num="68901" keywords="knownLimitation" dir="abctests/new" comment="this behaves differently in 1.3 from 1.4 for unknown reasons, merge with above when resolved" abccomment="cloned from 689 and source file changed slightly">
        <compile files="SourceLocationWithinExprHard.java"></compile>
        <run class="SourceLocationWithinExprHard"></run>
    </ajc-test>
<ajc-test title="crashes given method in declared method" pr="888" num="690" dir="new">
        <compile files="DeclareMethodCE.java">
          <message line="8" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="after returning advice on interface constructor" pr="889" num="691" dir="new">
        <compile files="AfterReturningInterfaceConstructor.java"></compile>
        <run class="AfterReturningInterfaceConstructor"></run>
    </ajc-test>
<ajc-test title="after returning advice on interface constructor - error" pr="889" num="692" dir="new" abccomment="abc gives two errors, but ok. ODM 13/08/04">
        <compile files="AfterReturningInterfaceConstructorCE.java">
        	<ajcmessage line="26" kind="error"></ajcmessage>
        	<ajcmessage line="30" kind="warning"></ajcmessage>
                <message line="26" kind="error"></message>
                <message line="26" kind="error"></message>
                <message line="30" kind="warning"></message>
        </compile>
    </ajc-test>
<ajc-test title="after advice on static call join point" pr="900" num="693" dir="bugs">
        <compile files="AfterStaticCall.java"></compile>
        <run class="AfterStaticCall"></run>
    </ajc-test>
<ajc-test title="incompatible class change error" pr="901" num="694" dir="bugs" comment="XXX Jim and Erik found/fixed this - need basis">
        <compile files="IncompatibleClassChangeErrorBug.java"></compile>
        <run class="IncompatibleClassChangeErrorBug"></run>
    </ajc-test>
<ajc-test title="simple cflow of method execution" pr="903" num="695" dir="bugs">
        <compile files="ExecutionCflow.java"></compile>
        <run class="ExecutionCflow"></run>
    </ajc-test>
<ajc-test title="using instance as class reference to constant field" pr="909" num="696" dir="bugs" comment="XXX need to verify run" abccomment="LJH - the Soot -O option breaks on this one,  with                    creating code with a bad stack height.  Comments in                    the benchmark indicate that is it intended to cause                    an error like this. LJH  July 10/04">
        <compile files="InstanceAsClassRefToConstant.java"></compile>
    </ajc-test>
<ajc-test title="options -warn:deprecation not enabled" num="698" dir="options/deprecated">
        <compile options="!eclipse" files="WarnDeprecated.java,OldStuff.java">
        </compile>
    </ajc-test>
<ajc-test title="options declare field on bad type" num="700" dir="options">
        <compile options="!eclipse" files="XLintTypeDeclareField.java">
            <message line="10" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="options declare method on bad type" num="701" dir="options">
        <compile options="!eclipse" files="XLintTypeDeclareMethod.java">
            <message line="10" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="source for options -injars" num="709" dir="options/injars/simple">
        <compile files="Simple.java,Main.java"></compile>
        <run class="Main"></run>
    </ajc-test>
<ajc-test title="options -injars" num="710" dir="options/injars/simple">
        <compile options="!eclipse" files="Simple.java,main.jar"></compile>
        <run class="Main"></run>
    </ajc-test>
<ajc-test title="interface self-reference in anonymous instance" pr="774" num="712" dir="new">
        <compile files="AnonymousSelfReference.java"></compile>
        <run class="AnonymousSelfReference"></run>
    </ajc-test>
<ajc-test title="self-reference from (aspect-declared) method-local class" pr="776" num="713" dir="new">
        <compile files="MethodSelfReference.java"></compile>
        <run class="MethodSelfReference"></run>
    </ajc-test>
<ajc-test title="expect CE for unterminated declare error" num="714" dir="new" abccomment="the ajc error is much nicer than the abc one">
        <compile files="UnterminatedDeclareErrorCE.java">
            <ajcmessage line="4" kind="error"></ajcmessage>
            <message line="5" kind="error"></message>
            <message line="7" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="expect CE for declaration collision between subaspects instead of domination order" num="715" dir="new">
        <compile files="DeclarationCollisionCE.java">
            <ajcmessage line="10" kind="error"></ajcmessage>
            <ajcmessage line="20" kind="error"></ajcmessage>
            <ajcmessage line="27" kind="error"></ajcmessage>
	    <message line="20" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="subtype pattern in dominates should pick out aspect subtypes" num="716" dir="new">
        <compile files="DominatesTypePattern.java"></compile>
        <run class="DominatesTypePattern"></run>
    </ajc-test>
<ajc-test title="subtype pattern in dominates will conflict with type pattern" num="717" dir="new">
        <compile files="DominatesTypePatternCE.java">
        	<message line="15" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="after returning advice on interface and implementation constructor - fixed" pr="827" num="71801" keywords="tofix" dir="abctests/new" abccomment="Cloned from 718. PA">
        <compile files="AfterReturningConstructor.java"></compile>
        <run class="AfterReturningConstructor"></run>
    </ajc-test>
<ajc-test title="after throwing advice with non-throwable formal" pr="832" num="719" dir="new">
        <compile files="AfterThrowingNonThrowable.java">
            <message line="41" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="declare array field using postfix" pr="829" num="720" keywords="tofix" dir="new">
        <compile files="ArrayFieldDeclaration.java">
            <message line="17" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="prohibit declaring new aspect constructor with arguments" pr="851" num="721" dir="new">
        <compile files="DeclareAspectConstructorCE.java">
          <message line="10" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="prohibit declaring only aspect constructor with arguments" pr="851" num="722" dir="new">
        <compile files="DeclareOnlyAspectConstructorCE.java">
          <message line="10" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="declare class extends interface" pr="853" num="723" dir="new" abccomment="we should accept extends instead of implements">
        <compile files="DeclareClassExtendsInterface.java">
        </compile>
    </ajc-test>
<ajc-test title="declare interface implements interface" pr="853" num="725" dir="new" abccomment="we already accept implements instead of extends here">
        <compile files="DeclareInterfaceImplementsInterface.java">
        </compile>
    </ajc-test>
<ajc-test title="if and cflow arg binding" num="726" dir="new">
        <compile files="CflowBinding.java">
          <message line="13" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="circularity in declare dominates" pr="902" num="727" dir="bugs">
        <compile files="CircularDominates.java">
		  <message line="18" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="percflow code hangs compiler" pr="28702" num="728" dir="bugs">
        <compile files="CloseConnectionsCflow.java">
        </compile>
    </ajc-test>
<ajc-test title="assert and pertarget crashes compiler" pr="28703" num="729" dir="bugs">
        <compile options="-source,1.4" files="EnsureOverriding.java"></compile>
        <run vm="1.4" class="EnsureOverriding"></run>
    </ajc-test>
<ajc-test title="Verification error tracing constructor that takes arguments" pr="28852" num="730" dir="bugs">
        <compile files="ConstructorArgTracing.java"></compile>
        <run class="ConstructorArgTracing"></run>
    </ajc-test>
<ajc-test title="declared exceptions in inter-type decls" pr="29106" num="731" dir="bugs">
        <compile files="ExceptionsOnInters.java"></compile>
        <run class="ExceptionsOnInters"></run>
    </ajc-test>
<ajc-test title="inter-type fields with array types" pr="29113" num="733" dir="bugs">
        <compile files="InterFieldArrays.java"></compile>
        <run class="InterFieldArrays"></run>
    </ajc-test>
<ajc-test title="checking around join point for advice return type - numeric" pr="838" num="735" dir="new" abccomment="we just report the error in one place">
        <compile files="AroundNumericCastCE.java">
            <ajcmessage line="12" kind="error"></ajcmessage>
            <ajcmessage line="17" kind="error"></ajcmessage>
            <message line="11" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="void around advice without proceed" pr="836" num="736" dir="new" abccomment="we just report the error in one place">
        <compile files="VoidAround.java">
            <message line="11" kind="error"></message>
            <ajcmessage line="11" kind="error"></ajcmessage>
            <ajcmessage line="29" kind="error"></ajcmessage>
        </compile>
    </ajc-test>
<ajc-test title="declaring method on superclass and subclass" pr="852" num="737" dir="new/PR852">
        <compile files="aspectPack/Aspect.java,target/SubClass.java,target/SuperClass.java">
          <dir-changes added="target.SubClass,target.SuperClass"></dir-changes>
        </compile>
        <run class="aspectPack.Aspect"></run>
    </ajc-test>
<ajc-test title="privileged access to code outside the control of the compiler" pr="906" num="739" dir="bugs">
        <compile options="-Xlint:warning" files="PrivilegeBeyondScope.java">
		  <ajcmessage line="23" kind="warning"></ajcmessage>
		  <message line="23" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="introducing final fields (simple)" pr="28974" num="741" dir="new/finalfield">
        <compile files="Introducer.java,Receiver.java,User1.java"></compile>
        <run class="User1"></run>
    </ajc-test>
<ajc-test title="introducing final fields and using as constants" pr="28974" num="742" dir="new/finalfield">
        <compile files="Introducer.java,Receiver.java,User2.java"></compile>
        <run class="User2"></run>
    </ajc-test>
<ajc-test title="introducing final fields and checking errors" pr="28974" num="743" dir="new/finalfield">
        <compile files="Introducer.java,Receiver.java,UserCf.java">
            <message line="6" kind="error"></message>        
        </compile>
    </ajc-test>
<ajc-test title="Static inner aspects cannot reference user defined pointcuts 1" pr="29691" num="744" dir="bugs">
        <compile files="PcdLookup.java"></compile>
        <run class="PcdLookup"></run>
    </ajc-test>
<ajc-test title="Static inner aspects cannot reference user defined pointcuts 2" pr="29691" num="745" dir="bugs">
        <compile files="SoftWithin.java"></compile>
        <run class="SoftWithin"></run>
    </ajc-test>
<ajc-test title="Declare precedence should not allow multiple * patterns" pr="29689" num="746" dir="bugs">
        <compile files="CircularPrecedence.java">
            <message line="14" kind="error"></message> 
        </compile>
    </ajc-test>
<ajc-test title="VerifyError on accessing objects not accessible to the weaver" pr="29662" num="747" dir="bugs">
        <compile files="AroundAccess.java">
        </compile>
        <run class="AroundAccess"></run>
    </ajc-test>
<ajc-test title="aspect static initializers should run before instance constructed" pr="804" num="748" keywords="tofix" dir="new">
        <compile files="AspectStaticInit.java"></compile>
        <run class="AspectStaticInit"></run>
    </ajc-test>
<ajc-test title="super call in intertype method declaration body causes VerifyError" pr="29959" num="749" dir="bugs">
        <compile files="SuperToIntro.java"></compile>
        <run class="SuperToIntro"></run>
    </ajc-test>
<ajc-test title="Error with certain combination of advice" pr="30168" num="750" dir="bugs/crashes">
        <compile files="test/Test3.java"></compile>
        <run class="test.Test3"></run>
    </ajc-test>
<ajc-test title="Pointcut adviceexecution() does not work" pr="31423" num="751" dir="bugs">
        <compile files="AdviceExec.java"></compile>
        <run class="AdviceExec"></run>
    </ajc-test>
<ajc-test title="Negation of if pointcut does not work" pr="33635" num="753" dir="bugs">
        <compile files="NotIf.java"></compile>
        <run class="NotIf"></run>
    </ajc-test>
<ajc-test title="ajc reports error when encountering static declaration of nested classes" pr="32463" num="754" dir="bugs">
        <compile files="WeaveLocal.java"></compile>
        <run class="WeaveLocal"></run>
    </ajc-test>
<ajc-test title="can't use pointcuts defined in inner aspects " pr="32428" num="755" dir="bugs">
        <compile files="InnerPointcut.java"></compile>
        <run class="InnerPointcut"></run>
    </ajc-test>
<ajc-test title="can't resolve nested public interfaces (also PR#32399)" pr="32421" num="756" dir="bugs/interfaceNames">
        <compile files="TransactionTest.java,sub/ExecutionMonitor.java,sub/ObserverProtocol.aj"></compile>
        <run class="TransactionTest"></run>
    </ajc-test>
<ajc-test title="thisJoinPoint.getArgs() causes IncompatibleClassChangeError" pr="34210" num="757" dir="bugs">
        <compile files="ThisJoinPointAndVerifier.java"></compile>
        <run class="ThisJoinPointAndVerifier"></run>
    </ajc-test>
<ajc-test title="inter-type declaration of void field" num="758" keywords="error" dir="errors">
        <compile files="VoidFieldDeclarationCE.java">
			<message line="7" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="no such constructor for proceed argument (error)" num="759" dir="binding">
        <compile files="UnfoundConstructor.java">
        	<message line="25" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="omnibus declare warning context with no initializer/constructor" pr="31724" num="760" dir="new/declare">
        <compile files="DeclareWarningEmpty.java">
            <message text="2 - initialization(DeclareWarningEmpty)" line="3" kind="warning"></message>
            <message text="1 - staticinitialization(DeclareWarningEmpty)" line="3" kind="warning"></message>
        </compile>
    </ajc-test>
<ajc-test title="omnibus declare warning context" pr="31724" num="761" dir="new/declare" abccomment="different positions for execution-type joinpoints">
        <compile files="DeclareWarning.java">
            <ajcmessage text="staticinitialization(DeclareWarning)" line="5" kind="warning"></ajcmessage>
            <ajcmessage text="call(DeclareWarning.new())" line="12" kind="warning"></ajcmessage>
            <ajcmessage text="get staticInt" line="13" kind="warning"></ajcmessage>
            <ajcmessage text="get instanceInt" line="14" kind="warning"></ajcmessage>
            <ajcmessage text="set staticInt" line="15" kind="warning"></ajcmessage>
            <ajcmessage text="set instanceInt" line="16" kind="warning"></ajcmessage>
            <ajcmessage text="call(void run())" line="17" kind="warning"></ajcmessage>
            <ajcmessage text="call(void irun())" line="18" kind="warning"></ajcmessage>
            <ajcmessage text="execution(void run())" line="21" kind="warning"></ajcmessage>
            <ajcmessage text="execution(void irun())" line="22" kind="warning"></ajcmessage>
            <ajcmessage text="execution(DeclareWarning.new())" line="23" kind="warning"></ajcmessage>
            <ajcmessage text="initialization(DeclareWarning)" line="23" kind="warning"></ajcmessage>
            <ajcmessage text="handler(OutOfMemoryError) &amp;&amp; within(DeclareWarning)" line="33" kind="warning"></ajcmessage>
            <ajcmessage text="handler(Error)" line="36" kind="warning"></ajcmessage>
            <ajcmessage text="handler(RuntimeException) &amp;&amp; withincode(DeclareWarning.new())" line="39" kind="warning"></ajcmessage>
            <ajcmessage text="adviceExecution() &amp;&amp; within(A)" line="74" kind="warning"></ajcmessage>
            <message text="staticinitialization(DeclareWarning)" line="3" kind="warning"></message>
            <message text="call(DeclareWarning.new())" line="12" kind="warning"></message>
            <message text="get staticInt" line="13" kind="warning"></message>
            <message text="get instanceInt" line="14" kind="warning"></message>
            <message text="set staticInt" line="15" kind="warning"></message>
            <message text="set instanceInt" line="16" kind="warning"></message>
            <message text="call(void run())" line="17" kind="warning"></message>
            <message text="call(void irun())" line="18" kind="warning"></message>
            <message text="execution(void run())" line="21" kind="warning"></message>
            <message text="execution(void irun())" line="22" kind="warning"></message>
            <message text="execution(DeclareWarning.new())" line="23" kind="warning"></message>
            <message text="initialization(DeclareWarning)" line="23" kind="warning"></message>
            <message text="handler(OutOfMemoryError) &amp;&amp; within(DeclareWarning)" line="33" kind="warning"></message>
            <message text="handler(Error)" line="36" kind="warning"></message>
            <message text="handler(RuntimeException) &amp;&amp; withincode(DeclareWarning.new())" line="39" kind="warning"></message>
            <message text="adviceExecution() &amp;&amp; within(A)" line="72" kind="warning"></message>
        </compile>
    </ajc-test>
<ajc-test title="can't apply around advice to the execution of around advice" pr="29934" num="762" keywords="from-resolved_10x" dir="new">
        <compile files="CflowCycles.java"></compile>
        <run class="CflowCycles"></run>
    </ajc-test>
<ajc-test title="incompatible advice throws clause are a compile-time error" num="763" keywords="from-resolved_10x" dir="new" abccomment="we don't report the advice positions too">
        <compile files="AdviceThrowsCf.java">
            <ajcmessage line="13" kind="error"></ajcmessage>
            <ajcmessage line="28" kind="error"></ajcmessage>
            <ajcmessage line="47" kind="error"></ajcmessage>
            <ajcmessage line="48" kind="error"></ajcmessage>
            <ajcmessage line="50" kind="error"></ajcmessage>
            
            <ajcmessage line="70" kind="error"></ajcmessage>
            <ajcmessage line="74" kind="error"></ajcmessage>
            <ajcmessage line="76" kind="error"></ajcmessage>
            <ajcmessage line="78" kind="error"></ajcmessage>
            
            <ajcmessage line="85" kind="error"></ajcmessage>

            <message line="13" kind="error"></message>
            <message line="13" kind="error"></message>
            <message line="28" kind="error"></message>
            <message line="28" kind="error"></message>
            <message line="47" kind="error"></message>
            <message line="48" kind="error"></message>
            <message line="50" kind="error"></message>
            <message line="50" kind="error"></message>

        </compile>
    </ajc-test>
<ajc-test title="cflow binding issues with ignoring state" pr="34858" num="764" dir="bugs">
        <compile files="CflowBinding.java"></compile>
        <run class="CflowBinding"></run>
    </ajc-test>
<ajc-test title="cflow binding -- original weaver crash" pr="34858" num="765" dir="bugs">
        <compile files="CflowBindingOrig.java"></compile>
        <run class="CflowBindingOrig"></run>
    </ajc-test>
<ajc-test title="type not imported in around advice" num="766" dir="errors">
        <compile files="TypeNotImportedInAroundCE.java">
        	<message line="10" kind="error"></message>
        </compile>
	</ajc-test>
<ajc-test title="type not imported in aspect" num="767" dir="errors">
        <compile files="TypeInAspectNotImportedCE.java">
        	<message line="6" kind="error"></message>
        </compile>
	</ajc-test>
<ajc-test title="class extending abstract aspect" num="768" keywords="error" dir="errors">
        <compile files="ClassExtendingAbstractAspectCE.java">
			<message line="20" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="inter-type declaration bug with abstract classes" pr="36046" num="773" dir="bugs/interAbstract">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="Inter type declaration to base class not seen by derived class" pr="35725" num="774" dir="bugs/interInherit">
        <compile files="a_impl/AImpl.java,a_impl/Af.java,a_intf/A.java,b_impl/BImpl.java,b_intf/B.java"></compile>
        <run class="b_impl.BImpl"></run>
    </ajc-test>
<ajc-test title="Declare parents with intermediate ancestor" num="775" keywords="from-new" dir="new/declareParents">
        <compile files="Driver.java">
        <message line="29" kind="warning"></message>
        </compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="Declare parents removing ancestor" num="776" keywords="from-new" dir="new/declareParents">
        <compile files="IllegalAdoption.java">
            <message line="13" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="options -injars checking declare parents interactions" pr="35865" num="777" dir="options/injars/simple">
        <compile options="!eclipse" files="DecParents.java,main.jar"></compile>
        <run class="DecParents"></run>
    </ajc-test>
<ajc-test title="IllegalAccessError while accessing introduced variable / 1.1rc1" pr="36110" num="778" dir="bugs/interSpecials">
        <compile files="p1/C.java,p2/A1.java"></compile>
        <run class="p2.A1"></run>
    </ajc-test>
<ajc-test title="testing that assert works like .class" pr="36110" num="779" dir="bugs/interSpecials">
        <compile options="-source,1.4" files="p1/C.java,p2/A2.java"></compile>
        <run vm="1.4" class="p2.A2"></run>
    </ajc-test>
<ajc-test title="implemented abstract pointcut" pr="36736" num="780" dir="new">
        <compile files="AbstractImplementedPointcut.java">
            <message line="14" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="privileged aspect main verify error" pr="36673" num="781" dir="new/verifyError">
        <compile files="Privilege.java"></compile>
        <run class="Privilege"></run>
    </ajc-test>
<ajc-test title="Internal compiler error with thisJoinPoint.getStaticPart()" pr="36564" num="782" dir="bugs">
        <compile files="tjpStaticPart/Test.java,tjpStaticPart/Exceptions.java"></compile>
        <run class="tjpStaticPart.Test"></run>
    </ajc-test>
<ajc-test title="Inconsistant stack height with around" pr="29665" num="783" dir="bugs">
        <compile files="StackError.java"></compile>
        <run class="StackError"></run>
    </ajc-test>
<ajc-test title="Ajc 1.1 rc1 java.lang.VerifyError with messy arounds - fixed" pr="36056" num="78401" dir="abctests/bugs/messyAround" abccomment="we only report the warning in one location. Also,           the main class is not declared public, which makes    this fail from the test harness. Cloned. PA">
        <compile files="aspects/Trace.aj,cap/OptionList.java,DebugTrace.aj">
                <ajcmessage line="102" kind="warning"></ajcmessage>
        	<ajcmessage line="124" kind="warning"></ajcmessage>
        	<ajcmessage line="138" kind="warning"></ajcmessage>
		<message line="102" kind="warning"></message>
        	<message line="124" kind="warning"></message>
        </compile>
        <run class="cap.OptionList"></run>
    </ajc-test>
<ajc-test title="try/finally in around advice (same as ...messy arounds?)" num="785" dir="new" abccomment="around weaver internal error - Sascha emailed - AGS 1/7/04">
        <compile files="TryFinallyInAround.java"></compile>
        <run class="TryFinallyInAround"></run>
    </ajc-test>
<ajc-test title="advise join points in subclass of empty interface" pr="36778" num="786" dir="new">
        <compile files="EmptyInterface.java"></compile>
        <run class="EmptyInterface"></run>
    </ajc-test>
<ajc-test title="can't put around advice on interface static initializer" pr="36778" num="787" dir="new" comment="this tests for a nice message given a compiler limitation" abccomment="we just produce a warning, and just in one place">
        <compile files="EmptyInterfaceCE.java">
        	<ajcmessage line="20" kind="error"></ajcmessage>
        	<ajcmessage line="23" kind="error"></ajcmessage>
        	<message line="20" kind="warning"></message>
        </compile>
    </ajc-test>
<ajc-test title="cflow concretization causing assertion failure" pr="36803" num="788" dir="bugs">
        <compile files="CflowConcrete.java"></compile>
        <run class="CflowConcrete"></run>
    </ajc-test>
<ajc-test title="lame error message: negation doesn't allow binding" pr="30663" num="790" dir="bugs">
        <compile files="BadBindingError.java">
            <message line="7" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Error when introducing members of type Class" pr="36936" num="791" dir="bugs/interSpecials">
        <compile files="Trg.java,Asp.java"></compile>
        <run class="Trg"></run>
    </ajc-test>
<ajc-test title="arrays via Class.forName()" num="792" dir="new" comment="this is a pureJava test, but we always want to run it">
        <compile files="ClassForName.java"></compile>
        <run class="ClassForName"></run>
    </ajc-test>
<ajc-test title="declare warnings on main" pr="37020" num="793" dir="new/binaryWarnings/src" abccomment="we report slightly different positions">
        <compile files="aspects/MainWarnings.java,app/Main.java">
        	<ajcmessage text="staticinitialization(Main)" line="6" kind="warning" file="app/Main.java"></ajcmessage>
        	<ajcmessage text="set(String Main.staticString)" line="6" kind="warning" file="app/Main.java"></ajcmessage>
        	<ajcmessage text="set(String Main.s)" line="8" kind="warning" file="app/Main.java"></ajcmessage>
        	<ajcmessage text="get(String Main.staticString)" line="12" kind="warning" file="app/Main.java"></ajcmessage>
        	<ajcmessage text="set(String Main.staticString)" line="14" kind="warning" file="app/Main.java"></ajcmessage>
        	<ajcmessage text="call(Main.new())" line="16" kind="warning" file="app/Main.java"></ajcmessage>
        	<ajcmessage text="call(void Main.go(String))" line="19" kind="warning" file="app/Main.java"></ajcmessage>
        	<ajcmessage text="initialization(Main.new())" line="23" kind="warning" file="app/Main.java"></ajcmessage>
        	<ajcmessage text="get(String Main.s)" line="23" kind="warning" file="app/Main.java"></ajcmessage>
        	<ajcmessage text="set(String Main.s)" line="23" kind="warning" file="app/Main.java"></ajcmessage>
        	<ajcmessage text="execution(void Main.go(String))" line="26" kind="warning" file="app/Main.java"></ajcmessage>
        	<ajcmessage text="get(String Main.s)" line="29" kind="warning" file="app/Main.java"></ajcmessage>
        	<ajcmessage text="set(String Main.s)" line="31" kind="warning" file="app/Main.java"></ajcmessage>
        	<ajcmessage text="D.go withincode(void Main.go(String))" line="32" kind="warning" file="app/Main.java"></ajcmessage>
        	<ajcmessage text="handler(RuntimeException)" line="33" kind="warning" file="app/Main.java"></ajcmessage>
        	<ajcmessage text="withincode(void Main.go(String))" line="35" kind="warning" file="app/Main.java"></ajcmessage>
        	<ajcmessage text="withincode(void Main.stop())" line="42" kind="warning" file="app/Main.java"></ajcmessage>
        	<ajcmessage text="preinitialization(app.C.new())" line="50" kind="warning" file="app/Main.java"></ajcmessage>
        	<message text="staticinitialization(Main)" line="4" kind="warning" file="app/Main.java"></message>
        	<message text="set(String Main.staticString)" line="6" kind="warning" file="app/Main.java"></message>
        	<message text="set(String Main.s)" line="8" kind="warning" file="app/Main.java"></message>
        	<message text="get(String Main.staticString)" line="12" kind="warning" file="app/Main.java"></message>
        	<message text="set(String Main.staticString)" line="14" kind="warning" file="app/Main.java"></message>
        	<message text="call(Main.new())" line="16" kind="warning" file="app/Main.java"></message>
        	<message text="call(void Main.go(String))" line="19" kind="warning" file="app/Main.java"></message>
        	<message text="initialization(Main.new())" line="23" kind="warning" file="app/Main.java"></message>
        	<message text="get(String Main.s)" line="23" kind="warning" file="app/Main.java"></message>
        	<message text="set(String Main.s)" line="23" kind="warning" file="app/Main.java"></message>
        	<message text="execution(void Main.go(String))" line="26" kind="warning" file="app/Main.java"></message>
        	<message text="get(String Main.s)" line="29" kind="warning" file="app/Main.java"></message>
        	<message text="set(String Main.s)" line="31" kind="warning" file="app/Main.java"></message>
        	<message text="D.go withincode(void Main.go(String))" line="32" kind="warning" file="app/Main.java"></message>
        	<message text="handler(RuntimeException)" line="33" kind="warning" file="app/Main.java"></message>
        	<message text="withincode(void Main.go(String))" line="35" kind="warning" file="app/Main.java"></message>
        	<message text="withincode(void Main.stop())" line="42" kind="warning" file="app/Main.java"></message>
        	<message text="preinitialization(app.C.new())" line="50" kind="warning" file="app/Main.java"></message>
        </compile>
        <run class="app.Main"></run>
    </ajc-test>
<ajc-test title="declare warnings on binary javac 1.4 classes" pr="37020" num="794" dir="new/binaryWarnings/src">
        <compile files="aspects/MainWarnings.java,../injars/app-javac-1.4.jar">
        	<message text="staticinitialization(Main)" line="6" kind="warning" file="app/Main.java"></message>
        	<message text="set(String Main.staticString)" line="6" kind="warning" file="app/Main.java"></message>
        	<message text="set(String Main.s)" line="8" kind="warning" file="app/Main.java"></message>
        	<message text="get(String Main.staticString)" line="12" kind="warning" file="app/Main.java"></message>
        	<message text="set(String Main.staticString)" line="14" kind="warning" file="app/Main.java"></message>
        	<message text="call(Main.new())" line="16" kind="warning" file="app/Main.java"></message>
        	<message text="call(void Main.go(String))" line="19" kind="warning" file="app/Main.java"></message>
        	<message text="initialization(Main.new())" line="23" kind="warning" file="app/Main.java"></message>
        	<message text="get(String Main.s)" line="23" kind="warning" file="app/Main.java"></message>
        	<message text="set(String Main.s)" line="23" kind="warning" file="app/Main.java"></message>
        	<message text="execution(void Main.go(String))" line="26" kind="warning" file="app/Main.java"></message>
        	<message text="get(String Main.s)" line="29" kind="warning" file="app/Main.java"></message>
        	<message text="set(String Main.s)" line="31" kind="warning" file="app/Main.java"></message>
        	<message text="D.go withincode(void Main.go(String))" line="32" kind="warning" file="app/Main.java"></message>
        	<message text="handler(RuntimeException)" line="33" kind="warning" file="app/Main.java"></message>
        	<message text="withincode(void Main.go(String))" line="35" kind="warning" file="app/Main.java"></message>
        	<message text="withincode(void Main.stop())" line="42" kind="warning" file="app/Main.java"></message>
        	<message text="preinitialization(app.C.new())" line="50" kind="warning" file="app/Main.java"></message>
        </compile>
        <run class="app.Main"></run>
    </ajc-test>
<ajc-test title="declare warnings on binary ajc 1.1 classes" pr="37023" num="795" dir="new/binaryWarnings/src" abccomment="we fail because of an off-by one error on the handler line number info">
        <compile files="aspects/MainWarnings.java,../injars/app-ajc-1.1.jar">
        	<message text="staticinitialization(Main)" line="6" kind="warning" file="app/Main.java"></message>
        	<message text="set(String Main.staticString)" line="6" kind="warning" file="app/Main.java"></message>
        	<message text="set(String Main.s)" line="8" kind="warning" file="app/Main.java"></message>
        	<message text="get(String Main.staticString)" line="12" kind="warning" file="app/Main.java"></message>
        	<message text="set(String Main.staticString)" line="14" kind="warning" file="app/Main.java"></message>
        	<message text="call(Main.new())" line="16" kind="warning" file="app/Main.java"></message>
        	<message text="call(void Main.go(String))" line="19" kind="warning" file="app/Main.java"></message>
        	<message text="initialization(Main.new())" line="23" kind="warning" file="app/Main.java"></message>
        	<message text="get(String Main.s)" line="23" kind="warning" file="app/Main.java"></message>
        	<message text="set(String Main.s)" line="23" kind="warning" file="app/Main.java"></message>
        	<message text="execution(void Main.go(String))" line="26" kind="warning" file="app/Main.java"></message>
        	<message text="get(String Main.s)" line="29" kind="warning" file="app/Main.java"></message>
        	<message text="set(String Main.s)" line="31" kind="warning" file="app/Main.java"></message>
        	<message text="D.go withincode(void Main.go(String))" line="32" kind="warning" file="app/Main.java"></message>
        	<message text="handler(RuntimeException)" line="33" kind="warning" file="app/Main.java"></message>
        	<message text="withincode(void Main.go(String))" line="35" kind="warning" file="app/Main.java"></message>
        	<message text="withincode(void Main.stop())" line="42" kind="warning" file="app/Main.java"></message>
        	<message text="preinitialization(app.C.new())" line="50" kind="warning" file="app/Main.java"></message>
        </compile>
        <run class="app.Main"></run>
	</ajc-test>
<ajc-test title="declare error on handler/method execution with no code on binary ajc 1.1 classes" pr="37020" num="796" keywords="knownLimitation" dir="new/binaryWarnings/src" comment="source loc of binary jp depends on first code, not block start" abccomment="ideally we'd get the message at line 6, but 12 is about the best we can do.                      6 isn't reported in the bytecode anywhere, so there's no hope of that.                      ajc does the same as us.">
        <compile files="aspects/MainExecStartLinesErrors.java,../injars/appStartLines-ajc-1.1.jar">
        	<ajcmessage text="execution(void MainExecStartLines.main(String[]))" line="6" kind="error" file="app/MainExecStartLines.java"></ajcmessage>
        	<ajcmessage text="handler(RuntimeException)" line="17" kind="error" file="app/MainExecStartLines.java"></ajcmessage>        	  
        	<message text="execution(void MainExecStartLines.main(String[]))" line="12" kind="error" file="app/MainExecStartLines.java"></message>
        	<message text="handler(RuntimeException)" line="17" kind="error" file="app/MainExecStartLines.java"></message>        	  
        </compile>
    </ajc-test>
<ajc-test title="declare error on handler/method execution with no code on binary javac 1.4 classes" pr="37020" num="797" keywords="knownLimitation" dir="new/binaryWarnings/src" comment="source loc of binary jp depends on first code, not block start; XXX need javac inlining example" abccomment="ideally we'd get the message at line 6 and 17, but 12 and 20 is the best we can do                     given what the bytecode has. ajc does the same as us.">
        <compile files="aspects/MainExecStartLinesErrors.java,../injars/appStartLines-javac-1.4.jar">
        	<ajcmessage text="execution(void MainExecStartLines.main(String[]))" line="6" kind="error" file="app/MainExecStartLines.java"></ajcmessage>
        	<ajcmessage text="handler(RuntimeException)" line="17" kind="error" file="app/MainExecStartLines.java"></ajcmessage>        	  
        	<message text="execution(void MainExecStartLines.main(String[]))" line="12" kind="error" file="app/MainExecStartLines.java"></message>
        	<message text="handler(RuntimeException)" line="20" kind="error" file="app/MainExecStartLines.java"></message>        	  
        </compile>
    </ajc-test>
<ajc-test title="expected class tree" num="803" dir="incremental/initialTests/expClasses">
        <compile files="Main.java">
            <dir-changes expDir="expected"></dir-changes>
        </compile>
        <run class="Main"></run>
    </ajc-test>
<ajc-test title="perthis and inline arounds" pr="37152" num="805" dir="bugs/inlineAround">
        <compile files="aspect1/Base.java,aspect2/Concrete.java,p1/Main.java">
        </compile>
        <run class="p1.Main"></run>
    </ajc-test>
<ajc-test title="Weaver fails with NPE for very large source files " pr="37325" num="808" dir="bugs">
        <compile files="LongFile.java"></compile>
        <run class="LongFile"></run>
    </ajc-test>
<ajc-test title="CLE: -help usage" num="809" keywords="command-line-error,knownLimitation" dir="harness" comment="can't test -help: has to abort, but returns 0, normal status">
        <compile options="-help" badInput="true">
            <message text="Usage" kind="abort"></message>
        </compile>
    </ajc-test>
<ajc-test title="CLE: bad filename" num="811" keywords="command-line-error,knownLimitation-ajctaskCompiler,knownLimitation-ajdeCompiler" dir="harness" comment="ajde omits usage" abccomment="abc only throws one error - correctly, in our opinion. PA/AGS">
        <compile files="NoSuchFile.java" badInput="true">
            <ajcmessage text="NoSuchFile.java" kind="error"></ajcmessage>
            <ajcmessage text="Usage" kind="abort"></ajcmessage>
	    <message kind="error" file="NoSuchFile.java"></message>
        </compile>
    </ajc-test>
<ajc-test title="Unexpected Xlint:unresolvableMember warning with withincode" pr="37739" num="815" dir="bugs">
        <compile files="CatchSig.java">
        </compile>
        <run class="CatchSig"></run>
    </ajc-test>
<ajc-test title="public static fields being ignored" pr="37304" num="816" dir="bugs">
        <compile files="FinalFields.java"></compile>
        <run class="FinalFields"></run>
    </ajc-test>
<ajc-test title="Weaving rt.jar results in stack overflow" pr="37758" num="817" dir="bugs/lines">
        <compile files="A.java,big.jar">
 			
        </compile>
        <run class="Big"></run>
    </ajc-test>
<ajc-test title="XLint:ignore suppresses XLint warnings" num="820" dir="harness">
        <compile options="-Xlint:ignore" files="XLintWarningTest.java"></compile>
    </ajc-test>
<ajc-test title="declare warnings on main - constructor execution" pr="37020" num="822" keywords="knownLimitation" dir="new/binaryWarnings/src">
        <compile files="aspects/ConstructorExecutionWarning.java,app/Main.java">
        	<message text="execution(Main.new())" line="23" kind="warning" file="app/Main.java"></message>
        </compile>
        <run class="app.Main"></run>
    </ajc-test>
<ajc-test title="declare warnings on binary javac 1.4 main - constructor execution" pr="37020" num="823" keywords="knownLimitation" dir="new/binaryWarnings/src">
        <compile files="aspects/ConstructorExecutionWarning.java,../injars/app-javac-1.4.jar">
        	<message text="execution(Main.new())" line="23" kind="warning" file="app/Main.java"></message>
        </compile>
        <run class="app.Main"></run>
    </ajc-test>
<ajc-test title="declare warnings on binary ajc 1.1 main - constructor execution" pr="37020" num="824" keywords="knownLimitation" dir="new/binaryWarnings/src">
        <compile files="aspects/ConstructorExecutionWarning.java,../injars/app-ajc-1.1.jar">
        	<message text="execution(Main.new())" line="23" kind="warning" file="app/Main.java"></message>
        </compile>
        <run class="app.Main"></run>
    </ajc-test>
<ajc-test title="advice on handler join points should not throw unpermitted checked exceptions" pr="37898" num="825" keywords="knownLimitation" dir="bugs/handlers" abccomment="we only report the error at the join point shadow, not the advice                              body too.">
        <compile files="ExceptionCheckCE.java">
			<ajcmessage text="expected" line="8" kind="warning"></ajcmessage>
			<ajcmessage text="throw checked exception" line="25" kind="error"></ajcmessage>
			<ajcmessage text="throw checked exception" line="8" kind="error"></ajcmessage>
			<message line="8" kind="error"></message>
			<message text="expected" line="8" kind="warning"></message>
        </compile>
    </ajc-test>
<ajc-test title="-nowarn suppresses XLint warnings" pr="38134" num="827" keywords="knownLimitation" dir="harness" comment="behavior is correct for 1.1 - revisit for 1.2">
        <compile options="-nowarn" files="XLintWarningTest.java"></compile>
    </ajc-test>
<ajc-test title="warn:none suppresses XLint warnings" pr="38134" num="828" keywords="knownLimitation" dir="harness" comment="behavior is correct for 1.1 - revisit for 1.2">
        <compile options="-warn:none" files="XLintWarningTest.java"></compile>
    </ajc-test>
<ajc-test title="can not resolve this member warning" pr="38212" num="832" dir="bugs/accessMethods">
        <compile files="p1/Base.java,p2/Derived.java"></compile>
        <run class="p2.Derived"></run>
    </ajc-test>
<ajc-test title="try switch VerifyError, InconsistentStackHeight" pr="38345" num="833" dir="bugs">
        <compile files="TrySwitch.java"></compile>
        <run class="TrySwitch"></run>
    </ajc-test>
<ajc-test title="Compiler crash in ajc 1.1 - terrible error for inaccessible constructor" pr="39458" num="834" dir="bugs" abccomment="abc bails out early">
        <compile files="NewVoid.java">
            <ajcmessage line="17" kind="error"></ajcmessage>        
            <ajcmessage line="20" kind="error"></ajcmessage>        
            <ajcmessage line="21" kind="error"></ajcmessage>
                  
            <ajcmessage line="28" kind="error"></ajcmessage>        
            <ajcmessage line="29" kind="warning"></ajcmessage>        
            <ajcmessage line="30" kind="warning"></ajcmessage>            

            <message line="20" kind="error"></message>        
            <message line="28" kind="error"></message>        
        </compile>
    </ajc-test>
<ajc-test title="Missing import crashes compiler" pr="39460" num="835" dir="bugs">
        <compile files="MissingImport.java">
            <message line="13" kind="error"></message>       
        </compile>
    </ajc-test>
<ajc-test title="NPE in bcel.LazyMethodGen when delegating from one ctor to a second that includes a switch" pr="39479" num="836" dir="bugs">
        <compile files="NewSwitch.java"></compile>
        <run class="NewSwitch"></run>
    </ajc-test>
<ajc-test title="switch statement in aspects crashes weaving" pr="40109" num="837" dir="bugs">
        <compile files="SwitchInAround.java"></compile>
        <run class="SwitchInAround"></run>
    </ajc-test>
<ajc-test title="ajc stack trace on declaring hashcode() method in aspect" pr="39993" num="838" dir="bugs">
        <compile files="OverridingInterfaceObjectMethod.java"></compile>
        <run class="OverridingInterfaceObjectMethod"></run>
    </ajc-test>
<ajc-test title="using super in method introduced on interface with multiple supertypes" num="839" dir="bugs">
        <compile files="MultipleSuperCf.java">
        	<message line="14" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Compiler crashes in jar and cflow (with no .jar)" pr="39462" num="840" dir="bugs/cflowAndJar">
        <compile files="TestAspect.aj,Test.java,AbstractAspect.aj">
        	<message line="16" kind="warning"></message>
        </compile>
        <run class="Test"></run>
    </ajc-test>
<ajc-test title="Default method impl for interface causes internal exception." pr="40589" num="842" dir="bugs">
        <compile files="CloneMethod.java"></compile>
        <run class="CloneMethod"></run>
    </ajc-test>
<ajc-test title="Class Literals as non final fields (also assert, and this$0)" pr="39711" num="843" dir="bugs">
        <compile options="-source,1.4" files="ClassLiteralField.java"></compile>
        <run vm="1.4" class="ClassLiteralField"></run>
    </ajc-test>
<ajc-test title="compile error expected for abstract pointcut outside abstract aspect" num="844" dir="errors" abccomment="better errors from abc. 19/07/04 ODM">
		<compile files="AbstractPointcutCE.java">
			<ajcmessage line="5" kind="error"></ajcmessage>
			<ajcmessage line="10" kind="error"></ajcmessage>
                        <message line="4" kind="error"></message>
                        <message line="5" kind="error"></message>
                        <message line="9" kind="error"></message>
		</compile>
	</ajc-test>
<ajc-test title="subtype-qualified pointcut reference" pr="40876" num="845" dir="bugs">
		<compile files="PointcutLibraryTest.java"></compile>
		<run class="PointcutLibraryTest"></run>
	</ajc-test>
<ajc-test title="weaver trace on mis-qualified pointcut reference" pr="40858" num="846" dir="bugs" comment="super is not permitted in pointcuts in 1.1">
		<compile files="SuperPointcutCE.java">
			<message line="23" kind="error"></message>
			<message line="26" kind="error"></message>
		</compile>
	</ajc-test>
<ajc-test title="compile error expected for interface pointcuts" pr="40814" num="847" dir="bugs" abccomment="an extra message from abc. ODM 19/07/04">
		<compile files="AbstractPointcutCE.java">
			<ajcmessage line="7" kind="error"></ajcmessage>
			<ajcmessage line="11" kind="error"></ajcmessage>		
			<ajcmessage line="15" kind="error"></ajcmessage>
	                <message line="7" kind="error"></message>
			<message line="11" kind="error"></message>
                        <message line="14" kind="error"></message>		
			<message line="15" kind="error"></message>                        
		</compile>
	</ajc-test>
<ajc-test title="interface call signatures when declaring method in aspect" pr="40805" num="848" dir="bugs">
		<compile files="DeclareWarningAndInterfaceMethodCW.java">
			<message text="call getSomething" line="27" kind="warning"></message>
			<message text="call ICanGetSomething.getSomething" line="27" kind="warning"></message>
			<message text="call getSomething" line="31" kind="warning"></message>
			<message text="call ICanGetSomething.getSomething" line="31" kind="warning"></message>
			<message text="call getSomething" line="33" kind="warning"></message>
			<message text="call ICanGetSomething.getSomething" line="33" kind="warning"></message>
			<message text="call getSomething" line="35" kind="warning"></message>
			<message text="call ICanGetSomething.getSomething" line="35" kind="warning"></message>
			<message text="call getSomething" line="38" kind="warning"></message>
			<message text="call ICanGetSomething.getSomething" line="38" kind="warning"></message>
		</compile>
	</ajc-test>
<ajc-test title="aspect-declared interface members in libraries - baseline" num="849" dir="new/interfaceLibrary">
		<compile files="lib/LibraryInterface.java,       Client.java,       LibraryAspect.java"></compile>
		<run class="Client"></run>
		</ajc-test>
<ajc-test title="aspect-declared interface members in libraries - aspectedInterfaceOnly.jar" num="852" dir="new/interfaceLibrary" comment="prove aspect is required even if interface is woven" abccomment="only one error, but ok. ODM 27/07/04">
		<compile files="Client.java" classpath="aspectedInterfaceOnly.jar">
			<ajcmessage text="LibraryAspect" line="0" kind="error"></ajcmessage>
			<ajcmessage text="LibraryInterface" line="9" kind="error"></ajcmessage>
	                <message text="LibraryInterface" line="9" kind="error"></message>
			</compile>
		</ajc-test>
<ajc-test title="aspect-declared interface members in libraries - aspectedInterfaceOnly.jar,aspectOnly.jar" num="853" dir="new/interfaceLibrary" comment="weaving required for implementations of interface?             XXX Would prefer to support javac compiles of Client here, mimicked with classpath only">
		<compile files="Client.java" classpath="aspectedInterfaceOnly.jar,aspectOnly.jar">
			<message line="9" kind="error"></message>
                        </compile>
		</ajc-test>
<ajc-test title="aspect-declared interface members in libraries - aspectedInterfaceOnlyBinary.jar,aspectOnly.jar" num="854" dir="new/interfaceLibrary" comment="works if aspect is only on the classpath?, i.e., no weaving XXX need javac run">
		<compile files="Client.java" classpath="aspectedInterfaceOnlyBinary.jar,aspectOnly.jar">
			<message line="9" kind="error"></message>
			</compile>
		</ajc-test>
<ajc-test title="exception clause for aspect-declared interface methods - positive" num="857" dir="bugs/interfaceLibrary" abccomment="problem with loosing exception clauses on newly created soot methods. emailed abc list 19/07/04. ODM">
		<compile files="Client.java,LibraryAspect.java,lib/LibraryInterface.java"></compile>
		<run class="Client"></run>
		</ajc-test>
<ajc-test title="exception clause for aspect-declared interface methods - negative" num="858" dir="bugs/interfaceLibrary">
		<compile files="ClientCE.java,LibraryAspect.java,lib/LibraryInterface.java">
			<message line="5" kind="error" file="ClientCE.java"></message>
			</compile>
		</ajc-test>
<ajc-test title="exception clause for aspect-declared class methods - positive" num="859" dir="bugs/interfaceLibrary">
		<compile files="ClassClient.java,LibraryClassAspect.java,lib/LibraryClass.java"></compile>
		<run class="ClassClient"></run>
		</ajc-test>
<ajc-test title="exception clause for aspect-declared class methods - negative" num="860" dir="bugs/interfaceLibrary">
		<compile files="ClassClientCE.java,LibraryClassAspect.java,lib/LibraryClass.java">
			<message line="5" kind="error" file="ClassClientCE.java"></message>
			</compile>
		</ajc-test>
<ajc-test title="reflective check of declared exceptions from aspect-declared methods" pr="41175" num="861" dir="bugs" abccomment="soot seems to loose declared exceptions on new methods. mailed abc list. 19/07/04 ODM.                             Jennifer found it is due to Jasmin; she will fix. 27/07/04 ODM">
		<compile files="DeclaredExceptions.java"></compile>
		<run class="DeclaredExceptions"></run>
		</ajc-test>
<ajc-test title="Weaving failure when using injars (no jars)" pr="41123" num="866" dir="bugs/moreInterfaceLibrary">
		<compile files="lib/ExecutionMonitor.aj,model/BusObj.java,model/MonitorBusObj.java">
		</compile>
	</ajc-test>
<ajc-test title="percflow aspects compiled from jars share one instance for all entry points" pr="41359" num="870" dir="bugs/perCflowAndJar">
		<compile files="PerCFlowCompileFromJar.java,PerCFlowCompileFromJarTest.java"></compile>
		<run class="PerCFlowCompileFromJarTest"></run>
	</ajc-test>
<ajc-test title="throw derivative pointcuts not advised" pr="42539" num="872" dir="bugs/throwsSignature">
		<compile files="ExceptionBugTest.java,ExceptionAspect.java">
		    <message text="throws both" line="5" kind="warning"></message>
		    <message text="throws Exception" line="5" kind="error"></message>
		    <message text="throws both" line="7" kind="warning"></message>
                </compile>
	</ajc-test>
<ajc-test title="perthis and signature bad interaction" pr="42652" num="873" dir="bugs">
        <compile files="InterPerCall.java"></compile>
        <run class="InterPerCall"></run>
    </ajc-test>
<ajc-test title="declare error fails on pointcuts composed from multiple classes" pr="42740" num="874" dir="bugs/declareBinding" abccomment="awaiting tags with source locs, ok. ODM 19/07/04">
		<compile files="SampleExceptionHandling1.java">
		    <ajcmessage line="2" kind="error"></ajcmessage>
		    <message kind="error"></message>
                </compile>
	</ajc-test>
<ajc-test title="declare error fails on pointcuts composed from multiple classes" pr="42740" num="875" dir="bugs/declareSoftWithin">
		<compile files="aspects/Softener.aj,test/NoSoftener.java"></compile>
		<run class="test.NoSoftener"></run>
	</ajc-test>
<ajc-test title="Interaction between pointcut binding and declare parents" pr="42993" num="876" dir="bugs">
        <compile files="ParentsAndPointcuts.java"></compile>
        <run class="ParentsAndPointcuts"></run>
    </ajc-test>
<ajc-test title="Non-functional concretezation of ReferencePointcut" pr="43194" num="877" dir="bugs">
        <compile files="AdviceInteraction.java"></compile>
        <run class="AdviceInteraction"></run>
    </ajc-test>
<ajc-test title="NPE in concretization error path" pr="43033" num="878" keywords="poorErrorMessages" dir="bugs/concretizeNpe" abccomment="parse error location ok. ODM 19/07/04 Also extra 'parser couldn't recover' error - AGS">
		<compile files="base/ExceptionHandling.java,model/ModelExceptionHandling.java">
		
		  <ajcmessage line="12" kind="error"></ajcmessage>		
		  <ajcmessage line="13" kind="error"></ajcmessage>
                  <message kind="error"></message>
                  <message line="13" kind="error"></message>
		</compile>
	</ajc-test>
<ajc-test title="JoinPoint Optimization when targetting 1.4" pr="45441" num="879" dir="bugs/jpOptimization">
        <compile options="-1.4" files="de/test/MyMain.java,              de/test/MyAspect.java"></compile>
        <run class="de.test.MyMain"></run>
    </ajc-test>
<ajc-test title="priviledged aspects calling methods from advice" pr="42711" num="881" dir="bugs/privilege/packageProtected"> 
        <compile files="concern/ContextUser.java,concern/BaseTarget.java,core/Base.java"></compile> 
    </ajc-test>
<ajc-test title="No error on overloaded pointcuts in class" pr="49457" num="882" dir="bugs" abccomment="abc messages differ but ok. ODM 19/07/04">
        <compile files="OverloadedPointcutsInClass.java">
        	<ajcmessage text="duplicate pointcut name: pc1" line="3" kind="error"></ajcmessage>
        	<ajcmessage text="duplicate pointcut name: pc1" line="4" kind="error"></ajcmessage>
        	<ajcmessage text="duplicate pointcut name: pc2" line="6" kind="error"></ajcmessage>
        	<ajcmessage text="duplicate pointcut name: pc2" line="7" kind="error"></ajcmessage>
                <message line="4" kind="error"></message>
                <message line="6" kind="error"></message>
        	<message line="7" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="No error on overloaded pointcuts unless binding variables" pr="49457" num="883" dir="bugs" abccomment="abc text different but ok. ODM 19/07/04">
        <compile files="OverloadedPointcutsInAspect.java">
        	<ajcmessage text="duplicate pointcut name: pc" line="15" kind="error"></ajcmessage>
        	<ajcmessage text="duplicate pointcut name: pc" line="16" kind="error"></ajcmessage>
        	<ajcmessage text="incompatible type" line="18" kind="error"></ajcmessage>
        	<ajcmessage text="incompatible type" line="20" kind="error"></ajcmessage>
                <message line="15" kind="error"></message>
        	<message line="16" kind="error"></message>
                <message line="16" kind="error"></message>
                <message line="17" kind="error"></message>
                <message line="18" kind="error"></message>
                <message line="19" kind="error"></message>
        	<message line="20" kind="error"></message>
                <message line="21" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="alias getCause for getWrappedThrowable in SoftException" pr="49250" num="884" dir="bugs">
        <compile options="-Xlint:warning" files="GetCauseOnSoftException.java">
        </compile>
        <run vm="1.3" class="GetCauseOnSoftException"></run>
    </ajc-test>
<ajc-test title="Declare soft softening other exception types" pr="48522" num="885" dir="bugs">
        <compile files="SofteningTooMuch.java">
 	        <message text="Unhandled exception" line="6" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="static method introduction on interfaces, should not be allowed" pr="47754" num="886" dir="bugs" abccomment="text of message is better in abc. ODM 19/07/04">
        <compile files="StaticInterfaceMethods.java">
		  <ajcmessage text="methods in interfaces cannot be declared static" line="7" kind="error"></ajcmessage>
                  <message line="7" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="External pointcut refs not resolved if named pointcut used by declare" pr="45184" num="887" dir="bugs" abccomment="awaiting source pos tags. OK for now ODM 19/07/04">
        <compile files="DeclareErrorNamedPointcutCE.java">
 	        <ajcmessage text="ref" line="10" kind="error"></ajcmessage>
                <message kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Appropriate message for 'after() thowing(Throwable th)' syntax error" pr="49638" num="892" dir="bugs" abccomment="Polyglot continues beyond parse errors and throws another problem. ODM 07/07/04">
		<compile files="AfterThrowingAdviceSyntaxError.java">
			<ajcmessage line="21" kind="error"></ajcmessage>
			<ajcmessage line="23" kind="error"></ajcmessage>
			<message line="21" kind="error"></message>
                        <message line="22" kind="error"></message>
			<message line="23" kind="error"></message>
                </compile>
	</ajc-test>
<ajc-test title="inner aspect containing declare soft" pr="46750" num="894" dir="bugs">
       <compile files="TestSoftening.java">
       </compile>
    </ajc-test>
<ajc-test title="Bad parser error recovery in advice" pr="45663" num="895" dir="bugs" abccomment="Polyglot continues beyond parse, and thus has another error. ODM 07/07/04">
        <compile files="ParserRecoveryTest.java">
		  <ajcmessage line="7" kind="error"></ajcmessage>
                  <message line="5" kind="error"></message>
                  <message line="7" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Bad parser error recovery in java source" pr="45663" num="896" dir="bugs" abccomment="error on line 8 is not reported by abc, but it is                   ok.  July 6/04 LJH. abc now reports both. July 19/04 ODM.">
        <compile files="ParserRecoveryTestPureJava.java">
		  <message line="6" kind="error"></message>
		  <message line="8" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="compiler issues error on inner aspects when privilieged" pr="46280" num="897" dir="bugs">
        <compile files="PrivilegedParsing.java"></compile>
        <run class="PrivilegedParsing"></run>
    </ajc-test>
<ajc-test title="After throwing advice on ctors doesn't execute for inter-type decl field inits" pr="44586" num="898" dir="bugs" abccomment="ITD field initialisers should not appear in the exec jps of host constructors, but                     they do appear in initialisation jps of the same. Need to discuss with Ganesh.                     ODM 19/07/04">
        <compile files="AfterThrowingCtor.java">
        </compile>
  		<run class="AfterThrowingCtor"></run>
    </ajc-test>
<ajc-test title="Introduced abstract method on interface not implemented by subtype (weave altogether)" pr="49784" num="900" dir="bugs/abstractMethods">
        <compile files="interface/C.java,interface/A.java,interface/B.java"></compile>
        <run class="C"></run>
    </ajc-test>
<ajc-test title="Introduced abstract method on interface not implemented by subtype (injars)" pr="49784" num="901" dir="bugs/abstractMethods">
       <compile files="interface/C.java,interface/jars/AandB.jar"> 
            <message line="1" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Introduced abstract method on abstract class not implemented by subtype (single source file)" pr="49784" num="903" dir="bugs/abstractMethods" abccomment="abc gives message at intertype decl rather than class. ODM July 14,2004">
        <compile files="singlesource/C.java">
        	<ajcmessage line="9" kind="error"></ajcmessage>
                <message line="4" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Introduced abstract method on abstract class with introduced concrete method (single source file)" pr="49784" num="904" dir="bugs/abstractMethods">
        <compile files="singlesource/C1.java"></compile>
        <run class="C1"></run>
    </ajc-test>
<ajc-test title="Introduced abstract method on abstract class with existing concrete method (single source file)" pr="49784" num="905" dir="bugs/abstractMethods">
        <compile files="singlesource/C2.java"></compile>
        <run class="C2"></run>
    </ajc-test>
<ajc-test title="aspect declares interface method (no modifiers)" pr="49784" num="906" dir="bugs/interAbstract">
        <compile files="InterfaceMethodDeclarationNone.java">
        	<message text="requires a body" line="32" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="aspect declares interface method (abstract)" pr="49784" num="907" dir="bugs/interAbstract" abccomment="I believe this to be an ajc bug. The program makes perfect sense,                             it compiles fine, and the test runs ok. ODM 19/07/4">
        <compile files="InterfaceMethodDeclarationAbstract.java">
        	<ajcmessage text="must implement" line="40" kind="error"></ajcmessage>
        </compile>
        <run class="InterfaceMethodDeclarationAbstract"></run>
    </ajc-test>
<ajc-test title="aspect declares interface method (public abstract)" pr="49784" num="908" dir="bugs/interAbstract" comment="working in 1.1.1 - keep with others?">
        <compile files="InterfaceMethodDeclarationFull.java"></compile>
        <run class="InterfaceMethodDeclarationFull"></run>
    </ajc-test>
<ajc-test title="Use class implementing interface via aspect (weave all together)" pr="43972" num="910" dir="bugs/interfaceDefinition">
        <compile files="pack/DefineInterface.java,              pack/InterfaceDefinition.java,              pack/MyInterface.java,              Main.java"></compile>
        <run class="pack.InterfaceDefinition"></run>
        <run class="Main"></run>
    </ajc-test>
<ajc-test title="Erroneous exception conversion" pr="44587" num="912" dir="bugs">
        <compile files="ErroneousExceptionConversion.java">
        </compile>
        <run class="ErroneousExceptionConversion"></run>
    </ajc-test>
<ajc-test title="before():execution(new(..)) does not throw NoAspectBoundException" pr="34206" num="913" dir="bugs">
        <compile files="ErroneousExceptionConversion1.java">
        </compile>
        <run class="ErroneousExceptionConversion1"></run>
    </ajc-test>
<ajc-test title="Anomalous handling of inter-type declarations to abstract base classes in aspectj 1.1" pr="38824" num="914" dir="bugs">
	        <compile files="AbstractBaseAndInterTypeInterface.java">
	        </compile>
	</ajc-test>
<ajc-test title="NPE When compiling intertype declaration" pr="42515" num="915" dir="bugs/caseSensitivity">
        <compile files="uniqueId/Numbered.java,uniqueId/Bug.aj">
		  <message line="4" kind="error"></message>
        </compile>
  </ajc-test>
<ajc-test title="declare warning on subtype constructor" pr="49295" num="916" dir="bugs" abccomment="Fixed grammar to allow space between dots in formal pattern. ODM 14/07/04">
        <compile files="SubtypeConstructorCW.java">
			<ajcmessage text="String as first" line="5" kind="warning"></ajcmessage>
			<ajcmessage text="String as first" line="10" kind="warning"></ajcmessage>
                        <message line="5" kind="warning"></message>
                        <message line="10" kind="warning"></message>
        </compile>
        <run class="SubtypeConstructorCW"></run>
    </ajc-test>
<ajc-test title="CatchClauseSignature has broken operation" pr="50570" num="917" dir="bugs">
        <compile files="HandlerSig.java"></compile>
        <run class="HandlerSig"></run>
    </ajc-test>
<ajc-test title="after returning with parameter: matching rules" pr="42668" num="918" dir="new">
        <compile files="AfterReturningParamMatching.java"></compile>
        <run class="AfterReturningParamMatching"></run>
    </ajc-test>
<ajc-test title="mail list VerifyError with protected access" num="922" dir="bugs/protectedvf" abccomment="Need to make all aspects public prior to jimplification.                      ODM 16/07/04">
		<compile files="main/Driver.java,main/p2/AbstractTest.aj,main/p1/ConcreteTest.aj"></compile>
		<run class="main.Driver"></run>
	</ajc-test>
<ajc-test title="thisJoinPoint etc inside if pointcut" num="923" dir="abctests/design/reflection">
           <compile files="InsideIf.java"></compile>
           <run class="InsideIf"></run>
        </ajc-test>
<ajc-test title="cflow at handler joinpoints" num="924" dir="abctests/design/cflow">
           <compile files="Handler.java"></compile>
           <run class="Handler"></run>
        </ajc-test>
<ajc-test title="Polymorphic ITD fails in CVS HEAD (From ajdt 1.1.6)" pr="51919" num="925" dir="bugs">
        <compile files="OverloadedITDNPE.java"></compile>
    </ajc-test>
<ajc-test title="ClasscastException on concretization of if(false) 1" pr="51320" num="926" dir="bugs" abccomment="abc does indirect checks in later phase, and bails out too early,                      hence cloned this test. ODM 10/8/04">
        <compile files="DecwClassCastException.java">
        
         
         <ajcmessage text="if() pointcut designator cannot be used" line="27" kind="error"></ajcmessage>
         <ajcmessage text="if() pointcut designator cannot be used" line="29" kind="error"></ajcmessage>
         <ajcmessage text="cflow() pointcut designator cannot be used" line="31" kind="error"></ajcmessage>
         <ajcmessage text="cflow() pointcut designator cannot be used" line="33" kind="error"></ajcmessage>
         
         <ajcmessage text="cflowbelow() pointcut designator cannot be used" line="35" kind="error"></ajcmessage>
         <ajcmessage text="cflowbelow() pointcut designator cannot be used" line="37" kind="error"></ajcmessage>
         
         <ajcmessage text="this() pointcut designator cannot be used" line="39" kind="error"></ajcmessage>
         <ajcmessage text="this() pointcut designator cannot be used" line="41" kind="error"></ajcmessage>
         
         <ajcmessage text="target() pointcut designator cannot be used" line="43" kind="error"></ajcmessage>
         <ajcmessage text="target() pointcut designator cannot be used" line="45" kind="error"></ajcmessage>
         
         <ajcmessage text="args() pointcut designator cannot be used" line="47" kind="error"></ajcmessage>
         <ajcmessage text="args() pointcut designator cannot be used" line="49" kind="error"></ajcmessage>
         <message text="if() pointcut designator cannot be used" line="27" kind="error"></message>
         <message text="cflow() pointcut designator cannot be used" line="31" kind="error"></message>
         <message text="cflowbelow() pointcut designator cannot be used" line="35" kind="error"></message>
         <message text="this() pointcut designator cannot be used" line="39" kind="error"></message>
         <message text="target() pointcut designator cannot be used" line="43" kind="error"></message>
         <message text="args() pointcut designator cannot be used" line="47" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="ClasscastException on concretization of if(false) 1-1" pr="51320" num="92601" dir="abctests/bugs" abccomment="cloned from 926">
        <compile files="DecwClassCastExceptionIndirect.java">
        
         
         <message text="if() pointcut designator cannot be used" line="29" kind="error"></message>
         <message text="cflow() pointcut designator cannot be used" line="33" kind="error"></message>
         <message text="cflowbelow() pointcut designator cannot be used" line="37" kind="error"></message>
         <message text="this() pointcut designator cannot be used" line="41" kind="error"></message>
         <message text="target() pointcut designator cannot be used" line="45" kind="error"></message>
         <message text="args() pointcut designator cannot be used" line="49" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="ClasscastException on concretization of if(false) 2-1" pr="51320" num="927" dir="bugs">
        <compile files="DeclareSoftDynamicPCDs.java">
        
         
         <ajcmessage text="if() pointcut designator cannot be used" line="27" kind="error"></ajcmessage>
         <ajcmessage text="if() pointcut designator cannot be used" line="29" kind="error"></ajcmessage>
         
         <ajcmessage text="cflow() pointcut designator cannot be used" line="31" kind="error"></ajcmessage>
         <ajcmessage text="cflow() pointcut designator cannot be used" line="33" kind="error"></ajcmessage>
         
         <ajcmessage text="cflowbelow() pointcut designator cannot be used" line="35" kind="error"></ajcmessage>
         <ajcmessage text="cflowbelow() pointcut designator cannot be used" line="37" kind="error"></ajcmessage>
         
         <ajcmessage text="this() pointcut designator cannot be used" line="39" kind="error"></ajcmessage>
         <ajcmessage text="this() pointcut designator cannot be used" line="41" kind="error"></ajcmessage>
         
         <ajcmessage text="target() pointcut designator cannot be used" line="43" kind="error"></ajcmessage>
         <ajcmessage text="target() pointcut designator cannot be used" line="45" kind="error"></ajcmessage>
         
         <ajcmessage text="args() pointcut designator cannot be used" line="47" kind="error"></ajcmessage>
         <ajcmessage text="args() pointcut designator cannot be used" line="49" kind="error"></ajcmessage>
         
         <message text="if() pointcut designator cannot be used" line="27" kind="error"></message>
         <message text="cflow() pointcut designator cannot be used" line="31" kind="error"></message>
         
         <message text="cflowbelow() pointcut designator cannot be used" line="35" kind="error"></message>
         <message text="this() pointcut designator cannot be used" line="39" kind="error"></message>
         
         <message text="target() pointcut designator cannot be used" line="43" kind="error"></message>
         
         <message text="args() pointcut designator cannot be used" line="47" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="ClasscastException on concretization of if(false) 2-2" pr="51320" num="92701" dir="abctests/bugs">
        <compile files="DeclareSoftDynamicPCDsIndirect.java">
        
         
         <message text="if() pointcut designator cannot be used" line="29" kind="error"></message>
         
         <message text="cflow() pointcut designator cannot be used" line="33" kind="error"></message>
         
         <message text="cflowbelow() pointcut designator cannot be used" line="37" kind="error"></message>
         
         <message text="this() pointcut designator cannot be used" line="41" kind="error"></message>
         
         <message text="target() pointcut designator cannot be used" line="45" kind="error"></message>
         
         <message text="args() pointcut designator cannot be used" line="49" kind="error"></message>
         
        </compile>
    </ajc-test>
<ajc-test title="SUID: Before execution advice" pr="41181" num="928" dir="bugs/serialVersionUID">
		<compile files="Test.java, Util.java"></compile>
        <run class="Test"></run>
		<compile options="-Xlint:warning" files="Test.java, Util.java, BeforeExecutionAdvice.aj"></compile>
        <run class="Util"></run>
	</ajc-test>
<ajc-test title="SUID: Around closure execution advice (-Xlint:ignore)" pr="41181" num="930" dir="bugs/serialVersionUID" comment="OK because ignoring warnings">
		<compile files="Test.java, Util.java">
		</compile>
        <run class="Test"></run>
		<compile options="-Xlint:ignore" files="Test.java, Util.java, AroundClosureExecutionAdvice.aj">
		<message kind="warning"></message>
		</compile>
        <run options="-fail" class="Util"></run>
	</ajc-test>
<ajc-test title="SUID: thisJoinPoint with clinit method" pr="41181" num="933" dir="bugs/serialVersionUID" comment="OK if tjp private and existing clinit">
		<compile files="ClinitTest.java, Util.java"></compile>
        <run class="ClinitTest"></run>
		<compile options="-Xlint:warning" files="ClinitTest.java, Util.java, TJP.aj"></compile>
        <run options="-read" class="Util"></run>
	</ajc-test>
<ajc-test title="SUID: After returning staticinitialization advice with serialVersionUID field" pr="41181" num="935" dir="bugs/serialVersionUID" comment="OK because of serialVersionUID field">
		<compile files="SuidTest.java, Util.java"></compile>
        <run class="SuidTest"></run>
		<compile options="-Xlint:warning" files="SuidTest.java, Util.java, AfterReturningStaticinitializationAdvice.aj"></compile>
        <run class="Util"></run>
	</ajc-test>
<ajc-test title="SUID: Declare extends" pr="41181" num="938" dir="bugs/serialVersionUID" comment="OK">
		<compile files="Test.java, Util.java"></compile>
        <run class="Test"></run>
		<compile options="-Xlint:warning" files="Test.java, Util.java, DeclareExtends.aj"></compile>
        <run class="Util"></run>
	</ajc-test>
<ajc-test title="SUID: Declare implements non-Serializable (compile)" pr="41181" num="940" dir="bugs/serialVersionUID" comment="OK because not Serializable">
		<compile options="-Xlint:warning" files="NonSerializableTest.java, DeclareImplements.aj"></compile>
	</ajc-test>
<ajc-test title="SUID: Declare implements Serializable (compile)" pr="41181" num="941" dir="bugs/serialVersionUID" comment="OK because adding Serializable">
		<compile options="-Xlint:warning" files="NonSerializableTest.java, DeclareImplementsSerializable.aj"></compile>
	</ajc-test>
<ajc-test title="declare String field on interface" pr="52107" num="945" dir="bugs/fieldsOnInterfaces" abccomment="this is an error for us">
		<compile files="StringFieldOnInterface.java">
			<message line="16" kind="error"></message>
			<message line="17" kind="error"></message>
			<ajcmessage text="this affected type is not exposed" line="16" kind="warning"></ajcmessage>
         	<ajcmessage text="this affected type is not exposed" line="17" kind="warning"></ajcmessage>
		</compile>	   
	</ajc-test>
<ajc-test title="declare int field on interface" pr="52107" num="946" dir="bugs/fieldsOnInterfaces" abccomment="this is an error for us">
		<compile files="IntFieldOnInterface.java">
		<message line="27" kind="error"></message>
		<message line="28" kind="error"></message>
		<ajcmessage text="this affected type is not exposed" line="27" kind="warning"></ajcmessage>
         	<ajcmessage text="this affected type is not exposed" line="28" kind="warning"></ajcmessage>
		</compile>
	</ajc-test>
<ajc-test title="declare Object field on interface" pr="52107" num="947" dir="bugs/fieldsOnInterfaces" abccomment="this is an error for us">
		<compile files="ObjectFieldOnInterface.java">
			<message line="20" kind="error"></message>
			<message line="21" kind="error"></message>
			<ajcmessage text="this affected type is not exposed" line="20" kind="warning"></ajcmessage>
         	<ajcmessage text="this affected type is not exposed" line="21" kind="warning"></ajcmessage>
		</compile>
	</ajc-test>
<ajc-test title="fail in compiling aspect with overriding method introduction with different throws clause " pr="50776" num="948" dir="bugs">
        <compile files="IntertypeDifferentThrows.java"></compile>
    </ajc-test>
<ajc-test title="super call in anonymous class created in around advice" num="949" dir="new" comment="in ajc 1.1.1, VerifyError Illegal use of nonvirtual function call">
        <compile files="SuperClosure.java"></compile>
        <run class="SuperClosure"></run>
    </ajc-test>
<ajc-test title="retitle warning to circular {advice} dependency at ..." pr="44272" num="952" dir="bugs" abccomment="we only report one error, at the application location">
        <compile files="CircularAdvicePrecedence.java">
            <ajcmessage line="4" kind="error"></ajcmessage> 
            <ajcmessage line="5" kind="error"></ajcmessage> 
            <ajcmessage line="6" kind="error"></ajcmessage> 
            <message line="11" kind="error"></message> 
        </compile>
    </ajc-test>
<ajc-test title="Introduce Unknown Type to class causes Null pointer exception" pr="51322" num="953" dir="bugs">
        <compile files="Pr51322.java"> 
        	<message line="5" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Private members introduced via an interface are visible to the class" pr="52928" num="957" dir="bugs">
		<compile files="VisiblePrivateInterfaceITDs.java">
            <message line="13" kind="error"></message>
		</compile>
	</ajc-test>
<ajc-test title="declare precedence on a class should be a compile-time error 1" pr="53012" num="958" dir="bugs/declarePrecedenceWithClasses">
        <compile files="DeclarePrecedenceTestClass.java">
          <message text="Non-aspect types can only be specified" line="10" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="declare precedence on a class should be a compile-time error 2" pr="53012" num="959" dir="bugs/declarePrecedenceWithClasses">
        <compile files="Priority.aj"></compile>
    </ajc-test>
<ajc-test title="error Type mismatch: cannot convert from java.lang.String to java.lang.String" pr="55341" num="960" keywords="" dir="bugs/StringToString" comment="make helloworld.jar with 'ajc -outjar helloworld.jar HW.java' or run BcweaverJarMaker" abccomment="we think this is an error">
        <compile files="X.java" classpath="helloworld.jar">
        	<ajcmessage line="3" kind="warning"></ajcmessage>
        	<ajcmessage line="7" kind="warning"></ajcmessage>
        	<message line="3" kind="error"></message>
        	<message line="7" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="declare error binary-weaving NPE 1" pr="57432" num="961" dir="bugs/systemouts" abccomment="we correctly report two errors at line 13">
        <compile files="injar-debug.jar,A.java">
			<ajcmessage line="12" kind="error" file="X.java"></ajcmessage>
			<ajcmessage line="13" kind="error" file="X.java"></ajcmessage>
			<ajcmessage line="20" kind="error" file="X.java"></ajcmessage>
			<ajcmessage line="22" kind="error" file="X.java"></ajcmessage>
			<ajcmessage line="23" kind="error" file="X.java"></ajcmessage>
			<ajcmessage line="27" kind="error" file="X.java"></ajcmessage>
			<ajcmessage line="28" kind="error" file="X.java"></ajcmessage>
			<ajcmessage line="29" kind="error" file="X.java"></ajcmessage>
			<ajcmessage line="30" kind="error" file="X.java"></ajcmessage>
			<ajcmessage line="31" kind="error" file="X.java"></ajcmessage>
			<ajcmessage line="32" kind="error" file="X.java"></ajcmessage>
			<ajcmessage line="33" kind="error" file="X.java"></ajcmessage>
			<ajcmessage line="34" kind="error" file="X.java"></ajcmessage>
			<ajcmessage line="35" kind="error" file="X.java"></ajcmessage>
			<ajcmessage line="36" kind="error" file="X.java"></ajcmessage>
			<ajcmessage line="37" kind="error" file="X.java"></ajcmessage>
			<ajcmessage line="38" kind="error" file="X.java"></ajcmessage>
			<ajcmessage line="39" kind="error" file="X.java"></ajcmessage>
			<ajcmessage line="40" kind="error" file="X.java"></ajcmessage>
			<ajcmessage line="41" kind="error" file="X.java"></ajcmessage>
			<message line="12" kind="error" file="X.java"></message>
			<message line="13" kind="error" file="X.java"></message>
			<message line="13" kind="error" file="X.java"></message>
			<message line="20" kind="error" file="X.java"></message>
			<message line="22" kind="error" file="X.java"></message>
			<message line="23" kind="error" file="X.java"></message>
			<message line="27" kind="error" file="X.java"></message>
			<message line="28" kind="error" file="X.java"></message>
			<message line="29" kind="error" file="X.java"></message>
			<message line="30" kind="error" file="X.java"></message>
			<message line="31" kind="error" file="X.java"></message>
			<message line="32" kind="error" file="X.java"></message>
			<message line="33" kind="error" file="X.java"></message>
			<message line="34" kind="error" file="X.java"></message>
			<message line="35" kind="error" file="X.java"></message>
			<message line="36" kind="error" file="X.java"></message>
			<message line="37" kind="error" file="X.java"></message>
			<message line="38" kind="error" file="X.java"></message>
			<message line="39" kind="error" file="X.java"></message>
			<message line="40" kind="error" file="X.java"></message>
			<message line="41" kind="error" file="X.java"></message>
        </compile>
    </ajc-test>
<ajc-test title="declare error binary-weaving NPE 2 " pr="57432" num="962" dir="bugs/systemouts" abccomment="we generate 21 errors, just like ajc..">
        <compile files="injar-nodebug.jar,A.java">
			<message kind="error"></message>
			<message kind="error"></message>
			<message kind="error"></message>
			<message kind="error"></message>
			<message kind="error"></message>
			<message kind="error"></message>
			<message kind="error"></message>
			<message kind="error"></message>
			<message kind="error"></message>
			<message kind="error"></message>
			<message kind="error"></message>
			<message kind="error"></message>
			<message kind="error"></message>
			<message kind="error"></message>
			<message kind="error"></message>
			<message kind="error"></message>
			<message kind="error"></message>
			<message kind="error"></message>
			<message kind="error"></message>
			<message kind="error"></message>
			<message kind="error"></message>
			<ajcmessage line="0" kind="error"></ajcmessage>
        </compile>
    </ajc-test>
<ajc-test title="Regression from 1.1: NPE in CompilationResult" pr="58679" num="963" dir="bugs/tooManyErrors" abccomment="abc stops after 100 errors, ajc after 101. Nothing               interesting in this test case. PA">
        <compile files="Joinpoints101.jar,DecErrors.aj">
         
          <ajcmessage line="10" kind="error"></ajcmessage><ajcmessage line="11" kind="error"></ajcmessage>
          <ajcmessage line="12" kind="error"></ajcmessage><ajcmessage line="13" kind="error"></ajcmessage>
          <ajcmessage line="14" kind="error"></ajcmessage>

          <ajcmessage line="16" kind="error"></ajcmessage><ajcmessage line="17" kind="error"></ajcmessage>
          <ajcmessage line="18" kind="error"></ajcmessage><ajcmessage line="19" kind="error"></ajcmessage>
          <ajcmessage line="20" kind="error"></ajcmessage>
 
          <ajcmessage line="22" kind="error"></ajcmessage><ajcmessage line="23" kind="error"></ajcmessage>
          <ajcmessage line="24" kind="error"></ajcmessage><ajcmessage line="25" kind="error"></ajcmessage>
          <ajcmessage line="26" kind="error"></ajcmessage>
 
          <ajcmessage line="28" kind="error"></ajcmessage><ajcmessage line="29" kind="error"></ajcmessage>
          <ajcmessage line="30" kind="error"></ajcmessage><ajcmessage line="31" kind="error"></ajcmessage>
          <ajcmessage line="32" kind="error"></ajcmessage>
  
          <ajcmessage line="34" kind="error"></ajcmessage><ajcmessage line="35" kind="error"></ajcmessage>
          <ajcmessage line="36" kind="error"></ajcmessage><ajcmessage line="37" kind="error"></ajcmessage>
          <ajcmessage line="38" kind="error"></ajcmessage>
 
          <ajcmessage line="40" kind="error"></ajcmessage><ajcmessage line="41" kind="error"></ajcmessage>
          <ajcmessage line="42" kind="error"></ajcmessage><ajcmessage line="43" kind="error"></ajcmessage>
          <ajcmessage line="44" kind="error"></ajcmessage>
          
          <ajcmessage line="46" kind="error"></ajcmessage><ajcmessage line="47" kind="error"></ajcmessage>
          <ajcmessage line="48" kind="error"></ajcmessage><ajcmessage line="49" kind="error"></ajcmessage>
          <ajcmessage line="50" kind="error"></ajcmessage>
 
          <ajcmessage line="52" kind="error"></ajcmessage><ajcmessage line="53" kind="error"></ajcmessage>
          <ajcmessage line="54" kind="error"></ajcmessage><ajcmessage line="55" kind="error"></ajcmessage>
          <ajcmessage line="56" kind="error"></ajcmessage>
  
          <ajcmessage line="58" kind="error"></ajcmessage><ajcmessage line="59" kind="error"></ajcmessage>
          <ajcmessage line="60" kind="error"></ajcmessage><ajcmessage line="61" kind="error"></ajcmessage>
          <ajcmessage line="62" kind="error"></ajcmessage>
 
          <ajcmessage line="64" kind="error"></ajcmessage><ajcmessage line="65" kind="error"></ajcmessage>
          <ajcmessage line="66" kind="error"></ajcmessage><ajcmessage line="67" kind="error"></ajcmessage>
          <ajcmessage line="68" kind="error"></ajcmessage>
          
          <ajcmessage line="70" kind="error"></ajcmessage><ajcmessage line="71" kind="error"></ajcmessage>
          <ajcmessage line="72" kind="error"></ajcmessage><ajcmessage line="73" kind="error"></ajcmessage>
          <ajcmessage line="74" kind="error"></ajcmessage>
 
          <ajcmessage line="76" kind="error"></ajcmessage><ajcmessage line="77" kind="error"></ajcmessage>
          <ajcmessage line="78" kind="error"></ajcmessage><ajcmessage line="79" kind="error"></ajcmessage>
          <ajcmessage line="80" kind="error"></ajcmessage>
  
          <ajcmessage line="82" kind="error"></ajcmessage><ajcmessage line="83" kind="error"></ajcmessage>
          <ajcmessage line="84" kind="error"></ajcmessage><ajcmessage line="85" kind="error"></ajcmessage>
          <ajcmessage line="86" kind="error"></ajcmessage>
 
          <ajcmessage line="88" kind="error"></ajcmessage><ajcmessage line="89" kind="error"></ajcmessage>
          <ajcmessage line="90" kind="error"></ajcmessage><ajcmessage line="91" kind="error"></ajcmessage>
          <ajcmessage line="92" kind="error"></ajcmessage>
          
          <ajcmessage line="94" kind="error"></ajcmessage><ajcmessage line="95" kind="error"></ajcmessage>
          <ajcmessage line="96" kind="error"></ajcmessage><ajcmessage line="97" kind="error"></ajcmessage>
          <ajcmessage line="98" kind="error"></ajcmessage>
 
          <ajcmessage line="100" kind="error"></ajcmessage><ajcmessage line="101" kind="error"></ajcmessage>
          <ajcmessage line="102" kind="error"></ajcmessage><ajcmessage line="103" kind="error"></ajcmessage>
          <ajcmessage line="104" kind="error"></ajcmessage>
  
          <ajcmessage line="106" kind="error"></ajcmessage><ajcmessage line="107" kind="error"></ajcmessage>
          <ajcmessage line="108" kind="error"></ajcmessage><ajcmessage line="109" kind="error"></ajcmessage>
          <ajcmessage line="110" kind="error"></ajcmessage>
 
          <ajcmessage line="112" kind="error"></ajcmessage><ajcmessage line="113" kind="error"></ajcmessage>
          <ajcmessage line="114" kind="error"></ajcmessage><ajcmessage line="115" kind="error"></ajcmessage>
          <ajcmessage line="116" kind="error"></ajcmessage>
          
          <ajcmessage line="118" kind="error"></ajcmessage><ajcmessage line="119" kind="error"></ajcmessage>
          <ajcmessage line="120" kind="error"></ajcmessage><ajcmessage line="121" kind="error"></ajcmessage>
          <ajcmessage line="122" kind="error"></ajcmessage>
  
          <ajcmessage line="124" kind="error"></ajcmessage><ajcmessage line="125" kind="error"></ajcmessage>
          <ajcmessage line="126" kind="error"></ajcmessage><ajcmessage line="127" kind="error"></ajcmessage>
          <ajcmessage line="128" kind="error"></ajcmessage>
 
          <ajcmessage line="130" kind="error"></ajcmessage>
          
          <message line="10" kind="error"></message><message line="11" kind="error"></message>
          <message line="12" kind="error"></message><message line="13" kind="error"></message>
          <message line="14" kind="error"></message>

          <message line="16" kind="error"></message><message line="17" kind="error"></message>
          <message line="18" kind="error"></message><message line="19" kind="error"></message>
          <message line="20" kind="error"></message>
 
          <message line="22" kind="error"></message><message line="23" kind="error"></message>
          <message line="24" kind="error"></message><message line="25" kind="error"></message>
          <message line="26" kind="error"></message>
 
          <message line="28" kind="error"></message><message line="29" kind="error"></message>
          <message line="30" kind="error"></message><message line="31" kind="error"></message>
          <message line="32" kind="error"></message>
  
          <message line="34" kind="error"></message><message line="35" kind="error"></message>
          <message line="36" kind="error"></message><message line="37" kind="error"></message>
          <message line="38" kind="error"></message>
 
          <message line="40" kind="error"></message><message line="41" kind="error"></message>
          <message line="42" kind="error"></message><message line="43" kind="error"></message>
          <message line="44" kind="error"></message>
          
          <message line="46" kind="error"></message><message line="47" kind="error"></message>
          <message line="48" kind="error"></message><message line="49" kind="error"></message>
          <message line="50" kind="error"></message>
 
          <message line="52" kind="error"></message><message line="53" kind="error"></message>
          <message line="54" kind="error"></message><message line="55" kind="error"></message>
          <message line="56" kind="error"></message>
  
          <message line="58" kind="error"></message><message line="59" kind="error"></message>
          <message line="60" kind="error"></message><message line="61" kind="error"></message>
          <message line="62" kind="error"></message>
 
          <message line="64" kind="error"></message><message line="65" kind="error"></message>
          <message line="66" kind="error"></message><message line="67" kind="error"></message>
          <message line="68" kind="error"></message>
          
          <message line="70" kind="error"></message><message line="71" kind="error"></message>
          <message line="72" kind="error"></message><message line="73" kind="error"></message>
          <message line="74" kind="error"></message>
 
          <message line="76" kind="error"></message><message line="77" kind="error"></message>
          <message line="78" kind="error"></message><message line="79" kind="error"></message>
          <message line="80" kind="error"></message>
  
          <message line="82" kind="error"></message><message line="83" kind="error"></message>
          <message line="84" kind="error"></message><message line="85" kind="error"></message>
          <message line="86" kind="error"></message>
 
          <message line="88" kind="error"></message><message line="89" kind="error"></message>
          <message line="90" kind="error"></message><message line="91" kind="error"></message>
          <message line="92" kind="error"></message>
          
          <message line="94" kind="error"></message><message line="95" kind="error"></message>
          <message line="96" kind="error"></message><message line="97" kind="error"></message>
          <message line="98" kind="error"></message>
 
          <message line="100" kind="error"></message><message line="101" kind="error"></message>
          <message line="102" kind="error"></message><message line="103" kind="error"></message>
          <message line="104" kind="error"></message>
  
          <message line="106" kind="error"></message><message line="107" kind="error"></message>
          <message line="108" kind="error"></message><message line="109" kind="error"></message>
          <message line="110" kind="error"></message>
 
          <message line="112" kind="error"></message><message line="113" kind="error"></message>
          <message line="114" kind="error"></message><message line="115" kind="error"></message>
          <message line="116" kind="error"></message>
          
          <message line="118" kind="error"></message><message line="119" kind="error"></message>
          <message line="120" kind="error"></message><message line="121" kind="error"></message>
          <message line="122" kind="error"></message>
  
          <message line="124" kind="error"></message><message line="125" kind="error"></message>
          <message line="126" kind="error"></message><message line="127" kind="error"></message>
          <message line="128" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="NPE when binary weaving a ctor ITD" pr="59440" num="964" dir="bugs">
        <compile files="CtorITD.aj">
        	<message line="2" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="NPE in compiler when using (an unusual) declare warning against a ctor ITD" pr="59397" num="966" dir="bugs" abccomment="we do the right thing and ignore extra introduced arguments">
        <compile files="DecwInitializationITD.java">
        	<ajcmessage line="16" kind="warning"></ajcmessage>
        </compile>
    </ajc-test>
<ajc-test title="InterTypeMethodDeclaration.java:104" pr="59778" num="967" dir="bugs/compileOrdering">
        <compile files="B.java,D.java">
          <message line="2" kind="error" file="B.java"></message>
        </compile>
        <compile files="D.java,B.java">
          <message line="2" kind="error" file="B.java"></message>
        </compile>
    </ajc-test>
<ajc-test title="nested uses of this() inside constructors not handled properly for initialization and preinitialization pointcuts" pr="61538" num="968" dir="bugs">
        <compile files="ConstructorMain.java"></compile>
        <run class="ConstructorMain"></run>
    </ajc-test>
<ajc-test title="wrong variable binding in || pointcuts" pr="61568" num="969" dir="bugs" abccomment="we support this fine">
        <compile files="DisjunctVarBinding.java">
          <ajcmessage text="Ambiguous binding of type B" line="34" kind="error"></ajcmessage>
          <ajcmessage text="Ambiguous binding of type A" line="34" kind="error"></ajcmessage>
        </compile>
    </ajc-test>
<ajc-test title="error message for constructor-execution pcd" pr="60936" num="970" dir="bugs">
        <compile files="InterfaceConstructor.java">
          <message text="no interface constructor-execution join point" line="10" kind="warning"></message>
        </compile>
    </ajc-test>
<ajc-test title="false ambigous binding error (introduced in 1.2rc2)" pr="62073" num="971" dir="bugs" abccomment="we support ambiguous bindings">
        <compile files="DisjunctVarBinding_2.java,DisjunctVarBinding_3.java">
        	<ajcmessage text="Ambiguous binding of type B" line="25" kind="error" file="DisjunctVarBinding_2.java"></ajcmessage>
        	<ajcmessage text="Ambiguous binding of type A" line="25" kind="error" file="DisjunctVarBinding_2.java"></ajcmessage>
        </compile>
        <compile files="DisjunctVarBinding_3.java,DisjunctVarBinding_2.java">
        	<ajcmessage text="Ambiguous binding of type B" line="25" kind="error" file="DisjunctVarBinding_2.java"></ajcmessage>
        	<ajcmessage text="Ambiguous binding of type A" line="25" kind="error" file="DisjunctVarBinding_2.java"></ajcmessage>
        </compile>
    </ajc-test>
<ajc-test title="An if() pointcut inside a perthis() clauses an ABORT - null pointer exception in ajc - 1" pr="62458" num="972" dir="bugs/IfPerThis" abccomment="abc supports if() inside per clauses">
        <compile files="Testcase1.java">
        	<ajcmessage text="if() pointcut designator cannot be used directly in a per clause" line="15" kind="error"></ajcmessage>
        	<ajcmessage text="if() pointcut designator cannot be used directly in a per clause" line="23" kind="error"></ajcmessage>
        	<ajcmessage text="if() pointcut designator cannot be used directly in a per clause" line="25" kind="error"></ajcmessage>
        	<ajcmessage text="if() pointcut designator cannot be used directly in a per clause" line="27" kind="error"></ajcmessage>
        </compile>
    </ajc-test>
<ajc-test title="An if() pointcut inside a perthis() clauses an ABORT - null pointer exception in ajc - 2" pr="62458" num="973" dir="bugs/IfPerThis">
        <compile files="Testcase2.java"></compile>
        <run class="Testcase2"></run>
    </ajc-test>
<ajc-test title="An if() pointcut inside a perthis() clauses an ABORT - null pointer exception in ajc - 3" pr="62458" num="974" dir="bugs/IfPerThis" abccomment="abc supports if inside perclauses;                             the error we do produce is complaining about a                             reference to a static member of the aspect,                             which we ought to support but don't yet - AGS 6/8/04">
        <compile files="Testcase3.java">
        	<ajcmessage text="if() pointcut designator cannot be used directly in a per clause" line="2" kind="error"></ajcmessage>
        </compile>
    </ajc-test>
<ajc-test title="Test of cast pointcuts" num="975" dir="abctests/eaj/casting">
         <compile options="-ext,abc.eaj" files="Test.java"></compile>
         <run class="Test"></run>
    </ajc-test>
<ajc-test title="Test of global and private pointcuts" num="976" dir="abctests/eaj/global_pointcuts">
         <compile options="-ext,abc.eaj" files="aaa/A.java,bbb/B.java"></compile>
         <run class="aaa.A"></run>
    </ajc-test>
<ajc-test title="Test of private pointcuts" num="977" dir="abctests/eaj/local_vars">
         <compile options="-ext,abc.eaj" files="Fibonacci.java,Observer.java"></compile>
         <run class="Fibonacci"></run>
    </ajc-test>
<ajc-test title="cflowbelow in abstract aspects" num="978" dir="abctests/bugs">
          <compile files="AbstractPrec1.java"></compile>
          <run class="AbstractPrec1"></run>
    </ajc-test>
<ajc-test title="packages in wrong place" num="979" dir="abctests/bugs/pack1">
      <compile files="A/B.java">
         <message kind="error"></message>
      </compile>
    </ajc-test>
<ajc-test title="binding of variables inside || pointcuts" num="980" dir="abctests/bugs">
      <compile files="BindProblem.java"></compile>
      <run class="BindProblem"></run>
    </ajc-test>
<ajc-test title="problem with byte constants" num="981" dir="abctests/bugs">
       <compile files="ByteProblem.java"></compile>
    </ajc-test>
<ajc-test title="needing declare parents to resolve inner class reference" num="982" dir="abctests/bugs">
       <compile files="DeclareParentsInner.java"></compile>
    </ajc-test>
<ajc-test title="declare parents on binary classes needs to modify constructor calls 1" num="983" dir="abctests/bugs/declareparentsbinary">
       <compile files="BinaryClasses.jar,Aspect.java"></compile>
       <run class="BinaryClasses"></run>
    </ajc-test>
<ajc-test title="declare parents on binary classes needs to modify constructor calls 2" num="984" dir="abctests/bugs/declareparentsbinary">
       <compile files="BinaryClasses2.jar,Aspect.java">
           
           <message line="24" kind="error" file="BinaryClasses2.java"></message>
       </compile>
    </ajc-test>
<ajc-test title="declare parents referring to an otherwise unmentioned class" num="985" dir="abctests/bugs">
        <compile files="DeclareParentsRef.java"></compile>
    </ajc-test>
<ajc-test title="method intertype onto inner class" num="987" dir="abctests/bugs" abccomment="abc fails in generation of accessors; ajc fails                     at runtime">
	<compile files="QualThis.java"></compile>
	<run class="QualThis"></run>
    </ajc-test>
<ajc-test title="separate compilation and references to compile time constants" num="988" dir="abctests/bugs">
        <compile files="ConstantInit.java"></compile>
        <compile includeClassesDir="true" files="ConstantUse.java"></compile>
        <run class="ConstantUse"></run>
    </ajc-test>
<ajc-test title="lifting if out of cflow, with correct parameters" num="989" dir="abctests/bugs">
        <compile files="CflowIf.java"></compile>
        <run class="CflowIf"></run>
    </ajc-test>
<ajc-test title="lifting if out of cflow, with correct parameters 2" num="990" dir="abctests/bugs">
	<compile files="CflowIf2.java"></compile>
	<run class="CflowIf2"></run>
    </ajc-test>
<ajc-test title="declare parents causes interface to implement itself" num="991" dir="abctests/bugs">
	<compile files="foo/Foo.java">
	    <message line="11" kind="error" file="foo/Foo.java"></message>
	</compile>
    </ajc-test>
<ajc-test title="Try all advice types on the throw joinpoint" num="993" dir="abctests/eaj/throw_pointcut">
        <compile options="-ext,abc.eaj" files="Throw.java">
            <message line="18" kind="warning"></message>
        </compile>
        <run class="Throw"></run>
    </ajc-test>
<ajc-test title="&amp;&amp; and || interact correctly with binding" num="994" dir="abctests/bugs">
       <compile files="AndOrBind.java"></compile>
       <run class="AndOrBind"></run>
    </ajc-test>
<ajc-test title="correct treatment of exceptions with interfaceinvoke" num="995" dir="abctests/bugs">
       <compile files="InterfaceExceptions.java"></compile>
    </ajc-test>
<ajc-test title="anonymous class constructed inside this(...) call" num="996" dir="abctests/bugs">
       <compile files="AnonPreinit.java"></compile>
       <run class="AnonPreinit"></run>
    </ajc-test>
<ajc-test title="verify error with calls to outer methods from inner classes" num="997" dir="abctests/bugs">
       <compile files="PatternMatcher.java"></compile>
       <run class="PatternMatcher"></run>
    </ajc-test>
<ajc-test title="declare parents causes interface to implement itself" num="998" dir="abctests/bugs">
	<compile files="foo2/Foo.java"></compile>
    </ajc-test>
<ajc-test title="declare parents/protected access/inner classes" num="999" dir="abctests/bugs/declareparentsprotectedaccessinnerclasses">
	<compile files="A.java,bar/C.java"></compile>
    </ajc-test>
<ajc-test title="resolving and declared parents" num="1000" dir="abctests/bugs/resolvingdeclareparents">
	<compile files="B.java"></compile>
	<compile files="A.java" classpath="."></compile>
    </ajc-test>
<ajc-test title="double declare parents" num="1002" dir="abctests/bugs/doubledeclareparents">
         <compile files="A.java"></compile>
    </ajc-test>
<ajc-test title="interaction of around and after returning at execution shadow" num="1003" dir="abctests/bugs">
         <compile files="AroundAR.java"></compile>
         <run class="AroundAR"></run>
    </ajc-test>
<ajc-test title="around with initialization" num="1004" dir="abctests/around/initialization">
         <compile files="Foo.java"></compile>
         <run class="Foo"></run>
    </ajc-test>
<ajc-test title="around with alternative binding, changed proceed" num="1005" dir="abctests/around/alternative">
         <compile files="Foo.java"></compile>
         <run class="Foo"></run>
    </ajc-test>
<ajc-test title="around with circular adviceexecution advice" num="1006" dir="abctests/around/adviceexecution">
         <compile files="Foo.java">
                  <message line="10" kind="warning"></message>
         </compile>
         <run class="Foo"></run>
    </ajc-test>
<ajc-test title="make sure we get valid jimple for perthis/pertarget bind methods" num="1007" dir="abctests/bugs">
         <compile options="-debug,doValidate" files="PerTarget.java"></compile>
         <run class="PerTarget"></run>
    </ajc-test>
<ajc-test title="precedence of percflowsetups" num="1008" dir="abctests/bugs/percflowinterfaces">
         <compile files="F.java"></compile>
    </ajc-test>
<ajc-test title="correct interaction of advice and constructor inlining" num="1009" dir="abctests/bugs">
         <compile files="InlinedCons.java"></compile>
         <run class="InlinedCons"></run>
    </ajc-test>
<ajc-test title="correct handling of methods in source with $ in the name 1" num="1010" dir="abctests/bugs">
         <compile files="DollarMethod.java"></compile>
         <run class="DollarMethod"></run>
    </ajc-test>
<ajc-test title="correct handling of methods in source with $ in the name 2" num="1011" dir="abctests/bugs">
         <compile files="DollarMethod2.java"></compile>
         <run class="DollarMethod2"></run>
    </ajc-test>
<ajc-test title="correct handling of methods in source with $ in the name 3" num="1012" dir="abctests/bugs">
         <compile files="Dollar$Method3.java"></compile>
         <run class="Dollar$Method3"></run>
    </ajc-test>
<ajc-test title="circular pointcuts" num="1013" dir="abctests/bugs">
         <compile files="TestAspect.java">
            <message line="11" kind="error"></message>
            <message line="12" kind="error"></message>
         </compile>
    </ajc-test>
<ajc-test title="interaction of named pointcuts and nested cflow" num="1014" dir="abctests/bugs">
         <compile files="CflowInliningDepth.java"></compile>
         <run class="CflowInliningDepth"></run>
    </ajc-test>
<ajc-test title="correct topological sorting of precedence" num="1015" dir="abctests/bugs">
         <compile files="PrecedenceSort.java"></compile>
    </ajc-test>
<ajc-test title="checks for declare parents on binary classes" num="1016" dir="abctests/bugs">
         <compile files="declareparentsbinary/DP.jar,DeclareParentsBinaryAspect.java">
            <message kind="error"></message>
            <message kind="error"></message>
            <message kind="error"></message>
            <message kind="error"></message>
            <message kind="error"></message>
            <message kind="error"></message>
            <message kind="error"></message>
            <message kind="error"></message>
         </compile>
    </ajc-test>
<ajc-test title="around weaver incorrectly unboxing double literals in float context" num="1017" dir="abctests/bugs">
        <compile files="AroundUnboxing.java"></compile>
        <run class="AroundUnboxing"></run>
    </ajc-test>
<ajc-test title="internal around weaver error when trying to capture proceed() into a closure" num="1018" dir="abctests/bugs">
        <compile files="ExtractedProceed.java">
         <message kind="warning"></message>
          <message kind="warning"></message>
        </compile>
    </ajc-test>
<ajc-test title="Tracematches: Basic tracematch" num="1019" dir="abctests/tracematches">
        <compile options="-ext,abc.tm" files="Basic.java"></compile>
        <run class="Basic"></run>
    </ajc-test>
<ajc-test title="Tracematches: Plus and Star" num="1020" dir="abctests/tracematches">
        <compile options="-ext,abc.tm" files="PlusStar.java"></compile>
        <run class="PlusStar"></run>
    </ajc-test>
<ajc-test title="Tracematches: Alternation" num="1021" dir="abctests/tracematches">
        <compile options="-ext,abc.tm" files="Alternation.java"></compile>
	<run class="Alternation"></run>
    </ajc-test>
<ajc-test title="Tracematches: Basic variable bindings" num="1022" dir="abctests/tracematches">
        <compile options="-ext,abc.tm" files="Variables.java"></compile>
	<run class="Variables"></run>
    </ajc-test>
<ajc-test title="Failsafe enumerations: tracematch version 1" num="1023" dir="abctests/tracematches/failsafe">
        <compile options="-ext,abc.tm" files="leaktest/LeakTest.java,tracematches/FailSafeEnum.java"></compile>
	<run class="leaktest.LeakTest"></run>
    </ajc-test>
<ajc-test title="Failsafe enumerations: tracematch version 2" num="1024" dir="abctests/tracematches/failsafe3">
        <compile options="-ext,abc.tm" files="leaktest/LeakTest.java,tracematches/FailSafeEnum.java"></compile>
	<run class="leaktest.LeakTest"></run>
    </ajc-test>
<ajc-test title="Failsafe enumerations: tracematch version 3" num="1025" dir="abctests/tracematches/failsafe4">
        <compile options="-ext,abc.tm" files="leaktest/LeakTest.java,tracematches/FailSafeEnum.java"></compile>
	<run class="leaktest.LeakTest"></run>
    </ajc-test>
<ajc-test title="Tracematches: NoSuchMethodError (shouldn't occur..)" num="1026" dir="abctests/tracematches">
        <compile options="-ext,abc.tm" files="Test.java"></compile>
	<run class="Test"></run>
    </ajc-test>
<ajc-test title="Tracematches: Negative bindings should be checked correctly..." num="1027" dir="abctests/tracematches">
        <compile options="-ext,abc.tm" files="NegBindings.java"></compile>
	<run class="NegBindings"></run>
    </ajc-test>
<ajc-test title="Tracematches: states where x may be bound or unbound" num="1028" dir="abctests/tracematches">
        <compile options="-ext,abc.tm" files="MoreBindings.java"></compile>
        <run class="MoreBindings"></run>
    </ajc-test>
<ajc-test title="Tracematches: Basic around tracematch" num="1029" dir="abctests/tracematches">
        <compile options="-ext,abc.tm" files="BasicAround.java"></compile>
        <run class="BasicAround"></run>
    </ajc-test>
<ajc-test title="Tracematches: Around match with multiple bindings." num="1030" dir="abctests/tracematches">
        <compile options="-ext,abc.tm" files="MultipleBindingsForAround.java">
            <message line="24" kind="warning"></message>
        </compile>
        <run class="MultipleBindingsForAround"></run>
    </ajc-test>
<ajc-test title="Tracematches: Testing the `perthread' modifier" num="1031" dir="abctests/tracematches">
        <compile options="-ext,abc.tm" files="PerThread.java"></compile>
        <run class="PerThread"></run>
    </ajc-test>
<ajc-test title="Tracematches: Testing self-applying around TM-advice" num="1032" dir="abctests/tracematches">
        <compile options="-ext,abc.tm" files="AdviseSelf.java"></compile>
        <run class="AdviseSelf"></run>
    </ajc-test>
<ajc-test title="Tracematches: Testing if pointcuts in symbols" num="1033" dir="abctests/tracematches">
        <compile options="-ext,abc.tm" files="IfTest.java"></compile>
        <run class="IfTest"></run>
    </ajc-test>
<ajc-test title="Tracematches: When there is some() advice but not per-symbol" num="1034" dir="abctests/tracematches">
        <compile options="-ext,abc.tm" files="NoUpdates.java"></compile>
        <run class="NoUpdates"></run>
	</ajc-test>
<ajc-test title="Tracematches: Basic primitive variable bindings" num="1035" dir="abctests/tracematches">
        <compile options="-ext,abc.tm" files="PrimitiveVariables.java">
	    <message kind="warning"></message>
	</compile>
	<run class="PrimitiveVariables"></run>
    </ajc-test>
<ajc-test title="Tracematches: Primitive bindings don't cause errors." num="1036" dir="abctests/tracematches">
	<compile options="-ext,abc.tm" files="IntVariable.java"></compile>
	<run class="IntVariable"></run>
    </ajc-test>
<ajc-test title="Tracematches: Primitive negative bindings should be checked correctly..." num="1037" dir="abctests/tracematches">
        <compile options="-ext,abc.tm" files="PrimNegBindings.java">
	    <message kind="warning"></message>
	</compile>
	<run class="PrimNegBindings"></run>
    </ajc-test>
<ajc-test title="Tracematches: Non-collectable weak bindings work correctly (Strings)" num="1038" dir="abctests/tracematches">
        <compile options="-ext,abc.tm" files="NCWeakRefs.java">
	    <message kind="warning"></message>
	</compile>
	<run class="NCWeakRefs"></run>
    </ajc-test>
<ajc-test title="Tracematches: Non-collectable weak bindings work correctly (Objects)" num="1039" dir="abctests/tracematches">
        <compile options="-ext,abc.tm" files="NCWeakRefs2.java">
	    <message kind="warning"></message>
	</compile>
	<run class="NCWeakRefs2"></run>
    </ajc-test>
<ajc-test title="Tracematches: Collectable weak bindings work correctly (Strings)" num="1040" dir="abctests/tracematches">
        <compile options="-ext,abc.tm" files="CollWeakRefs.java">
	</compile>
	<run class="CollWeakRefs"></run>
    </ajc-test>
<ajc-test title="Simple module compile" num="1101" keywords="openmod" dir="om/simple">
        <compile options="-ext,abc.om" files="ModuleTest.java,          ModuleTest2.java,          ModuleTest3.java,          A.java,          Another.java,          AnotherChild.java,          AspectA.aj,          AspectB.aj"></compile>
    </ajc-test>
<ajc-test title="Duplicate module name" num="1102" keywords="openmod,negative" dir="om/duplicatemodule">
        <compile options="-ext,abc.om" files="DuplicateModule1.java,             DuplicateModule2.java,             A.java,             Another.java,             AnotherChild.java,             AspectA.aj,             AspectB.aj">
          <message line="1" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Non-existent aspect" num="1103" keywords="openmod,negative" dir="om/nonexistentaspect">
        <compile options="-ext,abc.om" files="NonExistentAspect.java,           A.java,           Another.java,           AnotherChild.java,           AspectA.aj,           AspectB.aj">
          <message line="2" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Non-existent module" num="1104" keywords="openmod,negative" dir="om/nonexistentmodule">
        <compile options="-ext,abc.om" files="NonExistentModule.java,             A.java,             Another.java,             AnotherChild.java,             AspectA.aj,             AspectB.aj">
          <message line="2" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Duplicate module include" num="1105" keywords="openmod,negative" dir="om/duplicatemoduleinclude">
        <compile options="-ext,abc.om" files="DuplicateModuleInclude.java,           DuplicateModuleInclude1.java,           DuplicateModuleInclude2.java,           A.java,           Another.java,           AnotherChild.java,           AspectA.aj,           AspectB.aj">
          <message line="2" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Duplicate aspect include" num="1106" keywords="openmod,negative" dir="om/duplicateaspectinclude">
        <compile options="-ext,abc.om" files="DuplicateAspectInclude1.java,           DuplicateAspectInclude2.java,           A.java,           Another.java,           AnotherChild.java,           AspectA.aj,           AspectB.aj">
          <message line="2" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Circular module include" num="1107" keywords="openmod,negative" dir="om/circularmoduleinclude" abccomment="Errors point to the module name, and not the offending include">
        <compile options="-ext,abc.om" files="Circular1.java,           Circular2.java,           Circular3.java,           A.java,           Another.java,           AnotherChild.java,           AspectA.aj,           AspectB.aj">
          <message line="1" kind="error"></message>
          <message line="1" kind="error"></message>
          <message line="1" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Class included in multiple modules" num="1108" keywords="openmod,negative" dir="om/duplicateclassinclude">
        <compile options="-ext,abc.om" files="DuplicateClassInclude1.java,             DuplicateClassInclude2.java,             A.java,             Another.java,             AnotherChild.java,             AspectA.aj,             AspectB.aj">
          <message line="9-20" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Basic matching test" num="1109" keywords="openmod" dir="om/matchtest">
        <compile options="-ext,abc.om" files="Module1.java,             Module2.java,             MatchTestA.java,             MatchTestB.java,             MatchTestMain.java,             AspectA.aj,             AspectB.aj,             AspectC.aj">
		
		<message line="15" kind="warning"></message>
		<message line="15" kind="warning"></message>
		<message line="18" kind="warning"></message>
        </compile>
        <run class="MatchTestMain"></run>
    </ajc-test>
<ajc-test title="External call only test" num="1110" keywords="openmod" dir="om/extcalltest">
        <compile options="-ext,abc.om" files="FibMod.java,             A.java,             ExtCallTestMain.java,             FibAspect.aj,             FibExtAspect.aj">
			<message line="12" kind="warning"></message>
			<message line="12" kind="warning"></message>
        </compile>
        <run class="ExtCallTestMain"></run>
    </ajc-test>
<ajc-test title="Fib (Aldrich) precedence test" num="1111" keywords="openmod" dir="om/prectest">
        <compile options="-ext,abc.om" files="Module1.java,             A.java,             PrecTestMain.java,             Fib.aj,             ACache.aj,             PrecFibExtAspect.aj">
			<message line="9" kind="warning"></message>
			<message line="9" kind="warning"></message>
        </compile>
        <run class="PrecTestMain"></run>
    </ajc-test>
<ajc-test title="Fib (Aldrich) reverse precedence test" num="1112" keywords="openmod" dir="om/prectest">
        <compile options="-ext,abc.om" files="Module2.java,             A.java,             PrecTestMain2.java,             Fib.aj,             ACache.aj,             PrecFibExtAspect.aj">
			<message line="9" kind="warning"></message>
			<message line="9" kind="warning"></message>
        </compile>
        <run class="PrecTestMain2"></run>
    </ajc-test>
<ajc-test title="Empty signature test" num="1113" keywords="openmod" dir="om/emptysigtest">
        <compile options="-ext,abc.om" files="Module.java,             A.java,             EmptySigTestMain.java,             AspectA.aj">
	        <message line="15" kind="warning"></message>
        </compile>
        <run class="EmptySigTestMain"></run>
    </ajc-test>
<ajc-test title="Signature inheritance test" num="1114" keywords="openmod" dir="om/inheritsigtest">
        <compile options="-ext,abc.om" files="ModuleA.java,             ModuleB.java,             ModuleC.java,             A.java,             B.java,             C.java,             InheritSigTest.java,             ExtAspectA.aj">
			<message line="17" kind="warning"></message>
			<message line="18" kind="warning"></message>
			<message line="22" kind="warning"></message>
			<message line="25" kind="warning"></message>
        </compile>
        <run class="InheritSigTest"></run>
    </ajc-test>
<ajc-test title="CFlow signature test" num="1115" keywords="openmod" dir="om/cflowsigtest">
        <compile options="-ext,abc.om" files="Module.java,             A.java,             CflowSigTestMain.java,             CFlowAspect.aj">
        </compile>
        <run class="CflowSigTestMain"></run>
    </ajc-test>
<ajc-test title="Args matching test" num="1116" keywords="openmod" dir="om/argstest">
        <compile options="-ext,abc.om" files="Module.java,             A.java,             ArgsTestMain.java,             ArgsAspect.aj">
			<message line="16" kind="warning"></message>
        </compile>
        <run class="ArgsTestMain"></run>
    </ajc-test>
<ajc-test title="Empty module test" num="1117" keywords="openmod" dir="om/emptymoduletest">
        <compile options="-ext,abc.om" files="Module.java,             A.java,             EmptyModuleTestMain.java,             AspectA.aj">
        </compile>
        <run class="EmptyModuleTestMain"></run>
    </ajc-test>
<ajc-test title="Private signature test" num="1118" keywords="openmod" dir="om/privatesigtest">
        <compile options="-ext,abc.om" files="ModuleA.java,             ModuleB.java,             ModuleC.java,             A.java,             B.java,             C.java,             PrivateSigTest.java,             ExtAspectA.aj">
			<message line="17" kind="warning"></message>
			<message line="18" kind="warning"></message>
			<message line="20" kind="warning"></message>
			<message line="22" kind="warning"></message>
			<message line="24" kind="warning"></message>
        </compile>
        <run class="PrivateSigTest"></run>
    </ajc-test>
<ajc-test title="Constrained module inclusion test" num="1119" keywords="openmod" dir="om/constraintest">
        <compile options="-ext,abc.om" files="ModuleA.java,             ModuleB.java,             ModuleC.java,             A.java,             B.java,             C.java,             AspectA.java,             AspectB.java,             AspectC.java,             ConstrainTestMain.java,             ExtAspectA.aj">
			<message line="17" kind="warning"></message>
			<message line="17" kind="warning"></message>
			<message line="17" kind="warning"></message>
			<message line="18" kind="warning"></message>
			<message line="18" kind="warning"></message>
			<message line="18" kind="warning"></message>
			<message line="22" kind="warning"></message>
			<message line="22" kind="warning"></message>
			<message line="26" kind="warning"></message>
        </compile>
        <run class="ConstrainTestMain"></run>
    </ajc-test>
<ajc-test title="Precedence inheritance test" num="1120" keywords="openmod" dir="om/inheritprectest">
        <compile options="-ext,abc.om" files="ModuleA.java,             ModuleB.java,             ModuleC.java,             A.java,             AspectA.aj,             AspectB.aj,             AspectC.aj,             InheritPrecTestMain.java">
        </compile>
        <run class="InheritPrecTestMain"></run>
    </ajc-test>
<ajc-test title="Multiple modules in a single file" num="1121" keywords="openmod" dir="om/multimodtest">
        <compile options="-ext,abc.om" files="Modules.java,             A.java,             B.java,             C.java,             MultiModTest.java,             ExtAspectA.aj">
			<message line="17" kind="warning"></message>
			<message line="18" kind="warning"></message>
			<message line="22" kind="warning"></message>
			<message line="25" kind="warning"></message>
        </compile>
        <run class="MultiModTest"></run>
    </ajc-test>
<ajc-test title="If pointcut signatures" num="1122" keywords="openmod" dir="om/iftest">
        <compile options="-ext,abc.om" files="Module.java,             AspectA.java,             AspectB.java,             IfTest.java">
        </compile>
        <run class="IfTest"></run>
    </ajc-test>
<ajc-test title="Inclusion with empty signatures" num="1123" keywords="openmod" dir="om/emptysiginctest">
        <compile options="-ext,abc.om" files="Module.java,             AspectA.aj,             A.java,             B.java,             C.java,             EmptySigIncTestMain.java">
			<message line="15" kind="warning"></message>
			<message line="16" kind="warning"></message>
			<message line="18" kind="warning"></message>
			<message line="19" kind="warning"></message>
			<message line="21" kind="warning"></message>
			<message line="22" kind="warning"></message>
        </compile>
        <run class="EmptySigIncTestMain"></run>
    </ajc-test>
<ajc-test title="Aspects in packages" num="1124" keywords="openmod" dir="om/packagetest">
        <compile options="-ext,abc.om" files="Module.java,             PackageTestMain.java,             pack1/A.java,             pack1/AspectA.java,             pack2/A.java,             pack2/AspectA.java">
			<message line="6" kind="warning"></message>
        </compile>
        <run class="PackageTestMain"></run>
    </ajc-test>
<ajc-test title="Root module test" num="1125" keywords="openmod" dir="om/roottest">
        <compile options="-ext,abc.om" files="Module.java,             RootTestMain.java,             A.java,             AspectA.java">
			<message line="16" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="To test" num="1126" keywords="openmod" dir="om/totest">
        <compile options="-ext,abc.om" files="Module.java,             ToTestMain.java,             A.java,             ExtAspectA.java,             ExtAspectB.java">
			<message line="5" kind="warning"></message>
			<message line="7" kind="warning"></message>
        </compile>
        <run class="ToTestMain"></run>
    </ajc-test>
<ajc-test title="omants test" num="1127" keywords="openmod" dir="om/omantstest">
        <compile options="-ext,abc.om" files="automaton/Automaton.java,       benchmark/Main.java,       command/Command.java,       command/Comment.java,       command/Condition.java,       command/Drop.java,       command/Flip.java,       command/Foe.java,       command/FoeHome.java,       command/FoeMarker.java,       command/FoeWithFood.java,       command/Food.java,       command/Friend.java,       command/FriendWithFood.java,       command/Home.java,       command/Mark.java,       command/Marker.java,       command/Move.java,       command/PickUp.java,       command/Rock.java,       command/Sense.java,       command/Turn.java,       command/Unmark.java,       debug/CheckScores.java,       debug/CommandTracer.java,       debug/LiveAnts.java,       debug/WorldDumper.java,       main/Main.java,       model/Ant.java,       model/Cell.java,       model/Color.java,       model/Combat.java,       model/Resting.java,       model/World.java,       modules/Modules.java,       parser/CommandParser.java,       profile/NoNewInCmd.java,       profile/NoNewInRound.java,       style/PublicAccessFields.java,       viewer/Board.java,       viewer/Bug.java,       viewer/Hexagon.java,       viewer/Update.java,       viewer/Viewer.java">
        </compile>
    </ajc-test>
<ajc-test title="Second inherit precedence test (checks for precedence of aspects of included modules)" num="1128" keywords="openmod" dir="om/inheritprectest2">
        <compile options="-ext,abc.om" files="Modules.java,             InheritPrecTestMain2.java">
        </compile>
        <run class="InheritPrecTestMain2"></run>
    </ajc-test>
<ajc-test title="Module precedence test" num="1129" keywords="openmod" dir="om/modprectest">
        <compile options="-ext,abc.om" files="Modules.java,             ModPrecTestMain.java">
        </compile>
        <run class="ModPrecTestMain"></run>
    </ajc-test>
<ajc-test title="Module-Aspect cycle detection test" num="1130" keywords="openmod,negative" dir="om/modprecaspectcycletest">
        <compile options="-ext,abc.om" files="Modules.java,             ModPrecAspectCycleTest.java">
			<message line="0" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Module-Module cycle detection test" num="1131" keywords="openmod,negative" dir="om/modprecmodcycletest">
        <compile options="-ext,abc.om" files="Modules.java,             ModPrecModCycleTest.java">
			<message line="1-5" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Cflowdepth Factorial" num="1200" dir="cflowdepth">
        <compile options="-ext,abc.eaj" files="Fact.java">
        </compile>
        <run class="Fact"></run>
    </ajc-test>
<ajc-test title="Cflowdepth Factorial with arguments" num="1201" dir="cflowdepth">
        <compile options="-ext,abc.eaj" files="Fact2.java">
        </compile>
        <run class="Fact2"></run>
    </ajc-test>
<ajc-test title="Cflowbelowdepth Factorial" num="1202" dir="cflowdepth">
        <compile options="-ext,abc.eaj" files="Fact3.java">
        </compile>
        <run class="Fact3"></run>
    </ajc-test>
<ajc-test title="Cflowbelowdepth Factorial with arguments" num="1203" dir="cflowdepth">
        <compile options="-ext,abc.eaj" files="Fact4.java">
        </compile>
        <run class="Fact4"></run>
    </ajc-test>
<ajc-test title="Cflowdepth Factorial" num="1204" dir="cflowdepth">
        <compile options="-ext,abc.eaj" files="Fact5.java">
            <message line="14" kind="error"></message>
            <message line="17" kind="error"></message>
            <message line="22" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Preinit weaving problem" num="1205" dir="abctests/bugs">
        <compile files="Preinit.java"></compile>
        <run class="Preinit"></run>
    </ajc-test>
<ajc-test title="Preinit weaving problem (test 2)" num="1206" dir="abctests/bugs">
        <compile files="Preinit2.java"></compile>
        <run class="Preinit2"></run>
    </ajc-test>
<ajc-test title="Problem with privileged ITD access to private fields" num="1207" dir="abctests/bugs">
        <compile files="ITDPrivate.java"></compile>
        <run class="ITDPrivate"></run>
    </ajc-test>
<ajc-test title="Using private pointcut variables in an if(..) in a TM symbol" num="1209" dir="abctests/tracematches">
        <compile options="-ext,abc.tm" files="TracematchAndIfAndPPVs.java"></compile>
    </ajc-test>
<ajc-test title="thisJoinPoint maintains object identity for an entire join point" num="1210" dir="abctests/bugs">
        <compile files="TJP.java"></compile>
        <run class="TJP"></run>
    </ajc-test>
<ajc-test title="concrete pointcuts in abstract aspects can be overridden" num="1211" dir="abctests/new">
        <compile files="PCInh.java"></compile>
        <run class="PCInh"></run>
    </ajc-test>
<ajc-test title="Cflowdepth in complicated booleans" num="1212" dir="cflowdepth">
        <compile options="-ext,abc.eaj" files="Test.java">
        </compile>
        <run class="Test"></run>
    </ajc-test>
<ajc-test title="Precedence of derived advice" num="1213" dir="abctests/bugs">
        <compile files="DerivedAdvicePrecedence.java">
        </compile>
        <run class="DerivedAdvicePrecedence"></run>
    </ajc-test>
<ajc-test title="Contains static test" num="1214" dir="contains/checkstatic">
        <compile options="-ext,abc.eaj" files="ContainsTest.java">
          <message line="3" kind="error"></message>  
          <message line="4" kind="error"></message>  
        </compile>
    </ajc-test>
<ajc-test title="Contains basic matching test" num="1215" dir="contains/basic">
        <compile options="-ext,abc.eaj" files="ContainsTest.java">
        </compile>
        <run class="ContainsTest"></run>
    </ajc-test>
 
</suite>
