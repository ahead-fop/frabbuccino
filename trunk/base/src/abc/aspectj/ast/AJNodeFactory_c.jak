/* abc - The AspectBench Compiler
 * Copyright (C) 2004 Oege de Moor
 *
 * This compiler is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This compiler is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this compiler, in the file LESSER-GPL;
 * if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 */

//package abc.aspectj.ast;

import java.util.List;
import polyglot.ast.ClassBody;
import polyglot.ast.ClassDecl;
import polyglot.ast.Expr;
import polyglot.ast.New;
import polyglot.ast.TypeNode;
import polyglot.types.Flags;
import polyglot.util.Position;
import abc.aspectj.extension.AJClassDecl_c;
import abc.aspectj.extension.AJNew_c;


/**
 * NodeFactory for aspectj extension.
 * @author Oege de Moor
 */
public class AJNodeFactory_c 
    extends soot.javaToJimple.jj.ast.JjNodeFactory_c {

    public AJNodeFactory_c() { }

    public New New(Position pos,Expr qualifier, TypeNode tn,
            List arguments, ClassBody body) {
        return new AJNew_c(pos, qualifier, tn, arguments, body);
    }

    public ClassDecl ClassDecl(Position pos, Flags flags, String name,
            TypeNode superClass, List interfaces, ClassBody body) {
        return new AJClassDecl_c(pos, flags, name, superClass, interfaces, body);
    }

}
